[
  {
    "quote": "Our aspirations grow faster than our capabilities, so <b>I don't expect software development to ‘get solved.’</b>",
    "title": "Continuing Prospects for an Engineering Discipline of Software",
    "year": 2009,
    "number": 6,
    "page": 64,
    "doiLink": "https://doi.ieeecomputersociety.org/10.1109/MS.2009.172",
    "selected": false,
    "authorsList": "Mary Shaw",
    "citation": "M. Shaw, Continuing Prospects for an Engineering Discipline of Software, IEEE Software 2009 (6), p. 64."
  },
  {
    "quote": "Developers of <b>systems of systems</b> face challenges such as <b>heterogeneous</b>, <b>inconsistent</b>, and changing elements; continuous evolution and deployment; decentralized control; and inherently <b>conflicting</b> and often <b>unknowable</b> requirements.",
    "title": "Monitoring Requirements in Systems of Systems",
    "year": 2016,
    "number": 5,
    "page": 22,
    "doiLink": "https://doi.ieeecomputersociety.org/10.1109/MS.2016.112",
    "authorsList": "M. Vierhauser, R. Rabiser, P. Granbacher",
    "citation": "M. Vierhauser, R. Rabiser, P. Granbacher, “Monitoring Requirements in Systems of Systems”, IEEE Software 2016 (issue 5), p. 22"
  },
  {
    "quote": "<b>The fast-changing nature</b> of our field is one of the things that make working in software so much <b>fun</b> — and so <b>challenging</b>.",
    "title": "The Only Constant Is Change",
    "year": 2013,
    "number": 4,
    "page": 4,
    "doiLink": "https://doi.ieeecomputersociety.org/10.1109/MS.2013.115",
    "authorsList": "Forrest Shull",
    "citation": ""
  },
  {
    "quote": "Twenty years is a very long time in the computing field. Yet, SEPM (Software Engineering Projects Management)’s progress has been agonizingly slow in many ways, probably because it's driven more by human behavior than by technology. <b>People change their behavior much more slowly than technology advances</b>.",
    "title": "Guest Editors' Introduction: Software Engineering Project Management 20 Years Later",
    "year": 2005,
    "number": 5,
    "page": 10,
    "doiLink": "https://doi.ieeecomputersociety.org/10.1109/MS.2005.137",
    "authorsList": "A. B. Pyster and R. H. Thayer",
    "citation": ""
  },
  {
    "quote": "You could view <b>maintenance</b> as an impending <b>operational cost tsunami</b>, owing to seismic development activities. It’s no longer tenable to keep creating new individual solutions to the same basic problems because those solutions must be maintained as long as they live, binding expensive human resources that are constantly declining.",
    "title": "From Software Development to Software Assembly",
    "year": 2016,
    "number": 5,
    "page": 80,
    "doiLink": "https://doi.ieeecomputersociety.org/10.1109/MS.2015.78",
    "authorsList": "H. M. Sneed and C. Verhoef",
    "citation": "H. M. Sneed and C. Verhoef, From Software Development to Software Assembly, in IEEE Software, vol. 33, no. 5, pp. 80-85, 2016"
  },
  {
    "quote": "The capacity to <b>reflect on past practice</b> is important for continuous learning in software development. Reflection often takes place in cycles of experience followed by conscious application of learning from that experience, during which a software developer might explore comparisons, ponder alternatives, take diverse perspectives, and draw inferences, especially in new and/or complex situations.",
    "title": "The Reflective Software Engineer: Reflective Practice",
    "year": 2014,
    "number": 4,
    "page": 32,
    "doiLink": "https://doi.ieeecomputersociety.org/10.1109/MS.2014.97",
    "authorsList": "T. Dybea, N. Maiden, R. L. Glass",
    "citation": "T. Dybea, N. Maiden, R. L. Glass, The Reflective Software Engineer: Reflective Practice, IEEE Software 2014 (issue 4), p. 32"
  },
  {
    "quote": "<b>High-maintenance code</b> not only is verbose but also tends to rely on unstated, poorly stated, or incompletely stated assumptions. If you want to understand that type of code, you need long chains of reasoning to figure out how and why it works, and under which conditions it could start failing when other parts of the system are updated. <b>The reliance on hidden assumptions</b> is probably the most telling feature of high-maintenance code.",
    "title": "Hi Maintenance",
    "year": 2016,
    "number": 6,
    "page": 98,
    "doiLink": "https://doi.ieeecomputersociety.org/10.1109/MS.2016.153",
    "authorsList": "G. J. Holzmann",
    "citation": "G. J. Holzmann, Hi Maintenance - IEEE Software 2016 (issue 6), p. 98"
  },
  {
    "quote": "It's also important to understand the difference between what a single programmer can do and what large teams of programmers can do. Even <b>the best practices of refactoring are really a joke</b> in the context of <b>a large legacy application</b>. Refactoring tools really don't help you with large legacies.",
    "title": "Innovating Legacy Systems",
    "year": 2016,
    "number": 2,
    "page": 105,
    "doiLink": "https://doi.ieeecomputersociety.org/10.1109/MS.2016.38",
    "authorsList": "Dave Thomas",
    "citation": ""
  },
  {
    "quote": "If estimating the time needed for implementing some software is difficult, coming up with a figure for <b>the time required to debug</b> it is nigh on impossible.",
    "title": "Differential Debugging",
    "year": 2013,
    "number": 5,
    "page": 19,
    "doiLink": "https://doi.ieeecomputersociety.org/10.1109/MS.2013.103",
    "authorsList": "D. Spinellis",
    "citation": ""
  },
  {
    "quote": "A strong common theme among the managers interviewed was the person’s ability to <b>communicate</b> with both peers and managers … Most of the managers are looking for someone who will be <b>a good team player</b> - someone who can work for the good of the group and apply his skills and talents to <b>assist collective goals</b>. … I look for someone I can motivate and who <b>wants to be motivated</b>...",
    "title": "Looking For the Best Software Engineers",
    "year": 1989,
    "number": 4,
    "page": 107,
    "doiLink": "https://doi.ieeecomputersociety.org/10.1109/52.31661",
    "authorsList": "E. Chikofsky",
    "citation": ""
  },
  {
    "quote": "Do I think that there are some universals? Absolutely I do. And looking for <b>a team or cultural fit</b>, looking for people who are <b>motivated</b> and have good <b>communication</b> and good <b>collaboration</b>, my suspicion is that those are universal qualities that make people successful.",
    "title": "Hiring in the Software Industry",
    "year": 2014,
    "number": 6,
    "page": 96,
    "doiLink": "https://doi.ieeecomputersociety.org/10.1109/MS.2014.140",
    "authorsList": "T. Kaatz",
    "citation": ""
  },
  {
    "quote": "<b>Combining paradigms</b> offers important benefits—for example, OOP minimizes the conceptual gap between the problem domain and the implementation in software, and functional programming (FP) brings mathematical rigor and robustness to computing, especially for concurrent applications.",
    "title": "Guest Editors' Introduction: Multiparadigm Programming",
    "year": 2010,
    "number": 5,
    "page": 20,
    "doiLink": "https://doi.ieeecomputersociety.org/10.1109/MS.2010.119",
    "authorsList": "D. Wampler, T. Clark",
    "citation": ""
  },
  {
    "quote": "Although intensive research on <b>software analytics</b> has been going on for nearly a decade, a repeated complaint in software analytics is that industrial practitioners find it <b>hard to apply the results</b> generated from data science.",
    "title": "Actionable Analytics for Software Engineering",
    "year": 2018,
    "number": 1,
    "page": 51,
    "doiLink": "https://doi.ieeecomputersociety.org/10.1109/MS.2017.4541039",
    "authorsList": "Y. Yang, D. Falessi, T. Menzies and J. Hihn",
    "citation": ""
  },
  {
    "quote": "New wiring transformed <b>ENIAC</b> into a versatile stored-program computer. <b>Rewiring Internet of Things infrastructures</b> into a <b>general-purpose computing fabric</b> can similarly change how modern computation interfaces with our environment.",
    "title": "Software-Engineering the Internet of Things",
    "year": 2017,
    "number": 1,
    "page": 4,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2017.15",
    "selected": false,
    "authors": [],
    "authorsList": "Diomidis Spinellis",
    "citation": "Diomidis Spinellis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2017.15\">Software-Engineering the Internet of Things</a>, IEEE Software 2017, no. 1, p. 4",
    "searchText": ""
  },
  {
    "quote": "The proper <b>alignment of requirements engineering and testing</b> (RET) can be key to software's success. Three practices can provide effective RET alignment: using <b>test cases</b> as requirements, harvesting <b>trace links</b>, and <b>reducing distances</b> between requirements engineers and testers.",
    "title": "Aligning Requirements and Testing: Working Together toward the Same Goal",
    "year": 2017,
    "number": 1,
    "page": 20,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2017.14",
    "selected": false,
    "authors": [
      {
        "name": "Elizabeth Bjarnason",
        "link": ""
      },
      {
        "name": "Markus Borg",
        "link": ""
      }
    ],
    "authorsList": "Elizabeth Bjarnason, Markus Borg",
    "citation": "Elizabeth Bjarnason, Markus Borg, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2017.14\">Aligning Requirements and Testing: Working Together toward the Same Goal</a>, IEEE Software 2017, no. 1, p. 20",
    "searchText": ""
  },
  {
    "quote": "No consolidated set of software engineering <b>best practices</b> for the <b>Internet of Things (IoT)</b> has yet emerged. Too often, the landscape resembles <b>the Wild West</b>, with unprepared programmers putting together IoT systems in ad hoc fashion and throwing them out into the market, often poorly tested. In addition, the academic sector is in danger of fragmenting into specialized, often unrelated research areas.",
    "title": "Software Engineering for the Internet of Things",
    "year": 2017,
    "number": 1,
    "page": 24,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2017.28",
    "selected": false,
    "authors": [
      {
        "name": "Xabier Larrucea",
        "link": ""
      },
      {
        "name": "Annie Combelles",
        "link": ""
      },
      {
        "name": "John Favaro",
        "link": ""
      },
      {
        "name": "Kunal Taneja",
        "link": ""
      }
    ],
    "authorsList": "Xabier Larrucea, Annie Combelles, John Favaro, Kunal Taneja",
    "citation": "Xabier Larrucea, Annie Combelles, John Favaro, Kunal Taneja, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2017.28\">Software Engineering for the Internet of Things</a>, IEEE Software 2017, no. 1, p. 24",
    "searchText": ""
  },
  {
    "quote": "The <b>Internet of Things (IoT)</b> is a challenging combination of <b>distribution and heterogeneity</b>. A number of software engineering solutions address those challenges in isolation, but few solutions tackle them in combination, which poses a set of concrete challenges. The <b>ThingML</b> (Internet of Things Modeling Language) approach attempts to address those challenges.",
    "title": "Model-Based Software Engineering to Tame the IoT Jungle",
    "year": 2017,
    "number": 1,
    "page": 30,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2017.11",
    "selected": false,
    "authors": [
      {
        "name": "Brice Morin",
        "link": ""
      },
      {
        "name": "Nicolas Harrand",
        "link": ""
      },
      {
        "name": "Franck Fleurey",
        "link": ""
      }
    ],
    "authorsList": "Brice Morin, Nicolas Harrand, Franck Fleurey",
    "citation": "Brice Morin, Nicolas Harrand, Franck Fleurey, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2017.11\">Model-Based Software Engineering to Tame the IoT Jungle</a>, IEEE Software 2017, no. 1, p. 30",
    "searchText": ""
  },
  {
    "quote": "Despite the progress in <b>Internet of Things (IoT)</b> research, a general software engineering approach for systematic development of IoT systems and applications is still missing. A synthesis of the state of the art in the area can help frame the <b>key abstractions</b> related to such development.",
    "title": "Key Abstractions for IoT-Oriented Software Engineering",
    "year": 2017,
    "number": 1,
    "page": 38,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2017.3",
    "selected": false,
    "authors": [],
    "authorsList": "Franco Zambonelli",
    "citation": "Franco Zambonelli, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2017.3\">Key Abstractions for IoT-Oriented Software Engineering</a>, IEEE Software 2017, no. 1, p. 38",
    "searchText": ""
  },
  {
    "quote": "<b>Mission-critical Internet of Things (MC-IoT)</b> systems involve heterogeneous things from both the <b>digital and physical worlds</b>. They run applications whose failure might cause significant and possibly <b>dramatic consequences</b>, such as interruption of public services, significant business losses, and deterioration of enterprise operations. These applications require not only high <b>availability</b>, <b>reliability</b>, <b>safety</b>, and <b>security</b> but also <b>regulatory compliance</b>, <b>scalability</b>, and <b>serviceability</b>. At the same time, they're exposed to various facets of uncertainty, spanning from software and hardware variability to mission planning and execution in possibly unforeseeable environments. <b>Model-driven engineering</b> can potentially meet these challenges and better enable the adoption of MC-IoT systems.",
    "title": "Model-Driven Engineering for Mission-Critical IoT Systems",
    "year": 2017,
    "number": 1,
    "page": 46,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2017.1",
    "selected": false,
    "authors": [
      {
        "name": "Federico Ciccozzi",
        "link": ""
      },
      {
        "name": "Ivica Crnkovic",
        "link": ""
      },
      {
        "name": "Davide Di Ruscio",
        "link": ""
      },
      {
        "name": "Ivano Malavolta",
        "link": ""
      },
      {
        "name": "Patrizio Pelliccione",
        "link": ""
      },
      {
        "name": "Romina Spalazzese",
        "link": ""
      }
    ],
    "authorsList": "Federico Ciccozzi, Ivica Crnkovic, Davide Di Ruscio, Ivano Malavolta, Patrizio Pelliccione, Romina Spalazzese",
    "citation": "Federico Ciccozzi, Ivica Crnkovic, Davide Di Ruscio, Ivano Malavolta, Patrizio Pelliccione, Romina Spalazzese, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2017.1\">Model-Driven Engineering for Mission-Critical IoT Systems</a>, IEEE Software 2017, no. 1, p. 46",
    "searchText": ""
  },
  {
    "quote": "A roadmap from today's cloud-centric, data-centric IoT systems to the <b>Programmable World</b> highlights the technical challenges that deserve to be part of developer education and deserve deeper investigation beyond those IoT topics that receive the most attention today.",
    "title": "A Roadmap to the Programmable World: Software Challenges in the IoT Era",
    "year": 2017,
    "number": 1,
    "page": 72,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2017.26",
    "selected": false,
    "authors": [
      {
        "name": "Antero Taivalsaari",
        "link": ""
      },
      {
        "name": "Tommi Mikkonen",
        "link": ""
      }
    ],
    "authorsList": "Antero Taivalsaari, Tommi Mikkonen",
    "citation": "Antero Taivalsaari, Tommi Mikkonen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2017.26\">A Roadmap to the Programmable World: Software Challenges in the IoT Era</a>, IEEE Software 2017, no. 1, p. 72",
    "searchText": ""
  },
  {
    "quote": "<b>Microservices</b> are in many ways <b>a best-practice approach</b> for realizing <b>SOA</b>.",
    "title": "Microservices in Practice, Part 1: Reality Check and Service Design",
    "year": 2017,
    "number": 1,
    "page": 91,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2017.24",
    "selected": false,
    "authors": [
      {
        "name": "Cesare Pautasso",
        "link": ""
      },
      {
        "name": "Olaf Zimmermann",
        "link": ""
      },
      {
        "name": "Mike Amundsen",
        "link": ""
      },
      {
        "name": "James Lewis",
        "link": ""
      },
      {
        "name": "Nicolai Josuttis",
        "link": ""
      }
    ],
    "authorsList": "Cesare Pautasso, Olaf Zimmermann, Mike Amundsen, James Lewis, Nicolai Josuttis",
    "citation": "Cesare Pautasso, Olaf Zimmermann, Mike Amundsen, James Lewis, Nicolai Josuttis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2017.24\">Microservices in Practice, Part 1: Reality Check and Service Design</a>, IEEE Software 2017, no. 1, p. 91",
    "searchText": ""
  },
  {
    "quote": "Just as physicists infer dark matter's presence on the basis of its gravitational effects on visible matter, we can conceptualize a '<b>darkitecture</b>' that outlines visible software architectures.",
    "title": "Darkitecture: The Reality Skirted by Architecture",
    "year": 2017,
    "number": 1,
    "page": 103,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2017.7",
    "selected": false,
    "authors": [],
    "authorsList": "Balaji Prasad",
    "citation": "Balaji Prasad, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2017.7\">Darkitecture: The Reality Skirted by Architecture</a>, IEEE Software 2017, no. 1, p. 103",
    "searchText": ""
  },
  {
    "quote": "<b>Computer games</b> are rich, complex, and often large-scale software applications. They're a significant, interesting, and often compelling domain for innovative research in software engineering techniques and technologies. <b>Computer games</b> are progressively changing the everyday world in many positive ways. Game developers, whether focusing on entertainment market opportunities or game-based applications in nonentertainment domains such as education, healthcare, defense, or scientific research (that is, serious games), thus share a common interest in how best to engineer game software.",
    "title": "Practices and Technologies in Computer Game Software Engineering",
    "year": 2017,
    "number": 1,
    "page": 110,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2017.20",
    "selected": false,
    "authors": [],
    "authorsList": "Walt Scacchi",
    "citation": "Walt Scacchi, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2017.20\">Practices and Technologies in Computer Game Software Engineering</a>, IEEE Software 2017, no. 1, p. 110",
    "searchText": ""
  },
  {
    "quote": "'What is <b>Infrastructure as code</b>? There are a lot of ways to answer that. One is that automation is the “CALM” of DevOps. CALM stands for <b>culture, automation, learning, and measurement</b>. Infrastructure as Code is about the automation piece. That's how people who have been doing DevOps for a while approach it, using tools like Chef, Puppet, Ansible, and SaltStack. The philosophy behind this is that infrastructure has become like data: the physical layer has been abstracted. It's <b>become software</b>, as opposed to being a physical thing. We can use infrastructure tools the same way we use software. We can <b>bring in best practices from software development</b>, such as continuous integration [CI], test-driven development, and continuous delivery [CD] version control systems, and apply them to managing our infrastructure. ",
    "title": "Kief Morris on Infrastructure as Code",
    "year": 2017,
    "number": 1,
    "page": 117,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2017.13",
    "selected": false,
    "authors": [],
    "authorsList": "Sven Johann",
    "citation": "Sven Johann, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2017.13\">Kief Morris on Infrastructure as Code</a>, IEEE Software 2017, no. 1, p. 117",
    "searchText": ""
  },
  {
    "quote": "Being <b>a good software architect</b> has never been easy. Changes in the software industry are making the job even more challenging. The key drivers are the rising role of software in systems and their operation; more emphasis on <b>reuse</b>, <b>agility</b>, and <b>testability</b> during software development; and several quality elements increasingly affected by architectural choices.",
    "title": "The Changing Role of the Software Architect",
    "year": 2016,
    "number": 6,
    "page": 4,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.133",
    "selected": false,
    "authors": [],
    "authorsList": "Diomidis Spinellis",
    "citation": "Diomidis Spinellis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.133\">The Changing Role of the Software Architect</a>, IEEE Software 2016, no. 6, p. 4",
    "searchText": ""
  },
  {
    "quote": "Documenting <b>the time dimension</b> part of your architecture might look like extra work. However, <b>anticipation</b> should be a large part of your job as an architect, anyway. If you <b>communicate your anticipation</b> as an evolution viewpoint or architecture roadmap, your architecture description will stay valid longer. And, you'll have a ready answer when stakeholders ask how you've addressed their change and planning concerns.",
    "title": "Just Enough Anticipation: Architect Your Time Dimension",
    "year": 2016,
    "number": 6,
    "page": 11,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.134",
    "selected": false,
    "authors": [],
    "authorsList": "Eltjo Poort",
    "citation": "Eltjo Poort, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.134\">Just Enough Anticipation: Architect Your Time Dimension</a>, IEEE Software 2016, no. 6, p. 11",
    "searchText": ""
  },
  {
    "quote": "As new and exciting healthcare applications arise that use <b>smart technologies</b>, the <b>Internet of Things</b>, <b>data analytics</b>, and other technologies, a critical problem is emerging: the potential loss of caring. Although these exciting technologies have improved patient care by allowing for better assessment, surveillance, and treatment, their use can disassociate the caregiver from the patient, essentially removing the &#x0022;care&#x0022; from healthcare. So, you can view caring as an undiscovered -ility that ranks at least as important as other well-known -ilities in healthcare systems.",
    "title": "Caring: An Undiscovered &#x0022;Super -ility&#x0022; of Smart Healthcare",
    "year": 2016,
    "number": 6,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.136",
    "selected": false,
    "authors": [
      {
        "name": "Nancy Laplante",
        "link": ""
      },
      {
        "name": "Phillip A. Laplante",
        "link": ""
      },
      {
        "name": "Jeffrey Voas",
        "link": ""
      }
    ],
    "authorsList": "Nancy Laplante, Phillip A. Laplante, Jeffrey Voas",
    "citation": "Nancy Laplante, Phillip A. Laplante, Jeffrey Voas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.136\">Caring: An Undiscovered &#x0022;Super -ility&#x0022; of Smart Healthcare</a>, IEEE Software 2016, no. 6, p. 16",
    "searchText": ""
  },
  {
    "quote": "When customers visit a <b>Brazilian e-commerce</b> site and search for a product, they're likely using software developed by <b>Neemu</b>, a start-up created in <b>Manaus</b>, a city in the heart of the <b>Amazon rainforest</b>. Nowadays, millions of people throughout Brazil use this software, which demonstrates alternative economic <b>development in Amazonia</b> that has low impact on the environment.",
    "title": "When Software Impacts the Economy and Environment",
    "year": 2016,
    "number": 6,
    "page": 23,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.135",
    "selected": false,
    "authors": [
      {
        "name": "Edleno Silva de Moura",
        "link": ""
      },
      {
        "name": "Mauro Rojas Herrera",
        "link": ""
      },
      {
        "name": "Leonardo Santos",
        "link": ""
      },
      {
        "name": "Tayana Conte",
        "link": ""
      }
    ],
    "authorsList": "Edleno Silva de Moura, Mauro Rojas Herrera, Leonardo Santos, Tayana Conte",
    "citation": "Edleno Silva de Moura, Mauro Rojas Herrera, Leonardo Santos, Tayana Conte, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.135\">When Software Impacts the Economy and Environment</a>, IEEE Software 2016, no. 6, p. 23",
    "searchText": ""
  },
  {
    "quote": "Forty years ago, <b>Thomas McCabe</b> introduced his famous <b>cyclomatic complexity</b> (CC) metric. Today, it’s still one of the <b>most popular and meaningful</b> measurements for analyzing code. ",
    "title": "Cyclomatic Complexity",
    "year": 2016,
    "number": 6,
    "page": 27,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.147",
    "selected": false,
    "authors": [
      {
        "name": "Christof Ebert",
        "link": ""
      },
      {
        "name": "James Cain",
        "link": ""
      }
    ],
    "authorsList": "Christof Ebert, James Cain",
    "citation": "Christof Ebert, James Cain, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.147\">Cyclomatic Complexity</a>, IEEE Software 2016, no. 6, p. 27",
    "searchText": ""
  },
  {
    "quote": "<b>Internet scale</b>, the increasing rate of technology evolution, and the broad adoption of lean and agile methods have triggered a profound change in not only application and infrastructure architectures but also the <b>software architect</b>'s roles and responsibilities.",
    "title": "The Software Architect's Role in the Digital Age",
    "year": 2016,
    "number": 6,
    "page": 30,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.137",
    "selected": false,
    "authors": [
      {
        "name": "Gregor Hohpe",
        "link": ""
      },
      {
        "name": "Ipek Ozkaya",
        "link": ""
      },
      {
        "name": "Uwe Zdun",
        "link": ""
      },
      {
        "name": "Olaf Zimmermann",
        "link": ""
      }
    ],
    "authorsList": "Gregor Hohpe, Ipek Ozkaya, Uwe Zdun, Olaf Zimmermann",
    "citation": "Gregor Hohpe, Ipek Ozkaya, Uwe Zdun, Olaf Zimmermann, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.137\">The Software Architect's Role in the Digital Age</a>, IEEE Software 2016, no. 6, p. 30",
    "searchText": ""
  },
  {
    "quote": "The popularity of agile methods such as <b>Scrum</b> and <b>Kanban</b>, with their clear focus on <b>team collaboration</b>, threatens many roles traditionally assigned to individual experts. Some organizations are even challenging the raison d'&#x00EA;tre of the software architect role. However, researchers' experiences developing connected-vehicle software revealed <b>two reasons</b> why successful projects still often assign <b>architecture-related responsibilities</b> to individual experts acting as software architects. First, <b>the experts</b> help effectively <b>manage complexity</b>; second, they act as <b>knowledge multipliers</b> when development must scale up.",
    "title": "How Software Architects Drive Connected Vehicles",
    "year": 2016,
    "number": 6,
    "page": 41,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.145",
    "selected": false,
    "authors": [
      {
        "name": "Soren Frey",
        "link": ""
      },
      {
        "name": "Lambros Charissis",
        "link": ""
      },
      {
        "name": "Jens Nahm",
        "link": ""
      }
    ],
    "authorsList": "Soren Frey, Lambros Charissis, Jens Nahm",
    "citation": "Soren Frey, Lambros Charissis, Jens Nahm, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.145\">How Software Architects Drive Connected Vehicles</a>, IEEE Software 2016, no. 6, p. 41",
    "searchText": ""
  },
  {
    "quote": "<b>Software architects</b> are key assets for successful development projects. ... researchers investigated how architects at <b>Ericsson</b> were organized, their roles and responsibilities, and <b>the effort</b> they spent guarding and governing a large-scale legacy product developed by teams at multiple locations. ... the architectural decisions were centralized to a <b>team of architects</b>. The team extensively <b>used code reviews</b> to not only check the code's state but also reveal defects that could turn into maintainability problems. ... <b>the effort</b> architects spend designing architecture, guarding its integrity and evolvability, and mentoring development teams is directly related to <b>team maturity</b>.",
    "title": "Software Architects in Large-Scale Distributed Projects: An Ericsson Case Study",
    "year": 2016,
    "number": 6,
    "page": 48,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.146",
    "selected": false,
    "authors": [
      {
        "name": "Ricardo Britto",
        "link": ""
      },
      {
        "name": "Darja Smite",
        "link": ""
      },
      {
        "name": "Lars-Ola Damm",
        "link": ""
      }
    ],
    "authorsList": "Ricardo Britto, Darja Smite, Lars-Ola Damm",
    "citation": "Ricardo Britto, Darja Smite, Lars-Ola Damm, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.146\">Software Architects in Large-Scale Distributed Projects: An Ericsson Case Study</a>, IEEE Software 2016, no. 6, p. 48",
    "searchText": ""
  },
  {
    "quote": "Owing to the increasing amount of <b>computation</b> in <b>electromechanical devices</b>, the role of <b>software architect</b> is often found in <b>embedded-systems</b> development. However, because computer scientists usually have limited knowledge of <b>embedded-systems concepts</b> such as <b>controllers</b>, <b>actuators</b>, and <b>bu</b>ses, embedded-software architects are often engineers with no education in software architecture basics, which is normally a topic in computer science courses.",
    "title": "Embedded-Software Architects: It's Not Only about the Software",
    "year": 2016,
    "number": 6,
    "page": 56,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.142",
    "selected": false,
    "authors": [
      {
        "name": "Pablo Oliveira Antonino",
        "link": ""
      },
      {
        "name": "Andreas Morgenstern",
        "link": ""
      },
      {
        "name": "Thomas Kuhn",
        "link": ""
      }
    ],
    "authorsList": "Pablo Oliveira Antonino, Andreas Morgenstern, Thomas Kuhn",
    "citation": "Pablo Oliveira Antonino, Andreas Morgenstern, Thomas Kuhn, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.142\">Embedded-Software Architects: It's Not Only about the Software</a>, IEEE Software 2016, no. 6, p. 56",
    "searchText": ""
  },
  {
    "quote": "<b>Software architects</b> don't just design architecture components or champion architecture qualities; they often must guide and <b>harmonize</b> the entire <b>community of project stakeholders</b>. The <b>community-shepherding</b> aspects of the architect's role have been gaining attention, given the increasing importance of complex 'organizational rewiring' scenarios such as DevOps, open source strategies, transitions to agile development, and corporate acquisitions",
    "title": "The Architect's Role in Community Shepherding",
    "year": 2016,
    "number": 6,
    "page": 70,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.144",
    "selected": false,
    "authors": [
      {
        "name": "Damian A. Tamburri",
        "link": ""
      },
      {
        "name": "Rick Kazman",
        "link": ""
      },
      {
        "name": "Hamed Fahimi",
        "link": ""
      }
    ],
    "authorsList": "Damian A. Tamburri, Rick Kazman, Hamed Fahimi",
    "citation": "Damian A. Tamburri, Rick Kazman, Hamed Fahimi, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.144\">The Architect's Role in Community Shepherding</a>, IEEE Software 2016, no. 6, p. 70",
    "searchText": ""
  },
  {
    "quote": "As software systems have evolved, so has software architecture, with practices growing to meet each era's new challenges. The next phase of evolution--<b>intelligent connected systems</b>--promises to be an exciting time for <b>software architects</b>.",
    "title": "Software Architecture in a Changing World",
    "year": 2016,
    "number": 6,
    "page": 94,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.149",
    "selected": false,
    "authors": [],
    "authorsList": "Eoin Woods",
    "citation": "Eoin Woods, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.149\">Software Architecture in a Changing World</a>, IEEE Software 2016, no. 6, p. 94",
    "searchText": ""
  },
  {
    "quote": "<b>Huge industries</b>, from the automotive and healthcare industries to finance and entertainment, <b>center increasingly on software</b>. <b>Managing</b> such a <b>software business</b> is tough because software's ethereal nature offers infinite lucrative or catastrophic choices. The main things to manage are the business model, the <b>execution strategy</b>, the product or service, and the development process.",
    "title": "Managing a Software Business",
    "year": 2016,
    "number": 5,
    "page": 4,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.111",
    "selected": false,
    "authors": [],
    "authorsList": "Diomidis Spinellis",
    "citation": "Diomidis Spinellis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.111\">Managing a Software Business</a>, IEEE Software 2016, no. 5, p. 4",
    "searchText": ""
  },
  {
    "quote": "<b>Computational humor</b> is a technically intriguing problem. And, in the journey to understand the theories, mechanisms, and algorithms that discern and <b>define funny</b>, we learn something about ourselves and what it means to be human.",
    "title": "No Laughing Matter",
    "year": 2016,
    "number": 5,
    "page": 9,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.127",
    "selected": false,
    "authors": [],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.127\">No Laughing Matter</a>, IEEE Software 2016, no. 5, p. 9",
    "searchText": ""
  },
  {
    "quote": "Developers of <b>systems of systems (SoSs)</b> face challenges such as heterogeneous, inconsistent, and changing elements; continuous evolution and deployment; decentralized control; and inherently conflicting and often unknowable requirements.",
    "title": "Monitoring Requirements in Systems of Systems",
    "year": 2016,
    "number": 5,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.112",
    "selected": false,
    "authors": [
      {
        "name": "Michael Vierhauser",
        "link": ""
      },
      {
        "name": "Rick Rabiser",
        "link": ""
      },
      {
        "name": "Paul Grunbacher",
        "link": ""
      }
    ],
    "authorsList": "Michael Vierhauser, Rick Rabiser, Paul Grunbacher",
    "citation": "Michael Vierhauser, Rick Rabiser, Paul Grunbacher, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.112\">Monitoring Requirements in Systems of Systems</a>, IEEE Software 2016, no. 5, p. 22",
    "searchText": ""
  },
  {
    "quote": "<b>Simulation software</b> is important to our understanding of the universe. The intrinsic <b>multiphysics</b> aspects are spiced with a range of temporal scales and spatial scales, both of which cover <b>more digits</b> than are available in the <b>standard hardware</b>.",
    "title": "Creating the Virtual Universe",
    "year": 2016,
    "number": 5,
    "page": 25,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.113",
    "selected": false,
    "authors": [
      {
        "name": "Simon Portegies Zwart",
        "link": ""
      },
      {
        "name": "Jeroen Bedorf",
        "link": ""
      }
    ],
    "authorsList": "Simon Portegies Zwart, Jeroen Bedorf",
    "citation": "Simon Portegies Zwart, Jeroen Bedorf, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.113\">Creating the Virtual Universe</a>, IEEE Software 2016, no. 5, p. 25",
    "searchText": ""
  },
  {
    "quote": "The <b>software architecture</b> pendulum is swinging away from traditional practices and toward <b>agile and continuous</b> practices. To be successful in this new world, architects should emphasize <b>products over projects</b>, drive architectural decisions, <b>understand code</b>, and communicate and collaborate effectively with delivery teams.",
    "title": "What's the Architect's Role in an Agile, Cloud-Centric World?",
    "year": 2016,
    "number": 5,
    "page": 30,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.119",
    "selected": false,
    "authors": [
      {
        "name": "Murat Erder",
        "link": ""
      },
      {
        "name": "Pierre Pureur",
        "link": ""
      }
    ],
    "authorsList": "Murat Erder, Pierre Pureur",
    "citation": "Murat Erder, Pierre Pureur, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.119\">What's the Architect's Role in an Agile, Cloud-Centric World?</a>, IEEE Software 2016, no. 5, p. 30",
    "searchText": ""
  },
  {
    "quote": "<b>Small</b> and <b>medium-sized enterprises</b> depend heavily on their capability to <b>differentiate themselves</b> from their competitors through innovative approaches. <b>Innovation management</b> assumes that systematically applying strategies combined with appropriate methods and tools increases the ability to build innovative products and services. To leverage their competitive capabilities, small companies involved in software development must combine <b>innovation management</b> and <b>software engineering practices</b>.",
    "title": "Innovation-Driven Software Development: Leveraging Small Companies' Product-Development Capabilities",
    "year": 2016,
    "number": 5,
    "page": 38,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.63",
    "selected": false,
    "authors": [
      {
        "name": "Ricardo Eito-Brun",
        "link": ""
      },
      {
        "name": "Miguel-Angel Sicilia",
        "link": ""
      }
    ],
    "authorsList": "Ricardo Eito-Brun, Miguel-Angel Sicilia",
    "citation": "Ricardo Eito-Brun, Miguel-Angel Sicilia, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.63\">Innovation-Driven Software Development: Leveraging Small Companies' Product-Development Capabilities</a>, IEEE Software 2016, no. 5, p. 38",
    "searchText": ""
  },
  {
    "quote": "<b>Software providers</b> differ widely in <b>productivity and quality</b>. Traditional means of evaluation, such as CVs and client references, fail to separate the competent from the incompetent. <b>Trialsourcing</b>--having <b>multiple providers</b> create <b>sample pieces of software</b> for evaluation--can help clients select providers.",
    "title": "Better Selection of Software Providers through Trialsourcing",
    "year": 2016,
    "number": 5,
    "page": 48,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.24",
    "selected": false,
    "authors": [],
    "authorsList": "Magne Jorgensen",
    "citation": "Magne Jorgensen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.24\">Better Selection of Software Providers through Trialsourcing</a>, IEEE Software 2016, no. 5, p. 48",
    "searchText": ""
  },
  {
    "quote": "Most companies have learned that <b>cost calculations</b> for <b>offshore outsourcing</b> shouldn't be <b>limited to hourly wages</b>. Looking at salaries alone, you could naively hope for cost reductions of up to 90 percent. However, don't underestimate the cost of <b>knowledge transfer</b>, <b>travel</b>, <b>attrition</b>, <b>miscommunication</b>, and so on. ... The offshore team's true hourly costs took three years to become comparable with those of the in-house team. Getting close to the break-even point took five years. <b>Learning costs</b> due to <b>offshore employee turnover</b> were the <b>primary cost</b> factor to get under control.",
    "title": "What's the True Hourly Cost of Offshoring?",
    "year": 2016,
    "number": 5,
    "page": 60,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.82",
    "selected": false,
    "authors": [
      {
        "name": "Darja Smite",
        "link": ""
      },
      {
        "name": "Rini van Solingen",
        "link": ""
      }
    ],
    "authorsList": "Darja Smite, Rini van Solingen",
    "citation": "Darja Smite, Rini van Solingen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.82\">What's the True Hourly Cost of Offshoring?</a>, IEEE Software 2016, no. 5, p. 60",
    "searchText": ""
  },
  {
    "quote": "In <b>machine learning</b>, a computer first learns to perform a task by studying <b>a training set</b> of examples. The computer then performs the same task with data it hasn't encountered before.",
    "title": "Machine Learning",
    "year": 2016,
    "number": 5,
    "page": 110,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.114",
    "selected": false,
    "authors": [
      {
        "name": "Panos Louridas",
        "link": ""
      },
      {
        "name": "Christof Ebert",
        "link": ""
      }
    ],
    "authorsList": "Panos Louridas, Christof Ebert",
    "citation": "Panos Louridas, Christof Ebert, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.114\">Machine Learning</a>, IEEE Software 2016, no. 5, p. 110",
    "searchText": ""
  },
  {
    "quote": "<b>Too many tests</b> is the same as <b>not enough tests</b>. In both cases it's <b>suboptimal</b>. Whether you waste time <b>debugging</b> because you don't have enough tests or you waste time <b>maintaining tests</b> that don't need to be there, at the end of the day both of those things amount to waste.",
    "title": "Jay Fields on Working with Unit Tests",
    "year": 2016,
    "number": 5,
    "page": 117,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.121",
    "selected": false,
    "authors": [],
    "authorsList": "Stefan Tilkov",
    "citation": "Stefan Tilkov, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.121\">Jay Fields on Working with Unit Tests</a>, IEEE Software 2016, no. 5, p. 117",
    "searchText": ""
  },
  {
    "quote": "<b>Mobile apps</b> increasingly constitute <b>complete ecosystems</b> to support businesses such as farming. ... Having the <b>right data</b> at the <b>right time</b> at the <b>right place</b> is crucial for high user productivity and a good user experience. In particular, <b>offline capability</b> is important but difficult. ",
    "title": "Piloting a Mobile-App Ecosystem for Smart Farming",
    "year": 2016,
    "number": 4,
    "page": 9,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.98",
    "selected": false,
    "authors": [
      {
        "name": "Susanne Braun",
        "link": ""
      },
      {
        "name": "Ralf Carbon",
        "link": ""
      },
      {
        "name": "Matthias Naab",
        "link": ""
      }
    ],
    "authorsList": "Susanne Braun, Ralf Carbon, Matthias Naab",
    "citation": "Susanne Braun, Ralf Carbon, Matthias Naab, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.98\">Piloting a Mobile-App Ecosystem for Smart Farming</a>, IEEE Software 2016, no. 4, p. 9",
    "searchText": ""
  },
  {
    "quote": "Many organizations use <b>business process models</b> to document business operations and formalize business requirements in software-engineering projects. The <b>Business Process Model and Notation</b> (BPMN), a specification by the Object Management Group, has evolved into the <b>leading standard</b> for <b>process modeling</b>. One challenge is <b>BPMN's complexity</b>: it offers a huge variety of elements and often several representational choices for the same semantics.",
    "title": "Learning from Quality Issues of BPMN Models from Industry",
    "year": 2016,
    "number": 4,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.81",
    "selected": false,
    "authors": [
      {
        "name": "Henrik Leopold",
        "link": ""
      },
      {
        "name": "Jan Mendling",
        "link": ""
      },
      {
        "name": "Oliver Gunther",
        "link": ""
      }
    ],
    "authorsList": "Henrik Leopold, Jan Mendling, Oliver Gunther",
    "citation": "Henrik Leopold, Jan Mendling, Oliver Gunther, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.81\">Learning from Quality Issues of BPMN Models from Industry</a>, IEEE Software 2016, no. 4, p. 26",
    "searchText": ""
  },
  {
    "quote": "In the <b>mobile-app ecosystem</b>, <b>user ratings</b> of apps (a measure of <b>user perception</b>) are extremely important because they correlate strongly with downloads and hence revenue.",
    "title": "Examining the Relationship between FindBugs Warnings and App Ratings",
    "year": 2016,
    "number": 4,
    "page": 34,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.29",
    "selected": false,
    "authors": [
      {
        "name": "Hammad Khalid",
        "link": ""
      },
      {
        "name": "Meiyappan Nagappan",
        "link": ""
      },
      {
        "name": "Ahmed E. Hassan",
        "link": ""
      }
    ],
    "authorsList": "Hammad Khalid, Meiyappan Nagappan, Ahmed E. Hassan",
    "citation": "Hammad Khalid, Meiyappan Nagappan, Ahmed E. Hassan, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.29\">Examining the Relationship between FindBugs Warnings and App Ratings</a>, IEEE Software 2016, no. 4, p. 34",
    "searchText": ""
  },
  {
    "quote": "A proposed <b>data-driven</b> software <b>quality improvement</b> method has three elements. First, the downstream <b>Customer Quality Metric</b> (CQM) quantifies quality as customers perceive it. On the basis of data collected after systems are deployed, it measures how serious defects affect customers. Second, the upstream Implementation <b>Quality Index</b> (IQI) measures the effectiveness of error removal during development. IQI predicts future customer quality; it has a positive correlation with CQM. Finally, <b>prioritization tools</b> and techniques help focus limited development resources on the riskiest files in the code.",
    "title": "Improving Software Quality as Customers Perceive It",
    "year": 2016,
    "number": 4,
    "page": 40,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.76",
    "selected": false,
    "authors": [
      {
        "name": "Randy Hackbarth",
        "link": ""
      },
      {
        "name": "Audris Mockus",
        "link": ""
      },
      {
        "name": "John Palframan",
        "link": ""
      },
      {
        "name": "Ravi Sethi",
        "link": ""
      }
    ],
    "authorsList": "Randy Hackbarth, Audris Mockus, John Palframan, Ravi Sethi",
    "citation": "Randy Hackbarth, Audris Mockus, John Palframan, Ravi Sethi, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.76\">Improving Software Quality as Customers Perceive It</a>, IEEE Software 2016, no. 4, p. 40",
    "searchText": ""
  },
  {
    "quote": "<b>Measurement</b> of <b>software security</b> is an ongoing research field. <b>Privacy</b> is also becoming an imperative target as social networking and ubiquitous computing evolve and users exchange high volumes of personal information. However, security and privacy alone don't guarantee proper data protection; software must <b>also be dependable</b>.",
    "title": "Software Security, Privacy, and Dependability: Metrics and Measurement",
    "year": 2016,
    "number": 4,
    "page": 46,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.61",
    "selected": false,
    "authors": [
      {
        "name": "George Hatzivasilis",
        "link": ""
      },
      {
        "name": "Ioannis Papaefstathiou",
        "link": ""
      },
      {
        "name": "Charalampos Manifavas",
        "link": ""
      }
    ],
    "authorsList": "George Hatzivasilis, Ioannis Papaefstathiou, Charalampos Manifavas",
    "citation": "George Hatzivasilis, Ioannis Papaefstathiou, Charalampos Manifavas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.61\">Software Security, Privacy, and Dependability: Metrics and Measurement</a>, IEEE Software 2016, no. 4, p. 46",
    "searchText": ""
  },
  {
    "quote": "<b>Dynamic program analysis</b>, such as with <b>profiling</b>, <b>tracing</b>, and <b>bug-finding tools</b>, is essential for software engineering. Unfortunately, implementing dynamic analysis for managed languages such as Java is unduly difficult and error prone because the runtime environments provide only complex low-level mechanisms.",
    "title": "Comprehensive Multiplatform Dynamic Program Analysis for Java and Android",
    "year": 2016,
    "number": 4,
    "page": 55,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.151",
    "selected": false,
    "authors": [
      {
        "name": "Yudi Zheng",
        "link": ""
      },
      {
        "name": "Stephen Kell",
        "link": ""
      },
      {
        "name": "Lubomir Bulej",
        "link": ""
      },
      {
        "name": "Haiyang Sun",
        "link": ""
      },
      {
        "name": "Walter Binder",
        "link": ""
      }
    ],
    "authorsList": "Yudi Zheng, Stephen Kell, Lubomir Bulej, Haiyang Sun, Walter Binder",
    "citation": "Yudi Zheng, Stephen Kell, Lubomir Bulej, Haiyang Sun, Walter Binder, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.151\">Comprehensive Multiplatform Dynamic Program Analysis for Java and Android</a>, IEEE Software 2016, no. 4, p. 55",
    "searchText": ""
  },
  {
    "quote": "A well-known adage is '<b>diversity brings innovation.</b>' Diversity can be in <b>culture, thinking, discipline, gender</b>, and many more aspects. The result is the same: the chances for creating innovation in a given context increase when diversity is involved. To some extent, this principle should also hold for <b>gender diversity</b> in software teams. Achieving gender diversity in <b>IT-related fields</b> has been a goal for decades, but still, <b>too few women</b> choose such a career. But what skills or traits assigned to <b>the feminine role</b> bring concrete advantages to software teams?",
    "title": "Feminine Expertise in Architecting Teams",
    "year": 2016,
    "number": 4,
    "page": 64,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.84",
    "selected": false,
    "authors": [
      {
        "name": "Maryam Razavian",
        "link": ""
      },
      {
        "name": "Patricia Lago",
        "link": ""
      }
    ],
    "authorsList": "Maryam Razavian, Patricia Lago",
    "citation": "Maryam Razavian, Patricia Lago, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.84\">Feminine Expertise in Architecting Teams</a>, IEEE Software 2016, no. 4, p. 64",
    "searchText": ""
  },
  {
    "quote": "Users continue to stumble upon <b>software bugs</b>, despite developers' efforts to build and test high-quality software. Although <b>traditional testing</b> and <b>quality assurance</b> techniques are extremely valuable, software testing should pay more <b>attention to exploration</b>. Exploration can <b>directly apply knowledge</b> and learning to the core of industrial software testing, revealing more relevant bugs earlier.",
    "title": "Test Better by Exploring: Harnessing Human Skills and Knowledge",
    "year": 2016,
    "number": 4,
    "page": 90,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.85",
    "selected": false,
    "authors": [
      {
        "name": "Juha Itkonen",
        "link": ""
      },
      {
        "name": "Mika V. Mantyla",
        "link": ""
      },
      {
        "name": "Casper Lassenius",
        "link": ""
      }
    ],
    "authorsList": "Juha Itkonen, Mika V. Mantyla, Casper Lassenius",
    "citation": "Juha Itkonen, Mika V. Mantyla, Casper Lassenius, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.85\">Test Better by Exploring: Harnessing Human Skills and Knowledge</a>, IEEE Software 2016, no. 4, p. 90",
    "searchText": ""
  },
  {
    "quote": "The next generation of software-intensive systems will be <b>taught instead of programmed</b>. This poses considerable pragmatic challenges in how we develop, deliver, and evolve them.",
    "title": "It Is Cold. And Lonely.",
    "year": 2016,
    "number": 3,
    "page": 7,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.85",
    "selected": false,
    "authors": [],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.85\">It Is Cold. And Lonely.</a>, IEEE Software 2016, no. 3, p. 7",
    "searchText": ""
  },
  {
    "quote": "Following certain best practices for <b>visual communication</b> can help bridge the gap between IT architects and business stakeholders. These practices stem from disciplines such as <b>psychology</b>, <b>graphic design</b>, <b>communication science</b>, and <b>cartooning</b>.",
    "title": "Why They Just Don't Get It: Communicating about Architecture with Business Stakeholders",
    "year": 2016,
    "number": 3,
    "page": 13,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.67",
    "selected": false,
    "authors": [
      {
        "name": "Jochem Schulenklopper",
        "link": ""
      },
      {
        "name": "Eelco Rommes",
        "link": ""
      }
    ],
    "authorsList": "Jochem Schulenklopper, Eelco Rommes",
    "citation": "Jochem Schulenklopper, Eelco Rommes, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.67\">Why They Just Don't Get It: Communicating about Architecture with Business Stakeholders</a>, IEEE Software 2016, no. 3, p. 13",
    "searchText": ""
  },
  {
    "quote": "The emerging <b>DevOps movement</b> emphasizes <b>development and operations staff</b> working together <b>as early as possible</b>--sharing tools, processes, and practices that smooth the production path.",
    "title": "Operational: The Forgotten Architectural View",
    "year": 2016,
    "number": 3,
    "page": 20,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.86",
    "selected": false,
    "authors": [],
    "authorsList": "Eoin Woods",
    "citation": "Eoin Woods, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.86\">Operational: The Forgotten Architectural View</a>, IEEE Software 2016, no. 3, p. 20",
    "searchText": ""
  },
  {
    "quote": "Building a <b>secure system</b> requires <b>proactive</b>, rigorous <b>analysis of the threats</b> to which it might be exposed, followed by systematic transformation of those threats into security-related requirements.",
    "title": "Keeping Ahead of Our Adversaries",
    "year": 2016,
    "number": 3,
    "page": 24,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.75",
    "selected": false,
    "authors": [
      {
        "name": "Jane Cleland-Huang",
        "link": ""
      },
      {
        "name": "Tamara Denning",
        "link": ""
      },
      {
        "name": "Tadayoshi Kohno",
        "link": ""
      },
      {
        "name": "Forrest Shull",
        "link": ""
      },
      {
        "name": "Samuel Weber",
        "link": ""
      }
    ],
    "authorsList": "Jane Cleland-Huang, Tamara Denning, Tadayoshi Kohno, Forrest Shull, Samuel Weber",
    "citation": "Jane Cleland-Huang, Tamara Denning, Tadayoshi Kohno, Forrest Shull, Samuel Weber, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.75\">Keeping Ahead of Our Adversaries</a>, IEEE Software 2016, no. 3, p. 24",
    "searchText": ""
  },
  {
    "quote": "<b>DevO</b>ps aims to reduce the time between <b>committing</b> a system change and placing the change <b>into normal production</b>, while ensuring <b>high quality</b>.",
    "title": "DevOps and Its Practices",
    "year": 2016,
    "number": 3,
    "page": 32,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.81",
    "selected": false,
    "authors": [
      {
        "name": "Liming Zhu",
        "link": ""
      },
      {
        "name": "Len Bass",
        "link": ""
      },
      {
        "name": "George Champlin-Scharff",
        "link": ""
      }
    ],
    "authorsList": "Liming Zhu, Len Bass, George Champlin-Scharff",
    "citation": "Liming Zhu, Len Bass, George Champlin-Scharff, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.81\">DevOps and Its Practices</a>, IEEE Software 2016, no. 3, p. 32",
    "searchText": ""
  },
  {
    "quote": "Modern software-based services are implemented as distributed systems with <b>complex behavior</b> and failure modes. Many large tech organizations are using <b>experimentation</b> to verify such systems' reliability. <b>Netflix</b> engineers call this approach <b>chaos engineering</b>.",
    "title": "Chaos Engineering",
    "year": 2016,
    "number": 3,
    "page": 35,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.60",
    "selected": false,
    "authors": [
      {
        "name": "Ali Basiri",
        "link": ""
      },
      {
        "name": "Niosha Behnam",
        "link": ""
      },
      {
        "name": "Ruud de Rooij",
        "link": ""
      },
      {
        "name": "Lorin Hochstein",
        "link": ""
      },
      {
        "name": "Luke Kosewski",
        "link": ""
      },
      {
        "name": "Justin Reynolds",
        "link": ""
      },
      {
        "name": "Casey Rosenthal",
        "link": ""
      }
    ],
    "authorsList": "Ali Basiri, Niosha Behnam, Ruud de Rooij, Lorin Hochstein, Luke Kosewski, Justin Reynolds, Casey Rosenthal",
    "citation": "Ali Basiri, Niosha Behnam, Ruud de Rooij, Lorin Hochstein, Luke Kosewski, Justin Reynolds, Casey Rosenthal, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.60\">Chaos Engineering</a>, IEEE Software 2016, no. 3, p. 35",
    "searchText": ""
  },
  {
    "quote": "When <b>DevOps</b> started gaining momentum in the software industry, one of the first service-based architectural styles to be introduced, be applied in practice, and become popular was <b>microservices</b>. Migrating <b>monolithic</b> architectures to <b>cloud-native</b> architectures such as microservices reaps many benefits, such as adaptability to technological changes and independent resource management for different system components.",
    "title": "Microservices Architecture Enables DevOps: Migration to a Cloud-Native Architecture",
    "year": 2016,
    "number": 3,
    "page": 42,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.64",
    "selected": false,
    "authors": [
      {
        "name": "Armin Balalaie",
        "link": ""
      },
      {
        "name": "Abbas Heydarnoori",
        "link": ""
      },
      {
        "name": "Pooyan Jamshidi",
        "link": ""
      }
    ],
    "authorsList": "Armin Balalaie, Abbas Heydarnoori, Pooyan Jamshidi",
    "citation": "Armin Balalaie, Abbas Heydarnoori, Pooyan Jamshidi, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.64\">Microservices Architecture Enables DevOps: Migration to a Cloud-Native Architecture</a>, IEEE Software 2016, no. 3, p. 42",
    "searchText": ""
  },
  {
    "quote": "Wotif Group used <b>DevOps principles</b> to recover from the <b>downward spiral</b> of <b>manual release</b> activity that many IT departments face. Its approach involved the idea of '<b>making it easy to do the right thing</b>.' By defining the right thing (<b>deployment standards</b>) for development and operations teams and making it easy to adopt, Wotif drastically improved the average release cycle time.",
    "title": "DevOps: Making It Easy to Do the Right Thing",
    "year": 2016,
    "number": 3,
    "page": 53,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.66",
    "selected": false,
    "authors": [
      {
        "name": "Matt Callanan",
        "link": ""
      },
      {
        "name": "Alexandra Spillane",
        "link": ""
      }
    ],
    "authorsList": "Matt Callanan, Alexandra Spillane",
    "citation": "Matt Callanan, Alexandra Spillane, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.66\">DevOps: Making It Easy to Do the Right Thing</a>, IEEE Software 2016, no. 3, p. 53",
    "searchText": ""
  },
  {
    "quote": "<b>Interconnected computing systems</b> in various forms will soon permeate our lives, realizing the <b>Internet of Things</b> (IoT) and letting us enjoy novel, enhanced services that promise to improve our everyday life. Nevertheless, this new reality introduces significant challenges in terms of <b>performance, scaling, usability</b>, and <b>interoperability</b>. Leveraging the benefits of service-oriented architectures (SOAs) can help alleviate many of the issues that developers, implementers, and users alike must face in the context of the IoT.",
    "title": "Node.DPWS: Efficient Web Services for the Internet of Things",
    "year": 2016,
    "number": 3,
    "page": 60,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.155",
    "selected": false,
    "authors": [
      {
        "name": "Konstantinos Fysarakis",
        "link": ""
      },
      {
        "name": "Damianos Mylonakis",
        "link": ""
      },
      {
        "name": "Charalampos Manifavas",
        "link": ""
      },
      {
        "name": "Ioannis Papaefstathiou",
        "link": ""
      }
    ],
    "authorsList": "Konstantinos Fysarakis, Damianos Mylonakis, Charalampos Manifavas, Ioannis Papaefstathiou",
    "citation": "Konstantinos Fysarakis, Damianos Mylonakis, Charalampos Manifavas, Ioannis Papaefstathiou, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.155\">Node.DPWS: Efficient Web Services for the Internet of Things</a>, IEEE Software 2016, no. 3, p. 60",
    "searchText": ""
  },
  {
    "quote": "With the increasing importance, size, and complexity of <b>automated test suites</b>, the need exists for suitable methods and tools to develop, assess the quality of, and <b>maintain test code</b> (scripts) in parallel with <b>regular production</b> (application) code.",
    "title": "Developing, Verifying, and Maintaining High-Quality Automated Test Scripts",
    "year": 2016,
    "number": 3,
    "page": 68,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.30",
    "selected": false,
    "authors": [
      {
        "name": "Vahid Garousi",
        "link": ""
      },
      {
        "name": "Michael Felderer",
        "link": ""
      }
    ],
    "authorsList": "Vahid Garousi, Michael Felderer",
    "citation": "Vahid Garousi, Michael Felderer, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.30\">Developing, Verifying, and Maintaining High-Quality Automated Test Scripts</a>, IEEE Software 2016, no. 3, p. 68",
    "searchText": ""
  },
  {
    "quote": "Building on <b>lean and agile</b> practices, <b>DevOps</b> means <b>end-to-end automation</b> in software development and delivery. Hardly anybody will be able to approach it with a cookbook-style approach, but most developers will benefit from better connecting the previously isolated silos of development and operations. Many <b>DevOps tools</b> exist that can help them do this.",
    "title": "DevOps",
    "year": 2016,
    "number": 3,
    "page": 94,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.68",
    "selected": false,
    "authors": [
      {
        "name": "Christof Ebert",
        "link": ""
      },
      {
        "name": "Gorka Gallardo",
        "link": ""
      },
      {
        "name": "Josune Hernantes",
        "link": ""
      },
      {
        "name": "Nicolas Serrano",
        "link": ""
      }
    ],
    "authorsList": "Christof Ebert, Gorka Gallardo, Josune Hernantes, Nicolas Serrano",
    "citation": "Christof Ebert, Gorka Gallardo, Josune Hernantes, Nicolas Serrano, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.68\">DevOps</a>, IEEE Software 2016, no. 3, p. 94",
    "searchText": ""
  },
  {
    "quote": "<b>Different ages</b> of humanity have required <b>different modes of thinking</b>. These modes aren't only reflections of the particular circumstances of life in each age; they're also projections of the forces that propel us to the next.",
    "title": "The Computational Human",
    "year": 2016,
    "number": 2,
    "page": 8,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.59",
    "selected": false,
    "authors": [],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.59\">The Computational Human</a>, IEEE Software 2016, no. 2, p. 8",
    "searchText": ""
  },
  {
    "quote": "A <b>software retrofit</b> can address problems of business-critical systems that are no longer maintainable.",
    "title": "Software Retrofit in High-Availability Systems: When Uptime Matters",
    "year": 2016,
    "number": 2,
    "page": 11,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.49",
    "selected": false,
    "authors": [],
    "authorsList": "Thomas Ronzon",
    "citation": "Thomas Ronzon, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.49\">Software Retrofit in High-Availability Systems: When Uptime Matters</a>, IEEE Software 2016, no. 2, p. 11",
    "searchText": ""
  },
  {
    "quote": "<b>Naming conventions</b> affect the readability of your code and the ease with which you can find your way around when you're reviewing that code. Naming conventions <b>aren't meant to help the compiler</b>. A compiler has no trouble distinguishing names, no matter how long, short, or obscure they are. But to us humans, they can matter a great deal.",
    "title": "Code Clarity",
    "year": 2016,
    "number": 2,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.44",
    "selected": false,
    "authors": [],
    "authorsList": "Gerard J. Holzmann",
    "citation": "Gerard J. Holzmann, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.44\">Code Clarity</a>, IEEE Software 2016, no. 2, p. 22",
    "searchText": ""
  },
  {
    "quote": "Software engineering for <b>big data systems</b> is complex and faces challenges including <b>pervasive distribution</b>, write-heavy <b>workloads</b>, <b>variable request</b> loads, computation-intensive <b>analytics</b>, and high <b>availability</b>.",
    "title": "Software Engineering for Big Data Systems",
    "year": 2016,
    "number": 2,
    "page": 32,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.47",
    "selected": false,
    "authors": [
      {
        "name": "Ian Gorton",
        "link": ""
      },
      {
        "name": "Ayse Basar Bener",
        "link": ""
      },
      {
        "name": "Audris Mockus",
        "link": ""
      }
    ],
    "authorsList": "Ian Gorton, Ayse Basar Bener, Audris Mockus",
    "citation": "Ian Gorton, Ayse Basar Bener, Audris Mockus, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.47\">Software Engineering for Big Data Systems</a>, IEEE Software 2016, no. 2, p. 32",
    "searchText": ""
  },
  {
    "quote": "Conventional horizontal <b>evolutionary prototyping</b> for small-data system development is inadequate and too expensive for identifying, analyzing, and mitigating risks in big data system development. RASP (<b>Risk-Based, Architecture-Centric Strategic Prototyping</b>) is a model for cost-effective, systematic risk management in agile big data system development. It uses prototyping strategically and only in areas that architecture analysis can't sufficiently address.",
    "title": "Strategic Prototyping for Developing Big Data Systems",
    "year": 2016,
    "number": 2,
    "page": 36,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.36",
    "selected": false,
    "authors": [
      {
        "name": "Hong-Mei Chen",
        "link": ""
      },
      {
        "name": "Rick Kazman",
        "link": ""
      },
      {
        "name": "Serge Haziyev",
        "link": ""
      }
    ],
    "authorsList": "Hong-Mei Chen, Rick Kazman, Serge Haziyev",
    "citation": "Hong-Mei Chen, Rick Kazman, Serge Haziyev, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.36\">Strategic Prototyping for Developing Big Data Systems</a>, IEEE Software 2016, no. 2, p. 36",
    "searchText": ""
  },
  {
    "quote": "<b>Video data</b> has become the <b>largest source of big data.</b> Owing to video data's complexities, velocity, and volume, public security and other surveillance applications require efficient, intelligent runtime <b>video processing</b>.",
    "title": "A Deep-Intelligence Framework for Online Video Processing",
    "year": 2016,
    "number": 2,
    "page": 44,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.31",
    "selected": false,
    "authors": [
      {
        "name": "Weishan Zhang",
        "link": ""
      },
      {
        "name": "Liang Xu",
        "link": ""
      },
      {
        "name": "Zhongwei Li",
        "link": ""
      },
      {
        "name": "Qinghua Lu",
        "link": ""
      },
      {
        "name": "Yan Liu",
        "link": ""
      }
    ],
    "authorsList": "Weishan Zhang, Liang Xu, Zhongwei Li, Qinghua Lu, Yan Liu",
    "citation": "Weishan Zhang, Liang Xu, Zhongwei Li, Qinghua Lu, Yan Liu, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.31\">A Deep-Intelligence Framework for Online Video Processing</a>, IEEE Software 2016, no. 2, p. 44",
    "searchText": ""
  },
  {
    "quote": "<b>Big data systems</b> (BDSs) are complex, consisting of multiple interacting hardware and software components, such as distributed computing nodes, databases, and middleware. Any of these components can fail. Finding <b>the failures' root causes</b> is extremely laborious. Analysis of <b>BDS-generated logs</b> can speed up this process. The logs can also help improve testing processes, detect security breaches, customize operational profiles, and aid with any other tasks requiring runtime-data analysis. However, <b>practical challenges</b> hamper log analysis tools' adoption.",
    "title": "Operational-Log Analysis for Big Data Systems: Challenges and Solutions",
    "year": 2016,
    "number": 2,
    "page": 52,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.33",
    "selected": false,
    "authors": [
      {
        "name": "Andriy Miranskyy",
        "link": ""
      },
      {
        "name": "Abdelwahab Hamou-Lhadj",
        "link": ""
      },
      {
        "name": "Enzo Cialini",
        "link": ""
      },
      {
        "name": "Alf Larsson",
        "link": ""
      }
    ],
    "authorsList": "Andriy Miranskyy, Abdelwahab Hamou-Lhadj, Enzo Cialini, Alf Larsson",
    "citation": "Andriy Miranskyy, Abdelwahab Hamou-Lhadj, Enzo Cialini, Alf Larsson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.33\">Operational-Log Analysis for Big Data Systems: Challenges and Solutions</a>, IEEE Software 2016, no. 2, p. 52",
    "searchText": ""
  },
  {
    "quote": "Many real-world data analysis scenarios require <b>pipelining</b> and integration of multiple (big) <b>data-processing</b> and <b>data-analytics jobs</b>, which often execute in heterogeneous environments, such as <b>MapReduce</b>; <b>Spark</b>; or <b>R, Python</b>, or <b>Bash scripts</b>. Such a pipeline requires much <b>glue code</b> to get data across environments.",
    "title": "Building Pipelines for Heterogeneous Execution Environments for Big Data Processing",
    "year": 2016,
    "number": 2,
    "page": 60,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.35",
    "selected": false,
    "authors": [
      {
        "name": "Dongyao Wu",
        "link": ""
      },
      {
        "name": "Liming Zhu",
        "link": ""
      },
      {
        "name": "Xiwei Xu",
        "link": ""
      },
      {
        "name": "Sherif Sakr",
        "link": ""
      },
      {
        "name": "Daniel Sun",
        "link": ""
      },
      {
        "name": "Qinghua Lu",
        "link": ""
      }
    ],
    "authorsList": "Dongyao Wu, Liming Zhu, Xiwei Xu, Sherif Sakr, Daniel Sun, Qinghua Lu",
    "citation": "Dongyao Wu, Liming Zhu, Xiwei Xu, Sherif Sakr, Daniel Sun, Qinghua Lu, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.35\">Building Pipelines for Heterogeneous Execution Environments for Big Data Processing</a>, IEEE Software 2016, no. 2, p. 60",
    "searchText": ""
  },
  {
    "quote": "Clemens Szyperski (Microsoft), Martin Petitclerc (IBM), and Roger Barga (Amazon Web Services) answer three questions: What major challenges do you face when building <b>scalable, big data systems</b>? How do you <b>address these challenges</b>? Where should the research community focus its efforts to create <b>tools and approaches</b> for building highly reliable, scalable, big data systems?",
    "title": "Three Experts on Big Data Engineering",
    "year": 2016,
    "number": 2,
    "page": 68,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.58",
    "selected": false,
    "authors": [
      {
        "name": "Clemens Szyperski",
        "link": ""
      },
      {
        "name": "Martin Petitclerc",
        "link": ""
      },
      {
        "name": "Roger Barga",
        "link": ""
      }
    ],
    "authorsList": "Clemens Szyperski, Martin Petitclerc, Roger Barga",
    "citation": "Clemens Szyperski, Martin Petitclerc, Roger Barga, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.58\">Three Experts on Big Data Engineering</a>, IEEE Software 2016, no. 2, p. 68",
    "searchText": ""
  },
  {
    "quote": "We live in a world of <b>unprecedented complexity</b> and <b>astonishing possibility</b>. We should <b>never forget our past</b>, for those who came before us in computing enabled those possibilities.",
    "title": "Remembrance of Things Past",
    "year": 2016,
    "number": 1,
    "page": 10,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.10",
    "selected": false,
    "authors": [],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.10\">Remembrance of Things Past</a>, IEEE Software 2016, no. 1, p. 10",
    "searchText": ""
  },
  {
    "quote": "The debacle with the <b>VW 'defeat device'</b> raises some unsettling questions. Are any other companies doing this, or-if we take a more cynical standpoint-how many are doing this? If they aren't, are they still using software practices almost as dubious? How do we decide <b>what's reasonable</b>, given software's extraordinary ability to give hardware its character?",
    "title": "When Software Crosses a Line",
    "year": 2016,
    "number": 1,
    "page": 29,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.6",
    "selected": false,
    "authors": [
      {
        "name": "Les Hatton",
        "link": ""
      },
      {
        "name": "Michiel van Genuchten",
        "link": ""
      }
    ],
    "authorsList": "Les Hatton, Michiel van Genuchten",
    "citation": "Les Hatton, Michiel van Genuchten, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.6\">When Software Crosses a Line</a>, IEEE Software 2016, no. 1, p. 29",
    "searchText": ""
  },
  {
    "quote": "This year marks the 50th anniversary of the Turing Award, which was first given to <b>Alan Perlis</b>, an oft-quoted mathematician who described <b>the relationship</b> between <b>humans and computers</b> as having 'a vitality like a <b>gangly youth</b> growing out of his clothes within an <b>endless puberty</b>.' Now that our dependence on software permeates nearly every aspect of our lives, it’s time to ask ourselves where this relationship is headed and, even though software engineering is still a relatively new discipline, <b>how much we’ve matured</b>.",
    "title": "The Future of Software Engineering",
    "year": 2016,
    "number": 1,
    "page": 32,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.8",
    "selected": false,
    "authors": [
      {
        "name": "Forrest Shull",
        "link": ""
      },
      {
        "name": "Anita Carleton",
        "link": ""
      },
      {
        "name": "Jeromy Carriere",
        "link": ""
      },
      {
        "name": "Rafael Prikladnicki",
        "link": ""
      },
      {
        "name": "Dongmei Zhang",
        "link": ""
      }
    ],
    "authorsList": "Forrest Shull, Anita Carleton, Jeromy Carriere, Rafael Prikladnicki, Dongmei Zhang",
    "citation": "Forrest Shull, Anita Carleton, Jeromy Carriere, Rafael Prikladnicki, Dongmei Zhang, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.8\">The Future of Software Engineering</a>, IEEE Software 2016, no. 1, p. 32",
    "searchText": ""
  },
  {
    "quote": "Tim O'Reilly: Code for America is <b>changing government</b> and changing how we think about our role as software professionals. Its work is deeply rooted in the notion that you can <b>no longer govern without</b> using <b>digital technology</b>. Technology is central to how we deliver services today and how people access them. ",
    "title": "Four Thought Leaders on Where the Industry Is Headed",
    "year": 2016,
    "number": 1,
    "page": 36,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.1",
    "selected": false,
    "authors": [
      {
        "name": "Andrew Moore",
        "link": ""
      },
      {
        "name": "Tim O'Reilly",
        "link": ""
      },
      {
        "name": "Paul D. Nielsen",
        "link": ""
      },
      {
        "name": "Kevin Fall",
        "link": ""
      }
    ],
    "authorsList": "Andrew Moore, Tim O'Reilly, Paul D. Nielsen, Kevin Fall",
    "citation": "Andrew Moore, Tim O'Reilly, Paul D. Nielsen, Kevin Fall, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.1\">Four Thought Leaders on Where the Industry Is Headed</a>, IEEE Software 2016, no. 1, p. 36",
    "searchText": ""
  },
  {
    "quote": "To most people, “<b>massive systems</b>” probably means those systems run by NASA, airline companies, or large banks, or operating systems such as Microsoft Windows. What’s in common? They all have <b>complex components or subsystems</b>, deal with massive data, support millions of customers, require <b>real-time response</b>, and more. If they malfunction, catastrophe might ensue.  By those standards, many systems run by <b>today’s Internet companies</b> also <b>qualify as massive</b>. As the Internet grows so quickly, many Internet companies are suffering the same problems that <b>massive systems</b> have suffered. ",
    "title": "The Future of Chinese Software Development",
    "year": 2016,
    "number": 1,
    "page": 40,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.19",
    "selected": false,
    "authors": [
      {
        "name": "Zhengrong Tang",
        "link": ""
      },
      {
        "name": "Melissa Yang",
        "link": ""
      },
      {
        "name": "Joshua Xiang",
        "link": ""
      },
      {
        "name": "John Liu",
        "link": ""
      }
    ],
    "authorsList": "Zhengrong Tang, Melissa Yang, Joshua Xiang, John Liu",
    "citation": "Zhengrong Tang, Melissa Yang, Joshua Xiang, John Liu, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.19\">The Future of Chinese Software Development</a>, IEEE Software 2016, no. 1, p. 40",
    "searchText": ""
  },
  {
    "quote": "<b>Practitioners</b> must become <b>mediators</b> of the process of <b>creating a humane experience</b> and expand their practice to draw from disciplines such as <b>experience design</b>, systems thinking, <b>economics</b>, and digital strategy. They must do what they can to mitigate the <b>negative consequences</b> of technology while continuing to exploit and amplify its positive impacts.",
    "title": "Brazil and the Emerging Future of Software Engineering",
    "year": 2016,
    "number": 1,
    "page": 45,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.28",
    "selected": false,
    "authors": [
      {
        "name": "Claudia de O. Melo",
        "link": ""
      },
      {
        "name": "Ronaldo Ferraz",
        "link": ""
      },
      {
        "name": "Rebecca J. Parsons",
        "link": ""
      }
    ],
    "authorsList": "Claudia de O. Melo, Ronaldo Ferraz, Rebecca J. Parsons",
    "citation": "Claudia de O. Melo, Ronaldo Ferraz, Rebecca J. Parsons, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.28\">Brazil and the Emerging Future of Software Engineering</a>, IEEE Software 2016, no. 1, p. 45",
    "searchText": ""
  },
  {
    "quote": "Software is being produced so fast that its growth hinders its sustainability. <b>Technical debt</b>, which encompasses <b>internal software quality</b>, evolution and maintenance, reengineering, and economics, is growing such that its management is becoming the dominant driver of software engineering progress. It spans the <b>software engineering life cycle</b>, and its management capitalizes on recent advances in fields such as source code analysis, quality measurement, and project management. <b>Managing technical debt</b> will become an investment activity applying <b>economic theories</b>.",
    "title": "Reducing Friction in Software Development",
    "year": 2016,
    "number": 1,
    "page": 66,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.13",
    "selected": false,
    "authors": [
      {
        "name": "Paris Avgeriou",
        "link": ""
      },
      {
        "name": "Philippe Kruchten",
        "link": ""
      },
      {
        "name": "Robert L. Nord",
        "link": ""
      },
      {
        "name": "Ipek Ozkaya",
        "link": ""
      },
      {
        "name": "Carolyn Seaman",
        "link": ""
      }
    ],
    "authorsList": "Paris Avgeriou, Philippe Kruchten, Robert L. Nord, Ipek Ozkaya, Carolyn Seaman",
    "citation": "Paris Avgeriou, Philippe Kruchten, Robert L. Nord, Ipek Ozkaya, Carolyn Seaman, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.13\">Reducing Friction in Software Development</a>, IEEE Software 2016, no. 1, p. 66",
    "searchText": ""
  },
  {
    "quote": "Almost surreptitiously, <b>crowdsourcing</b> has entered software engineering practice. <b>In-house development</b>, contracting, and outsourcing still dominate, but many development projects use crowdsourcing-for example, to squash bugs, test software, or gather alternative UI designs. Although the overall impact has been mundane so far, crowdsourcing could lead to <b>fundamental, disruptive changes</b> in how software is developed.",
    "title": "Crowdsourcing in Software Engineering: Models, Motivations, and Challenges",
    "year": 2016,
    "number": 1,
    "page": 74,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.12",
    "selected": false,
    "authors": [
      {
        "name": "Thomas D. LaToza",
        "link": ""
      },
      {
        "name": "Andre van der Hoek",
        "link": ""
      }
    ],
    "authorsList": "Thomas D. LaToza, Andre van der Hoek",
    "citation": "Thomas D. LaToza, Andre van der Hoek, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.12\">Crowdsourcing in Software Engineering: Models, Motivations, and Challenges</a>, IEEE Software 2016, no. 1, p. 74",
    "searchText": ""
  },
  {
    "quote": "An evaluation of recent industrial and societal trends revealed three key factors driving <b>software engineering's future</b>: <b>speed</b>, <b>data</b>, and <b>ecosystems</b>.",
    "title": "Speed, Data, and Ecosystems: The Future of Software Engineering",
    "year": 2016,
    "number": 1,
    "page": 82,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.14",
    "selected": false,
    "authors": [],
    "authorsList": "Jan Bosch",
    "citation": "Jan Bosch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.14\">Speed, Data, and Ecosystems: The Future of Software Engineering</a>, IEEE Software 2016, no. 1, p. 82",
    "searchText": ""
  },
  {
    "quote": "Today's <b>social-coding tools</b> foreshadow a transformation of the software industry, as it relies increasingly on <b>open libraries</b>, frameworks, and <b>code fragments</b>. Our vision calls for new <b>intelligently transparent services</b> that support <b>rapid development</b> of innovative products while helping developers manage risk and issuing them <b>early warnings</b> of looming failures. Intelligent transparency is enabled by an infrastructure that applies <b>analytics</b> to data from all phases of the life cycle of open source projects, from development to deployment. Such an infrastructure brings stakeholders the information they need when they need it.",
    "title": "Intelligently Transparent Software Ecosystems",
    "year": 2016,
    "number": 1,
    "page": 89,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.156",
    "selected": false,
    "authors": [
      {
        "name": "James Herbsleb",
        "link": ""
      },
      {
        "name": "Christian Kastner",
        "link": ""
      },
      {
        "name": "Christopher Bogart",
        "link": ""
      }
    ],
    "authorsList": "James Herbsleb, Christian Kastner, Christopher Bogart",
    "citation": "James Herbsleb, Christian Kastner, Christopher Bogart, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.156\">Intelligently Transparent Software Ecosystems</a>, IEEE Software 2016, no. 1, p. 89",
    "searchText": ""
  },
  {
    "quote": "We're living in a <b>physical world</b> that's <b>moving at the speed of software</b>. This means that software's trajectory will drive software engineering, not vice versa. However, software engineering is also driven by visionary corporate leaders, backed by skilled software developers.",
    "title": "Software is Driving Software Engineering?",
    "year": 2016,
    "number": 1,
    "page": 101,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.22",
    "selected": false,
    "authors": [
      {
        "name": "George Hurlburt",
        "link": ""
      },
      {
        "name": "Jeffrey Voas",
        "link": ""
      }
    ],
    "authorsList": "George Hurlburt, Jeffrey Voas",
    "citation": "George Hurlburt, Jeffrey Voas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.22\">Software is Driving Software Engineering?</a>, IEEE Software 2016, no. 1, p. 101",
    "searchText": ""
  },
  {
    "quote": "<b>Apache Mesos</b>, ... abstracts away many of the hassles of managing a <b>distributed system</b>. ... You don't have to think about how you're going to <b>get your task</b> to a <b>different machine</b> with Mesos. You just tell it, '<b>Run</b> this task using <b>these resources</b>; those resources are tied to a particular machine,' and then <b>Mesos takes care</b> of getting the task there, <b>starting</b> the task, and <b>watching</b> it while it's actually running on that machine. Mesos provides <b>primitives</b> that somebody building a distributed system can take advantage of. ",
    "title": "Ben Hindman on Apache Mesos",
    "year": 2016,
    "number": 1,
    "page": 117,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2016.18",
    "selected": false,
    "authors": [],
    "authorsList": "Jeff Meyerson",
    "citation": "Jeff Meyerson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2016.18\">Ben Hindman on Apache Mesos</a>, IEEE Software 2016, no. 1, p. 117",
    "searchText": ""
  },
  {
    "quote": "<b>Refactoring</b> changes a program's source code <b>without changing</b> its <b>external behavior</b>, typically to improve the software's design.",
    "title": "Refactoring [Guest editors' introduction]",
    "year": 2015,
    "number": 6,
    "page": 27,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.136",
    "selected": false,
    "authors": [
      {
        "name": "Emerson Murphy-Hill",
        "link": ""
      },
      {
        "name": "Don Roberts",
        "link": ""
      },
      {
        "name": "Peter Sommerlad",
        "link": ""
      },
      {
        "name": "William F. Opdyke",
        "link": ""
      }
    ],
    "authorsList": "Emerson Murphy-Hill, Don Roberts, Peter Sommerlad, William F. Opdyke",
    "citation": "Emerson Murphy-Hill, Don Roberts, Peter Sommerlad, William F. Opdyke, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.136\">Refactoring [Guest editors' introduction]</a>, IEEE Software 2015, no. 6, p. 27",
    "searchText": ""
  },
  {
    "quote": "<b>The safety issue</b>—that a <b>refactoring</b> shouldn’t <b>break working code</b>—was recognized as critical to industrial adoption. It also raised other interesting research issues.",
    "title": "The Birth of Refactoring: A Retrospective on the Nature of High-Impact Software Engineering Research",
    "year": 2015,
    "number": 6,
    "page": 30,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.107",
    "selected": false,
    "authors": [
      {
        "name": "William G. Griswold",
        "link": ""
      },
      {
        "name": "William F. Opdyke",
        "link": ""
      }
    ],
    "authorsList": "William G. Griswold, William F. Opdyke",
    "citation": "William G. Griswold, William F. Opdyke, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.107\">The Birth of Refactoring: A Retrospective on the Nature of High-Impact Software Engineering Research</a>, IEEE Software 2015, no. 6, p. 30",
    "searchText": ""
  },
  {
    "quote": "Developers won’t use tools that seem <b>unreliable</b>. So, the widespread use of <b>refactoring tools</b> speaks to their apparent reliability. However, they <b>aren’t error-free</b>. They work just well enough to be useful, and they break in relatively <b>unimportant ways</b>.",
    "title": "Refactoring Myths",
    "year": 2015,
    "number": 6,
    "page": 39,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.130",
    "selected": false,
    "authors": [
      {
        "name": "Munawar Hafiz",
        "link": ""
      },
      {
        "name": "Jeffrey Overbey",
        "link": ""
      }
    ],
    "authorsList": "Munawar Hafiz, Jeffrey Overbey",
    "citation": "Munawar Hafiz, Jeffrey Overbey, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.130\">Refactoring Myths</a>, IEEE Software 2015, no. 6, p. 39",
    "searchText": ""
  },
  {
    "quote": "<b>Refactoring</b> is a key approach for managing <b>technical debt</b>. In the past few years, refactoring techniques and tools have received considerable attention from researchers and tool vendors.",
    "title": "Challenges to and Solutions for Refactoring Adoption: An Industrial Perspective",
    "year": 2015,
    "number": 6,
    "page": 44,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.105",
    "selected": false,
    "authors": [
      {
        "name": "Tushar Sharma",
        "link": ""
      },
      {
        "name": "Girish Suryanarayana",
        "link": ""
      },
      {
        "name": "Ganesh Samarthyam",
        "link": ""
      }
    ],
    "authorsList": "Tushar Sharma, Girish Suryanarayana, Ganesh Samarthyam",
    "citation": "Tushar Sharma, Girish Suryanarayana, Ganesh Samarthyam, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.105\">Challenges to and Solutions for Refactoring Adoption: An Industrial Perspective</a>, IEEE Software 2015, no. 6, p. 44",
    "searchText": ""
  },
  {
    "quote": "To <b>improve responsiveness</b>, developers often use <b>asynchronous programming</b>. In the post-PC era, <b>asynchronous programming</b> is even more in demand because mobile and wearable devices have limited resources and access the network excessively. One current development task is refactoring long-running, <b>blocking synchronous code</b> (for example, accessing the Web, a cloud, a database, or a file system) into nonblocking asynchronous code.",
    "title": "Refactoring for Asynchronous Execution on Mobile Devices",
    "year": 2015,
    "number": 6,
    "page": 52,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.133",
    "selected": false,
    "authors": [],
    "authorsList": "Danny Dig",
    "citation": "Danny Dig, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.133\">Refactoring for Asynchronous Execution on Mobile Devices</a>, IEEE Software 2015, no. 6, p. 52",
    "searchText": ""
  },
  {
    "quote": "Although <b>database refactoring</b> has been advocated as an important area of database development, little research has studied its implications. ... The experience led to five key lessons learned: refactoring should be <b>automated</b> whenever possible, the database <b>catalog</b> is crucial, refactoring is easier when it's done <b>progressively</b>, refactoring can help <b>optimize</b> an application and streamline its code base, and refactoring related to application development requires a <b>complex skill set</b> and must be applied sensibly.",
    "title": "Database Refactoring: Lessons from the Trenches",
    "year": 2015,
    "number": 6,
    "page": 71,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.131",
    "selected": false,
    "authors": [],
    "authorsList": "Gregory Vial",
    "citation": "Gregory Vial, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.131\">Database Refactoring: Lessons from the Trenches</a>, IEEE Software 2015, no. 6, p. 71",
    "searchText": ""
  },
  {
    "quote": "<b>Agile teams</b> strive to balance <b>short-term feature</b> development with <b>longer-term quality</b> concerns. These evolutionary approaches often hit a '<b>complexity wall</b>'' from the <b>cumulative effects</b> of <b>unplanned changes</b>, resulting in unreliable, poorly performing software.",
    "title": "Toward Agile Architecture: Insights from 15 Years of ATAM Data",
    "year": 2015,
    "number": 5,
    "page": 38,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.35",
    "selected": false,
    "authors": [
      {
        "name": "Stephany Bellomo",
        "link": ""
      },
      {
        "name": "Ian Gorton",
        "link": ""
      },
      {
        "name": "Rick Kazman",
        "link": ""
      }
    ],
    "authorsList": "Stephany Bellomo, Ian Gorton, Rick Kazman",
    "citation": "Stephany Bellomo, Ian Gorton, Rick Kazman, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.35\">Toward Agile Architecture: Insights from 15 Years of ATAM Data</a>, IEEE Software 2015, no. 5, p. 38",
    "searchText": ""
  },
  {
    "quote": "Two innovations are enhancing programming languages' capabilities. First, <b>modularity</b> lets you combine independently developed languages without changing their respective definitions. A language is no longer a fixed quantity; you can extend it with <b>domain-specific constructs</b> as needed. Second, projectional editing lets you <b>build editors and IDEs</b> that don't require parsers. Such editors and IDEs support a range of tightly integrated notations, including textual, symbolic, tabular, and graphical notations.",
    "title": "Projecting a Modular Future",
    "year": 2015,
    "number": 5,
    "page": 46,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.103",
    "selected": false,
    "authors": [
      {
        "name": "Markus Voelter",
        "link": ""
      },
      {
        "name": "Jos Warmer",
        "link": ""
      },
      {
        "name": "Bernd Kolb",
        "link": ""
      }
    ],
    "authorsList": "Markus Voelter, Jos Warmer, Bernd Kolb",
    "citation": "Markus Voelter, Jos Warmer, Bernd Kolb, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.103\">Projecting a Modular Future</a>, IEEE Software 2015, no. 5, p. 46",
    "searchText": ""
  },
  {
    "quote": "A swift execution from idea to market has become a key competitive advantage for software companies to enable them to survive and grow in turbulent business environments. To combat this challenge, companies are using <b>hackathons</b>. A hackathon is a <b>highly engaging</b>, <b>continuous event</b> in which people in small groups produce working software <b>prototypes</b> in a limited amount of time. ... However, hackathons pose the challenge of how to transform those promising <b>prototypes</b> into <b>finalized products</b> that create revenue and real business value.",
    "title": "What are Hackathons for?",
    "year": 2015,
    "number": 5,
    "page": 60,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.78",
    "selected": false,
    "authors": [
      {
        "name": "Marko Komssi",
        "link": ""
      },
      {
        "name": "Danielle Pichlis",
        "link": ""
      },
      {
        "name": "Mikko Raatikainen",
        "link": ""
      },
      {
        "name": "Klas Kindstrom",
        "link": ""
      },
      {
        "name": "Janne Jarvinen",
        "link": ""
      }
    ],
    "authorsList": "Marko Komssi, Danielle Pichlis, Mikko Raatikainen, Klas Kindstrom, Janne Jarvinen",
    "citation": "Marko Komssi, Danielle Pichlis, Mikko Raatikainen, Klas Kindstrom, Janne Jarvinen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.78\">What are Hackathons for?</a>, IEEE Software 2015, no. 5, p. 60",
    "searchText": ""
  },
  {
    "quote": "<b>Software adaptation</b> has become prominent owing to the proliferation of software in <b>everyday devices</b>. In particular, computing with the <b>Internet of Things</b> requires adaptability. Traditional software maintenance, which involves long, energy-consuming cycles, is no longer satisfactory. Adaptation is a lightweight software evolution that provides more transparent maintenance for users.",
    "title": "Software Adaptation: Classification and a Case Study with State Chart XML",
    "year": 2015,
    "number": 5,
    "page": 68,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.130",
    "selected": false,
    "authors": [
      {
        "name": "Franck Barbier",
        "link": ""
      },
      {
        "name": "Eric Cariou",
        "link": ""
      },
      {
        "name": "Olivier Le Goaer",
        "link": ""
      },
      {
        "name": "Samson Pierre",
        "link": ""
      }
    ],
    "authorsList": "Franck Barbier, Eric Cariou, Olivier Le Goaer, Samson Pierre",
    "citation": "Franck Barbier, Eric Cariou, Olivier Le Goaer, Samson Pierre, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.130\">Software Adaptation: Classification and a Case Study with State Chart XML</a>, IEEE Software 2015, no. 5, p. 68",
    "searchText": ""
  },
  {
    "quote": "The SPOT (<b>Single Point of Truth</b>) principle says that developers should specify <b>key pieces of information</b> in one and <b>only one place</b> in their code. Unfortunately, they frequently violate this principle.",
    "title": "Points of Truth",
    "year": 2015,
    "number": 4,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.103",
    "selected": false,
    "authors": [],
    "authorsList": "Gerard J. Holzmann",
    "citation": "Gerard J. Holzmann, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.103\">Points of Truth</a>, IEEE Software 2015, no. 4, p. 18",
    "searchText": ""
  },
  {
    "quote": "Software enables every aspect of the Web. Everything from device communication to online social networks is achievable only because of multiple lines of code. For various reasons, designing and building <b>security and privacy</b> into Web software is often <b>an afterthought</b> for most developers. This results in easily <b>compromised systems</b> that pose significant privacy and security risks to users.",
    "title": "Security and Privacy on the Web [Guest editors' introduction]",
    "year": 2015,
    "number": 4,
    "page": 36,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.86",
    "selected": false,
    "authors": [
      {
        "name": "Tyrone Grandison",
        "link": ""
      },
      {
        "name": "Larry Koved",
        "link": ""
      }
    ],
    "authorsList": "Tyrone Grandison, Larry Koved",
    "citation": "Tyrone Grandison, Larry Koved, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.86\">Security and Privacy on the Web [Guest editors' introduction]</a>, IEEE Software 2015, no. 4, p. 36",
    "searchText": ""
  },
  {
    "quote": "Large organizations often face difficult tradeoffs in <b>balancing</b> the need to <b>share information</b> with the need to <b>safeguard sensitive data</b>. A prominent way to deal with this tradeoff is <b>on-the-fly screen</b> masking of sensitive data in applications.",
    "title": "Application-Screen Masking: A Hybrid Approach",
    "year": 2015,
    "number": 4,
    "page": 40,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.75",
    "selected": false,
    "authors": [
      {
        "name": "Abigail Goldsteen",
        "link": ""
      },
      {
        "name": "Ksenya Kveler",
        "link": ""
      },
      {
        "name": "Tamar Domany",
        "link": ""
      },
      {
        "name": "Igor Gokhman",
        "link": ""
      },
      {
        "name": "Boris Rozenberg",
        "link": ""
      },
      {
        "name": "Ariel Farkash",
        "link": ""
      }
    ],
    "authorsList": "Abigail Goldsteen, Ksenya Kveler, Tamar Domany, Igor Gokhman, Boris Rozenberg, Ariel Farkash",
    "citation": "Abigail Goldsteen, Ksenya Kveler, Tamar Domany, Igor Gokhman, Boris Rozenberg, Ariel Farkash, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.75\">Application-Screen Masking: A Hybrid Approach</a>, IEEE Software 2015, no. 4, p. 40",
    "searchText": ""
  },
  {
    "quote": "<b>Adversaries</b> employ sophisticated <b>fingerprinting</b> techniques to <b>identify Web users</b> and record their browsing history and Web interactions. Fingerprinting leaves no footprint on the browser and is invisible to general Web users, who often lack basic knowledge of it.",
    "title": "An Empirical Evaluation of Web-Based Fingerprinting",
    "year": 2015,
    "number": 4,
    "page": 46,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.77",
    "selected": false,
    "authors": [
      {
        "name": "Amin Faiz Khademi",
        "link": ""
      },
      {
        "name": "Mohammad Zulkernine",
        "link": ""
      },
      {
        "name": "Komminist Weldemariam",
        "link": ""
      }
    ],
    "authorsList": "Amin Faiz Khademi, Mohammad Zulkernine, Komminist Weldemariam",
    "citation": "Amin Faiz Khademi, Mohammad Zulkernine, Komminist Weldemariam, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.77\">An Empirical Evaluation of Web-Based Fingerprinting</a>, IEEE Software 2015, no. 4, p. 46",
    "searchText": ""
  },
  {
    "quote": "<b>Inner source</b>, the adoption and tailoring of open source development practices in organizations, is receiving increased interest.",
    "title": "Inner Source--Adopting Open Source Development Practices in Organizations: A Tutorial",
    "year": 2015,
    "number": 4,
    "page": 60,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.77",
    "selected": false,
    "authors": [
      {
        "name": "Klaas-Jan Stol",
        "link": ""
      },
      {
        "name": "Brian Fitzgerald",
        "link": ""
      }
    ],
    "authorsList": "Klaas-Jan Stol, Brian Fitzgerald",
    "citation": "Klaas-Jan Stol, Brian Fitzgerald, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.77\">Inner Source--Adopting Open Source Development Practices in Organizations: A Tutorial</a>, IEEE Software 2015, no. 4, p. 60",
    "searchText": ""
  },
  {
    "quote": "Formal documentation can be a crucial resource for learning to how to use an <b>API</b>. However, producing <b>high-quality documentation</b> can be nontrivial. ... The three severest problems were <b>ambiguity</b>, <b>incompleteness</b>, and <b>incorrectness</b> of content.",
    "title": "How API Documentation Fails",
    "year": 2015,
    "number": 4,
    "page": 68,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.80",
    "selected": false,
    "authors": [
      {
        "name": "Gias Uddin",
        "link": ""
      },
      {
        "name": "Martin P. Robillard",
        "link": ""
      }
    ],
    "authorsList": "Gias Uddin, Martin P. Robillard",
    "citation": "Gias Uddin, Martin P. Robillard, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.80\">How API Documentation Fails</a>, IEEE Software 2015, no. 4, p. 68",
    "searchText": ""
  },
  {
    "quote": "<b>Software engineers</b> today must be <b>lifelong learners</b> or risk finding themselves <b>out of a job</b>, with totally obsolete skills to sell.",
    "title": "Lifelong Learning for Lifelong Employment",
    "year": 2015,
    "number": 4,
    "page": 85,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.97",
    "selected": false,
    "authors": [],
    "authorsList": "Philippe Kruchten",
    "citation": "Philippe Kruchten, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.97\">Lifelong Learning for Lifelong Employment</a>, IEEE Software 2015, no. 4, p. 85",
    "searchText": ""
  },
  {
    "quote": "<b>Monitoring</b> is critical to IT system health and thus to businesses' bottom line.",
    "title": "IT Infrastructure-Monitoring Tools",
    "year": 2015,
    "number": 4,
    "page": 88,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.96",
    "selected": false,
    "authors": [
      {
        "name": "Josune Hernantes",
        "link": ""
      },
      {
        "name": "Gorka Gallardo",
        "link": ""
      },
      {
        "name": "Nicolas Serrano",
        "link": ""
      }
    ],
    "authorsList": "Josune Hernantes, Gorka Gallardo, Nicolas Serrano",
    "citation": "Josune Hernantes, Gorka Gallardo, Nicolas Serrano, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.96\">IT Infrastructure-Monitoring Tools</a>, IEEE Software 2015, no. 4, p. 88",
    "searchText": ""
  },
  {
    "quote": "Recently proposed <b>model repositories</b> aim to support specific needs--for example, <b>collaborative modeling</b>, the ability to use different modeling tools in software life-cycle management, tool interoperability, increased model reuse, and the integration of heterogeneous models.",
    "title": "Collaborative Repositories in Model-Driven Engineering [Software Technology]",
    "year": 2015,
    "number": 3,
    "page": 28,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.61",
    "selected": false,
    "authors": [
      {
        "name": "Juri Di Rocco",
        "link": ""
      },
      {
        "name": "Davide Di Ruscio",
        "link": ""
      },
      {
        "name": "Ludovico Iovino",
        "link": ""
      },
      {
        "name": "Alfonso Pierantonio",
        "link": ""
      }
    ],
    "authorsList": "Juri Di Rocco, Davide Di Ruscio, Ludovico Iovino, Alfonso Pierantonio",
    "citation": "Juri Di Rocco, Davide Di Ruscio, Ludovico Iovino, Alfonso Pierantonio, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.61\">Collaborative Repositories in Model-Driven Engineering [Software Technology]</a>, IEEE Software 2015, no. 3, p. 28",
    "searchText": ""
  },
  {
    "quote": "An <b>architecture haiku</b> aims to capture software system architecture's most important details on <b>a single piece of pape</b>r. An architecture haiku helps development teams focus on the most essential information relevant to the architecture, provides clear guidance for construction, and encourages collaboration.",
    "title": "Architecture Haiku: A Case Study in Lean Documentation [The Pragmatic Architect]",
    "year": 2015,
    "number": 3,
    "page": 35,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.59",
    "selected": false,
    "authors": [],
    "authorsList": "Michael Keeling",
    "citation": "Michael Keeling, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.59\">Architecture Haiku: A Case Study in Lean Documentation [The Pragmatic Architect]</a>, IEEE Software 2015, no. 3, p. 35",
    "searchText": ""
  },
  {
    "quote": "In <b>variant-rich</b> <b>workflow-based systems</b>, a major concern for process variability is the context-aware configuration of the variants. This means that context information, not users, drives process configuration. ",
    "title": "Run-Time Variability for Context-Aware Smart Workflows",
    "year": 2015,
    "number": 3,
    "page": 52,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.70",
    "selected": false,
    "authors": [
      {
        "name": "Aitor Murguzur",
        "link": ""
      },
      {
        "name": "Salvador Trujillo",
        "link": ""
      },
      {
        "name": "Hong-Linh Truong",
        "link": ""
      },
      {
        "name": "Schahram Dustdar",
        "link": ""
      },
      {
        "name": "Oscar Ortiz",
        "link": ""
      },
      {
        "name": "Goiuria Sagardui",
        "link": ""
      }
    ],
    "authorsList": "Aitor Murguzur, Salvador Trujillo, Hong-Linh Truong, Schahram Dustdar, Oscar Ortiz, Goiuria Sagardui",
    "citation": "Aitor Murguzur, Salvador Trujillo, Hong-Linh Truong, Schahram Dustdar, Oscar Ortiz, Goiuria Sagardui, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.70\">Run-Time Variability for Context-Aware Smart Workflows</a>, IEEE Software 2015, no. 3, p. 52",
    "searchText": ""
  },
  {
    "quote": "<b>Smart manufacturing</b> networks describe a production chain as a marketplace that delivers <b>products on demand</b>. In this chain, partners collaborate in product work routings that connect dispersed service-enabled systems with <b>resources</b>, <b>materials</b>, <b>human expertise</b>, and operation-equipment <b>combinations</b>.",
    "title": "A Reference Architecture and Knowledge-Based Structures for Smart Manufacturing Networks",
    "year": 2015,
    "number": 3,
    "page": 61,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.57",
    "selected": false,
    "authors": [
      {
        "name": "Michael P. Papazoglou",
        "link": ""
      },
      {
        "name": "Willem-Jan van den Heuvel",
        "link": ""
      },
      {
        "name": "Julien Etienne Mascolo",
        "link": ""
      }
    ],
    "authorsList": "Michael P. Papazoglou, Willem-Jan van den Heuvel, Julien Etienne Mascolo",
    "citation": "Michael P. Papazoglou, Willem-Jan van den Heuvel, Julien Etienne Mascolo, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.57\">A Reference Architecture and Knowledge-Based Structures for Smart Manufacturing Networks</a>, IEEE Software 2015, no. 3, p. 61",
    "searchText": ""
  },
  {
    "quote": "<b>Defect taxonomies</b> collect and organize experts' domain knowledge and project experience and are valuable for requirements-based testing. They provide <b>systematic backup</b> for the test design, support decisions for allocating testing resources, improve the review of requirements, and are suitable for measuring product quality.",
    "title": "Using Defect Taxonomies for Testing Requirements",
    "year": 2015,
    "number": 3,
    "page": 94,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.56",
    "selected": false,
    "authors": [
      {
        "name": "Michael Felderer",
        "link": ""
      },
      {
        "name": "Armin Beer",
        "link": ""
      }
    ],
    "authorsList": "Michael Felderer, Armin Beer",
    "citation": "Michael Felderer, Armin Beer, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.56\">Using Defect Taxonomies for Testing Requirements</a>, IEEE Software 2015, no. 3, p. 94",
    "searchText": ""
  },
  {
    "quote": "<b>Docker</b> is a container virtualization technology. So, it’s like a very <b>lightweight virtual machine</b> [VM]. In addition to building containers, we provide what we call <b>a developer workflow</b>, which is really about helping people build containers and applications inside containers and then share those among their teammates.",
    "title": "Docker [Software engineering]",
    "year": 2015,
    "number": 3,
    "page": 102,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.62",
    "selected": false,
    "authors": [],
    "authorsList": "Charles Anderson",
    "citation": "Charles Anderson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.62\">Docker [Software engineering]</a>, IEEE Software 2015, no. 3, p. 102",
    "searchText": ""
  },
  {
    "quote": "<b>Technical debt</b> refers to maintenance obligations that software teams accumulate as a result of their actions. Empirical research has led researchers to suggest <b>three dimensions</b> along which software development teams should map their technical-debt metrics: <b>customer satisfaction</b> needs, <b>reliability</b> needs, and the <b>probability of technology disruption</b>.",
    "title": "Managing Technical Debt: Insights from Recent Empirical Evidence",
    "year": 2015,
    "number": 2,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.45",
    "selected": false,
    "authors": [
      {
        "name": "Narayan Ramasubbu",
        "link": ""
      },
      {
        "name": "Chris F. Kemerer",
        "link": ""
      },
      {
        "name": "C. Jason Woodard",
        "link": ""
      }
    ],
    "authorsList": "Narayan Ramasubbu, Chris F. Kemerer, C. Jason Woodard",
    "citation": "Narayan Ramasubbu, Chris F. Kemerer, C. Jason Woodard, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.45\">Managing Technical Debt: Insights from Recent Empirical Evidence</a>, IEEE Software 2015, no. 2, p. 22",
    "searchText": ""
  },
  {
    "quote": "A <b>refactoring</b> aims to <b>improve a certain quality</b> while <b>preserving others</b>. For example, <b>code refactoring</b> restructures code to make it more maintainable without changing its observable behavior.",
    "title": "Architectural Refactoring: A Task-Centric View on Software Evolution",
    "year": 2015,
    "number": 2,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.37",
    "selected": false,
    "authors": [],
    "authorsList": "Olaf Zimmermann",
    "citation": "Olaf Zimmermann, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.37\">Architectural Refactoring: A Task-Centric View on Software Evolution</a>, IEEE Software 2015, no. 2, p. 26",
    "searchText": ""
  },
  {
    "quote": "The concept of <b>cloud computing</b> has existed for <b>50 years</b>, since the beginning of the Internet. <b>John McCarthy</b> devised the idea of <b>time-sharing</b> in computers as a utility in 1957. Since then, the concept’s name has undergone several changes: from <b>service bureau</b>, to application <b>service provider</b>, to the <b>Internet as a service</b>, to <b>cloud computing</b>, and to <b>software-defined datacenters</b>, with each name having different nuances. ",
    "title": "Infrastructure as a Service and Cloud Technologies",
    "year": 2015,
    "number": 2,
    "page": 30,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.43",
    "selected": false,
    "authors": [
      {
        "name": "Nicolas Serrano",
        "link": ""
      },
      {
        "name": "Gorka Gallardo",
        "link": ""
      },
      {
        "name": "Josune Hernantes",
        "link": ""
      }
    ],
    "authorsList": "Nicolas Serrano, Gorka Gallardo, Josune Hernantes",
    "citation": "Nicolas Serrano, Gorka Gallardo, Josune Hernantes, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.43\">Infrastructure as a Service and Cloud Technologies</a>, IEEE Software 2015, no. 2, p. 30",
    "searchText": ""
  },
  {
    "quote": "<b>Mobile deployments</b> are <b>more challenging</b> than Web deployments because we <b>don’t own the ecosystem</b>, so we can’t do all the things that we would normally do. And the canaries are huge. We watch <b>cold start</b>, <b>warm start</b>, the <b>app size</b>, and the numbers of photos uploaded, comments, and ads being displayed or clicked. Growth and <b>engagement numbers</b> and the <b>crash rate</b> are important to the company. If the crash rate fluctuates, we immediately take action to understand why.",
    "title": "The Practice and Future of Release Engineering: A Roundtable with Three Release Engineers",
    "year": 2015,
    "number": 2,
    "page": 42,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.52",
    "selected": false,
    "authors": [
      {
        "name": "Bram Adams",
        "link": ""
      },
      {
        "name": "Stephany Bellomo",
        "link": ""
      },
      {
        "name": "Christian Bird",
        "link": ""
      },
      {
        "name": "Tamara Marshall-Keim",
        "link": ""
      },
      {
        "name": "Foutse Khomh",
        "link": ""
      },
      {
        "name": "Kim Moir",
        "link": ""
      }
    ],
    "authorsList": "Bram Adams, Stephany Bellomo, Christian Bird, Tamara Marshall-Keim, Foutse Khomh, Kim Moir",
    "citation": "Bram Adams, Stephany Bellomo, Christian Bird, Tamara Marshall-Keim, Foutse Khomh, Kim Moir, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.52\">The Practice and Future of Release Engineering: A Roundtable with Three Release Engineers</a>, IEEE Software 2015, no. 2, p. 42",
    "searchText": ""
  },
  {
    "quote": "<b>Continuous delivery</b> (CD) has emerged as an auspicious <b>alternative</b> to <b>traditional release engineering</b>, promising to provide the capability to release valuable software continuously to customers.",
    "title": "Continuous Delivery: Huge Benefits, but Challenges Too",
    "year": 2015,
    "number": 2,
    "page": 50,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.27",
    "selected": false,
    "authors": [],
    "authorsList": "Lianping Chen",
    "citation": "Lianping Chen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.27\">Continuous Delivery: Huge Benefits, but Challenges Too</a>, IEEE Software 2015, no. 2, p. 50",
    "searchText": ""
  },
  {
    "quote": "<b>Continuous delivery</b> and deployment are dramatically shortening release cycles from months to hours. Cloud applications with <b>high-frequency releases</b> often rely heavily on automated tools and <b>cloud infrastructure APIs</b> to deploy new software versions.",
    "title": "Achieving Reliable High-Frequency Releases in Cloud Environments",
    "year": 2015,
    "number": 2,
    "page": 73,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.23",
    "selected": false,
    "authors": [
      {
        "name": "Liming Zhu",
        "link": ""
      },
      {
        "name": "Donna Xu",
        "link": ""
      },
      {
        "name": "An Binh Tran",
        "link": ""
      },
      {
        "name": "Xiwei Xu",
        "link": ""
      },
      {
        "name": "Len Bass",
        "link": ""
      },
      {
        "name": "Ingo Weber",
        "link": ""
      },
      {
        "name": "Srini Dwarakanathan",
        "link": ""
      }
    ],
    "authorsList": "Liming Zhu, Donna Xu, An Binh Tran, Xiwei Xu, Len Bass, Ingo Weber, Srini Dwarakanathan",
    "citation": "Liming Zhu, Donna Xu, An Binh Tran, Xiwei Xu, Len Bass, Ingo Weber, Srini Dwarakanathan, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.23\">Achieving Reliable High-Frequency Releases in Cloud Environments</a>, IEEE Software 2015, no. 2, p. 73",
    "searchText": ""
  },
  {
    "quote": "Parallels exist between the <b>Industrial Revolution</b> and our current computing revolution regarding <b>risk</b>, <b>transparency</b>, and <b>responsibility</b>.",
    "title": "Of Boilers, Bit, and Bots",
    "year": 2015,
    "number": 1,
    "page": 11,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.13",
    "selected": false,
    "authors": [],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.13\">Of Boilers, Bit, and Bots</a>, IEEE Software 2015, no. 1, p. 11",
    "searchText": ""
  },
  {
    "quote": "<b>Software-driven industries</b> are advancing in five dimensions: <b>collaboration</b>, <b>comprehension</b>, <b>connectivity</b>, <b>cloud</b>, and <b>convergence</b>. However, companies often can get stuck in an overly narrow technology focus. To avoid this, they should <b>connect architecture and functionality</b>, master the entire software development life cycle, strengthen globally distributed teams, and streamline development.",
    "title": "What Next? Advances in Software-Driven Industries",
    "year": 2015,
    "number": 1,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.21",
    "selected": false,
    "authors": [
      {
        "name": "Christof Ebert",
        "link": ""
      },
      {
        "name": "Gerd Hoefner",
        "link": ""
      },
      {
        "name": "Mani V.S.",
        "link": ""
      }
    ],
    "authorsList": "Christof Ebert, Gerd Hoefner, Mani V.S.",
    "citation": "Christof Ebert, Gerd Hoefner, Mani V.S., <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.21\">What Next? Advances in Software-Driven Industries</a>, IEEE Software 2015, no. 1, p. 22",
    "searchText": ""
  },
  {
    "quote": "<b>Software engineering</b> for <b>Internet computing</b> involves the architecting, development, deployment, management, and quality assurance of software supporting Internet-based systems. It also addresses <b>global-development issues</b> such as <b>communication complexity</b>, <b>distributed control</b>, <b>governance policies</b>, and <b>cultural differences</b>.",
    "title": "Software Engineering for Internet Computing: Internetware and Beyond [Guest editors' introduction]",
    "year": 2015,
    "number": 1,
    "page": 35,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.16",
    "selected": false,
    "authors": [
      {
        "name": "Antonia Bertolino",
        "link": ""
      },
      {
        "name": "M. Brian Blake",
        "link": ""
      },
      {
        "name": "Pankaj Mehra",
        "link": ""
      },
      {
        "name": "Hong Mei",
        "link": ""
      },
      {
        "name": "Tao Xie",
        "link": ""
      }
    ],
    "authorsList": "Antonia Bertolino, M. Brian Blake, Pankaj Mehra, Hong Mei, Tao Xie",
    "citation": "Antonia Bertolino, M. Brian Blake, Pankaj Mehra, Hong Mei, Tao Xie, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.16\">Software Engineering for Internet Computing: Internetware and Beyond [Guest editors' introduction]</a>, IEEE Software 2015, no. 1, p. 35",
    "searchText": ""
  },
  {
    "quote": "The <b>Internet of Things (IoT)</b> has the strong potential to support a human society interacting more symbiotically with its <b>physical environment</b>. Indeed, the emergence of tiny devices that sense environmental cues and trigger actuators after consulting logic and human preferences promises a <b>more environmentally</b> aware and less wasteful society.",
    "title": "Debugging the Internet of Things: The Case of Wireless Sensor Networks",
    "year": 2015,
    "number": 1,
    "page": 38,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.132",
    "selected": false,
    "authors": [
      {
        "name": "Patrick Eugster",
        "link": ""
      },
      {
        "name": "Vinaitheerthan Sundaram",
        "link": ""
      },
      {
        "name": "Xiangyu Zhang",
        "link": ""
      }
    ],
    "authorsList": "Patrick Eugster, Vinaitheerthan Sundaram, Xiangyu Zhang",
    "citation": "Patrick Eugster, Vinaitheerthan Sundaram, Xiangyu Zhang, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.132\">Debugging the Internet of Things: The Case of Wireless Sensor Networks</a>, IEEE Software 2015, no. 1, p. 38",
    "searchText": ""
  },
  {
    "quote": "<b>System operations</b> (such as deployment, upgrade, and reconfiguration) <b>for cloud</b> applications are <b>failure prone</b>. These failures occur because these operations are performed through <b>cloud APIs</b> provided by cloud providers and because cloud APIs, in turn, are <b>failure prone</b>.",
    "title": "A Tail-Tolerant Cloud API Wrapper",
    "year": 2015,
    "number": 1,
    "page": 76,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.2",
    "selected": false,
    "authors": [
      {
        "name": "Qinghua Lu",
        "link": ""
      },
      {
        "name": "Xiwei Xu",
        "link": ""
      },
      {
        "name": "Len Bass",
        "link": ""
      },
      {
        "name": "Liming Zhu",
        "link": ""
      },
      {
        "name": "Weishan Zhang",
        "link": ""
      }
    ],
    "authorsList": "Qinghua Lu, Xiwei Xu, Len Bass, Liming Zhu, Weishan Zhang",
    "citation": "Qinghua Lu, Xiwei Xu, Len Bass, Liming Zhu, Weishan Zhang, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.2\">A Tail-Tolerant Cloud API Wrapper</a>, IEEE Software 2015, no. 1, p. 76",
    "searchText": ""
  },
  {
    "quote": "<b>Microservices</b> is the coming together of a bunch of better practices from a number of different communities. It is a combination of great stuff from the <b>domain-driven-design</b> community around <b>strategic design</b>, <b>bounded context</b>, subdomains, how to separate out your domains, and how to partition a very big problem domain into smaller domains so that you can manage them. ",
    "title": "Microservices",
    "year": 2015,
    "number": 1,
    "page": 116,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2015.11",
    "selected": false,
    "authors": [],
    "authorsList": "Johannes Thones",
    "citation": "Johannes Thones, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2015.11\">Microservices</a>, IEEE Software 2015, no. 1, p. 116",
    "searchText": ""
  },
  {
    "quote": "Over the past decades, today, and in the future, business contexts in software organizations and the common ways of developing software are changing dramatically. Formation of <b>teams in distributed environments</b>, virtual or not, calls for new ways of working across <b>geographic</b>, <b>temporal</b>, and <b>cultural boundaries</b>. This, however, also requires <b>effective leadership</b> approaches enabled through systems, processes, technology, and people.",
    "title": "Virtual Teams [Guest editors' introduction]",
    "year": 2014,
    "number": 6,
    "page": 41,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.149",
    "selected": false,
    "authors": [
      {
        "name": "Darja Smite",
        "link": ""
      },
      {
        "name": "Marco Kuhrmann",
        "link": ""
      },
      {
        "name": "Patrick Keil",
        "link": ""
      }
    ],
    "authorsList": "Darja Smite, Marco Kuhrmann, Patrick Keil",
    "citation": "Darja Smite, Marco Kuhrmann, Patrick Keil, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.149\">Virtual Teams [Guest editors' introduction]</a>, IEEE Software 2014, no. 6, p. 41",
    "searchText": ""
  },
  {
    "quote": "Software engineering is a field in which distributed development through <b>virtual teams</b> is a <b>fact of life</b>. ... a set of eight <b>core requirements</b> for support environments for virtual software teams ... (1) Enable <b>Unobtrusive Awareness</b> Information Exchange ... (2) Make Basic Work-Related <b>Data Available</b> ... (3) Provide <b>Multisource Data</b> Combinations ... (4) <b>Filter</b> Irrelevant Information ... (5) Represent and Recognize <b>Current Contexts</b> of Team Members ... (6) Support the <b>Overhearing</b> of Conversations ... (7) Support <b>Mood Sharing</b> ... (8) ... ",
    "title": "Collaboration Spaces for Virtual Software Teams",
    "year": 2014,
    "number": 6,
    "page": 47,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.105",
    "selected": false,
    "authors": [
      {
        "name": "Kevin Dullemond",
        "link": ""
      },
      {
        "name": "Ben van Gameren",
        "link": ""
      },
      {
        "name": "Rini van Solingen",
        "link": ""
      }
    ],
    "authorsList": "Kevin Dullemond, Ben van Gameren, Rini van Solingen",
    "citation": "Kevin Dullemond, Ben van Gameren, Rini van Solingen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.105\">Collaboration Spaces for Virtual Software Teams</a>, IEEE Software 2014, no. 6, p. 47",
    "searchText": ""
  },
  {
    "quote": "In today's world, many companies turn to open source projects as a method to increase productivity and innovation. A major challenge with managing this kind of development is the <b>onboarding of new developers</b> into the virtual teams that drive such projects. There's little guidance on how to initiate new members into such teams and how to overcome the learning curve. This case study on open source software projects shows that <b>mentoring</b> can have a significant impact on onboarding new members into virtual software development teams.",
    "title": "Onboarding in Open Source Projects",
    "year": 2014,
    "number": 6,
    "page": 54,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.107",
    "selected": false,
    "authors": [
      {
        "name": "Fabian Fagerholm",
        "link": ""
      },
      {
        "name": "Alejandro Sanchez Guinea",
        "link": ""
      },
      {
        "name": "Jay Borenstein",
        "link": ""
      },
      {
        "name": "Jurgen Munch",
        "link": ""
      }
    ],
    "authorsList": "Fabian Fagerholm, Alejandro Sanchez Guinea, Jay Borenstein, Jurgen Munch",
    "citation": "Fabian Fagerholm, Alejandro Sanchez Guinea, Jay Borenstein, Jurgen Munch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.107\">Onboarding in Open Source Projects</a>, IEEE Software 2014, no. 6, p. 54",
    "searchText": ""
  },
  {
    "quote": "<b>Privacy</b> is a <b>critical design principle</b> that must be balanced with how we <b>utilize personal data</b> in software. ... the increasing importance of privacy in emerging <b>software ecosystems</b>, legal and standards <b>compliance</b>, and software design practice.",
    "title": "Privacy Requirements in an Age of Increased Sharing",
    "year": 2014,
    "number": 5,
    "page": 24,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.118",
    "selected": false,
    "authors": [],
    "authorsList": "Travis Breaux",
    "citation": "Travis Breaux, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.118\">Privacy Requirements in an Age of Increased Sharing</a>, IEEE Software 2014, no. 5, p. 24",
    "searchText": ""
  },
  {
    "quote": "An impressive number of <b>new startups</b> are launched every day as a result of growing new markets, accessible technologies, and venture capital. New ventures such as <b>Facebook</b>, <b>Supercell</b>, <b>Linkedin</b>, <b>Spotify</b>, <b>WhatsApp</b>, and <b>Dropbox</b>, to name a few, are good examples of startups that evolved into successful businesses. However, despite many successful stories, the <b>great majority</b> of them <b>fail</b> prematurely. Operating in a <b>chaotic</b> and <b>rapidly evolving domain</b> conveys new uncharted challenges for startuppers.",
    "title": "What Do We Know about Software Development in Startups?",
    "year": 2014,
    "number": 5,
    "page": 28,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.129",
    "selected": false,
    "authors": [
      {
        "name": "Carmine Giardino",
        "link": ""
      },
      {
        "name": "Michael Unterkalmsteiner",
        "link": ""
      },
      {
        "name": "Nicolo Paternoster",
        "link": ""
      },
      {
        "name": "Tony Gorschek",
        "link": ""
      },
      {
        "name": "Pekka Abrahamsson",
        "link": ""
      }
    ],
    "authorsList": "Carmine Giardino, Michael Unterkalmsteiner, Nicolo Paternoster, Tony Gorschek, Pekka Abrahamsson",
    "citation": "Carmine Giardino, Michael Unterkalmsteiner, Nicolo Paternoster, Tony Gorschek, Pekka Abrahamsson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.129\">What Do We Know about Software Development in Startups?</a>, IEEE Software 2014, no. 5, p. 28",
    "searchText": ""
  },
  {
    "quote": "One thing we know for certain is that the <b>dominant programming language</b> of today is the <b>legacy language</b> of tomorrow. Sometimes languages are sidelined due to <b>fashion</b>, but changes are generally due to <b>new languages</b> being applicable to a wider or different class of problems than their predecessors. Maybe one day this process will stop, but it seems unlikely that you’d lose money betting on it to continue for a while yet.",
    "title": "Programming Languages",
    "year": 2014,
    "number": 5,
    "page": 33,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.119",
    "selected": false,
    "authors": [
      {
        "name": "Laurence Tratt",
        "link": ""
      },
      {
        "name": "Adam Welc K1 software engineering",
        "link": ""
      }
    ],
    "authorsList": "Laurence Tratt, Adam Welc K1 software engineering",
    "citation": "Laurence Tratt, Adam Welc K1 software engineering, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.119\">Programming Languages</a>, IEEE Software 2014, no. 5, p. 33",
    "searchText": ""
  },
  {
    "quote": "<b>IDEs</b> are essential for programming language developers, and state-of-the-art IDE support is mandatory for programming languages to be successful. Although IDE features for mainstream programming languages are typically implemented manually, this often isn't feasible for programming languages that must be developed with significantly fewer resources. The <b>Spoofax language workbench</b> is a platform for developing textual programming languages with state-of-the-art IDE support.",
    "title": "Language Design with the Spoofax Language Workbench",
    "year": 2014,
    "number": 5,
    "page": 35,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.100",
    "selected": false,
    "authors": [
      {
        "name": "Guido H. Wachsmuth",
        "link": ""
      },
      {
        "name": "Gabriël D.P. Konat",
        "link": ""
      },
      {
        "name": "Eelco Visser",
        "link": ""
      }
    ],
    "authorsList": "Guido H. Wachsmuth, Gabriël D.P. Konat, Eelco Visser",
    "citation": "Guido H. Wachsmuth, Gabriël D.P. Konat, Eelco Visser, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.100\">Language Design with the Spoofax Language Workbench</a>, IEEE Software 2014, no. 5, p. 35",
    "searchText": ""
  },
  {
    "quote": "<b>Scripting languages</b> are very popular and are being used to implement a wide range of applications. Meanwhile, multi-core processors are everywhere, from dektop computers to mobile devices, and concurrency has become the only means to improve performance. However, <b>concurrent programming</b> remains difficult and despite some interest in researching new concurrency models for compiled languages, the conventional concurrency support in scripting languages is still lacking.",
    "title": "Scripting Multiple CPUs with Safe Data Sharing",
    "year": 2014,
    "number": 5,
    "page": 44,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.102",
    "selected": false,
    "authors": [
      {
        "name": "Alexandre Skyrme",
        "link": ""
      },
      {
        "name": "Noemi Rodriguez",
        "link": ""
      },
      {
        "name": "Roberto Ierusalimschy",
        "link": ""
      }
    ],
    "authorsList": "Alexandre Skyrme, Noemi Rodriguez, Roberto Ierusalimschy",
    "citation": "Alexandre Skyrme, Noemi Rodriguez, Roberto Ierusalimschy, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.102\">Scripting Multiple CPUs with Safe Data Sharing</a>, IEEE Software 2014, no. 5, p. 44",
    "searchText": ""
  },
  {
    "quote": "<b>Modern software</b> differs significantly from <b>traditional</b> computer applications that mostly process reasonably small amounts of <b>static input data</b>-sets in batch mode. Modern software increasingly processes <b>massive amounts of data</b>, whereby it is also often the case that new input data is produced and/or existing data is <b>modified on the fly</b>. Consequently, <b>programming models</b> that facilitate the development of such software are emerging. What characterizes them is that <b>data</b>, respectively changes thereof, <b>implicitly flow</b> through computation modules.",
    "title": "Programming with Implicit Flows",
    "year": 2014,
    "number": 5,
    "page": 52,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.101",
    "selected": false,
    "authors": [
      {
        "name": "Guido Salvaneschi",
        "link": ""
      },
      {
        "name": "Patrick Eugster",
        "link": ""
      },
      {
        "name": "Mira Mezini",
        "link": ""
      }
    ],
    "authorsList": "Guido Salvaneschi, Patrick Eugster, Mira Mezini",
    "citation": "Guido Salvaneschi, Patrick Eugster, Mira Mezini, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.101\">Programming with Implicit Flows</a>, IEEE Software 2014, no. 5, p. 52",
    "searchText": ""
  },
  {
    "quote": "In large-scale software development, there is typically <b>a conflict</b> between being responsive to <b>individual customers</b>, while at the same time achieving scale in terms of delivering a high number of features to a <b>large customer base</b>. Most often, organizations <b>focus on scale</b> and individual customer requests are viewed as problematic since they <b>add complexity</b> to product variation and version control.",
    "title": "Scale and Responsiveness in Large-Scale Software Development",
    "year": 2014,
    "number": 5,
    "page": 87,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.139",
    "selected": false,
    "authors": [
      {
        "name": "Helena Olsson",
        "link": ""
      },
      {
        "name": "Anna Sandberg",
        "link": ""
      },
      {
        "name": "Jan Bosch",
        "link": ""
      },
      {
        "name": "Hiva Alahyari",
        "link": ""
      }
    ],
    "authorsList": "Helena Olsson, Anna Sandberg, Jan Bosch, Hiva Alahyari",
    "citation": "Helena Olsson, Anna Sandberg, Jan Bosch, Hiva Alahyari, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.139\">Scale and Responsiveness in Large-Scale Software Development</a>, IEEE Software 2014, no. 5, p. 87",
    "searchText": ""
  },
  {
    "quote": "There’s a joke that <b>Go</b> was conceived while <b>waiting for</b> a <b>C++</b> program <b>to compile</b>, which is kind of half true. ",
    "title": "The Go Programming LanguageK1 syntax",
    "year": 2014,
    "number": 5,
    "page": 104,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.127",
    "selected": false,
    "authors": [],
    "authorsList": "Jeff Meyerson",
    "citation": "Jeff Meyerson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.127\">The Go Programming LanguageK1 syntax</a>, IEEE Software 2014, no. 5, p. 104",
    "searchText": ""
  },
  {
    "quote": "Studies show that software <b>developers' happiness</b> pays off when it comes to <b>productivity</b>.",
    "title": "Software Developers, Moods, Emotions, and Performance",
    "year": 2014,
    "number": 4,
    "page": 24,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.94",
    "selected": false,
    "authors": [
      {
        "name": "Daniel Graziotin",
        "link": ""
      },
      {
        "name": "Xiaofeng Wang",
        "link": ""
      },
      {
        "name": "Pekka Abrahamsson",
        "link": ""
      }
    ],
    "authorsList": "Daniel Graziotin, Xiaofeng Wang, Pekka Abrahamsson",
    "citation": "Daniel Graziotin, Xiaofeng Wang, Pekka Abrahamsson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.94\">Software Developers, Moods, Emotions, and Performance</a>, IEEE Software 2014, no. 4, p. 24",
    "searchText": ""
  },
  {
    "quote": "The <b>capacity to reflect</b> on past practice is important for <b>continuous learning</b> in software development. Reflection often takes place <b>in cycles</b> of <b>experience</b> followed by <b>conscious application</b> of learning from that experience, during which a software developer might explore comparisons, ponder alternatives, take diverse perspectives, and draw inferences, especially in new and/or complex situations. Such reflective practice has been shown in different disciplines to be an <b>effective developmental practice</b> for <b>organizations</b>, for <b>teams</b>, and for <b>individuals</b>.",
    "title": "The Reflective Software Engineer: Reflective Practice",
    "year": 2014,
    "number": 4,
    "page": 32,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.97",
    "selected": false,
    "authors": [
      {
        "name": "Tore Dyba",
        "link": ""
      },
      {
        "name": "Neil Maiden",
        "link": ""
      },
      {
        "name": "Robert Glass K1 practitioners",
        "link": ""
      }
    ],
    "authorsList": "Tore Dyba, Neil Maiden, Robert Glass K1 practitioners",
    "citation": "Tore Dyba, Neil Maiden, Robert Glass K1 practitioners, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.97\">The Reflective Software Engineer: Reflective Practice</a>, IEEE Software 2014, no. 4, p. 32",
    "searchText": ""
  },
  {
    "quote": "<b>Project retrospectives</b> can be powerful tools for project teams to collectively identify communication gaps and practices to improve for future projects. However, even if project members take the time for a retrospective, it can be hard to <b>correctly remember</b> and <b>jointly discuss</b> past events in a constructive way. <b>Fact-based timelines</b> that visualize a project's events offer a possible solution.",
    "title": "Reflecting on Evidence-Based Timelines",
    "year": 2014,
    "number": 4,
    "page": 37,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.26",
    "selected": false,
    "authors": [
      {
        "name": "Elizabeth Bjarnason",
        "link": ""
      },
      {
        "name": "Anne Hess",
        "link": ""
      },
      {
        "name": "Richard Berntsson Svensson",
        "link": ""
      },
      {
        "name": "Bjorn Regnell",
        "link": ""
      },
      {
        "name": "Joerg Doerr",
        "link": ""
      }
    ],
    "authorsList": "Elizabeth Bjarnason, Anne Hess, Richard Berntsson Svensson, Bjorn Regnell, Joerg Doerr",
    "citation": "Elizabeth Bjarnason, Anne Hess, Richard Berntsson Svensson, Bjorn Regnell, Joerg Doerr, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.26\">Reflecting on Evidence-Based Timelines</a>, IEEE Software 2014, no. 4, p. 37",
    "searchText": ""
  },
  {
    "quote": "<b>Learning</b> is a <b>lifelong process</b>, especially in the fast-paced software industry. In addition to <b>formal training</b> courses, good software developers continually <b>learn by reflecting</b> on what they've done in the past. However, reflective practice is <b>rarely taught</b> explicitly in university software engineering education. One way to teach reflective techniques from the start is through <b>studio-based learning</b>.",
    "title": "Supporting Reflective Practice in Software Engineering Education through a Studio-Based Approach",
    "year": 2014,
    "number": 4,
    "page": 44,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.52",
    "selected": false,
    "authors": [
      {
        "name": "Christopher N. Bull",
        "link": ""
      },
      {
        "name": "Jon Whittle",
        "link": ""
      }
    ],
    "authorsList": "Christopher N. Bull, Jon Whittle",
    "citation": "Christopher N. Bull, Jon Whittle, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.52\">Supporting Reflective Practice in Software Engineering Education through a Studio-Based Approach</a>, IEEE Software 2014, no. 4, p. 44",
    "searchText": ""
  },
  {
    "quote": "The theoretical underpinnings of <b>agile principles</b> emphasize <b>regular reflection</b> as a means to attain a <b>sustainable development pace</b> and continuous learning. In practice, high <b>iteration pressure</b> can diminish opportunities for ongoing learning and reflection threatening to deprive software teams of learning and reflection and possibly stagnating process evolution.",
    "title": "Embedding Reflection and Learning into Agile Software Development",
    "year": 2014,
    "number": 4,
    "page": 51,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.54",
    "selected": false,
    "authors": [
      {
        "name": "Jeffry Babb",
        "link": ""
      },
      {
        "name": "Rashina Hoda",
        "link": ""
      },
      {
        "name": "Jacob Norbjerg",
        "link": ""
      }
    ],
    "authorsList": "Jeffry Babb, Rashina Hoda, Jacob Norbjerg",
    "citation": "Jeffry Babb, Rashina Hoda, Jacob Norbjerg, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.54\">Embedding Reflection and Learning into Agile Software Development</a>, IEEE Software 2014, no. 4, p. 51",
    "searchText": ""
  },
  {
    "quote": "A <b>coderetreat</b> is an event where software developers gather to <b>spend a day exploring</b> their craft in an informal yet intellectually challenging environment. It encourages <b>reflective practice</b> by addressing <b>a single programming problem</b> from different perspectives, with multiple coding partners, freed from the daily pressures of deadlines and the need to deliver completed artifacts.",
    "title": "Coderetreats: Reflective Practice and the Game of Life",
    "year": 2014,
    "number": 4,
    "page": 58,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.25",
    "selected": false,
    "authors": [
      {
        "name": "David Parsons",
        "link": ""
      },
      {
        "name": "Anuradha Mathrani",
        "link": ""
      },
      {
        "name": "Teo Susnjak",
        "link": ""
      },
      {
        "name": "Arno Leist",
        "link": ""
      }
    ],
    "authorsList": "David Parsons, Anuradha Mathrani, Teo Susnjak, Arno Leist",
    "citation": "David Parsons, Anuradha Mathrani, Teo Susnjak, Arno Leist, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.25\">Coderetreats: Reflective Practice and the Game of Life</a>, IEEE Software 2014, no. 4, p. 58",
    "searchText": ""
  },
  {
    "quote": "<b>Microblogging</b> is a popular form of <b>social media</b> that has quickly permeated both enterprise and open source communities. However, exactly how open source communities can leverage microblogging isn't yet well understood. ... how <b>Drupal's</b> open source community uses <b>Twitter</b> ... community members often express <b>positive emotions</b> when tweeting about work, which reinforces a sense of community.",
    "title": "Microblogging in Open Source Software Development: The Case of Drupal and Twitter",
    "year": 2014,
    "number": 4,
    "page": 72,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.98",
    "selected": false,
    "authors": [
      {
        "name": "Xiaofeng Wang",
        "link": ""
      },
      {
        "name": "Ilona Kuzmickaja",
        "link": ""
      },
      {
        "name": "Klaas-Jan Stol",
        "link": ""
      },
      {
        "name": "Pekka Abrahamsson",
        "link": ""
      },
      {
        "name": "Brian Fitzgerald",
        "link": ""
      }
    ],
    "authorsList": "Xiaofeng Wang, Ilona Kuzmickaja, Klaas-Jan Stol, Pekka Abrahamsson, Brian Fitzgerald",
    "citation": "Xiaofeng Wang, Ilona Kuzmickaja, Klaas-Jan Stol, Pekka Abrahamsson, Brian Fitzgerald, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.98\">Microblogging in Open Source Software Development: The Case of Drupal and Twitter</a>, IEEE Software 2014, no. 4, p. 72",
    "searchText": ""
  },
  {
    "quote": "Many <b>types of architects</b> work in the software industry, but when we consider the breadth of their work and their primary expertise, we find that they can be organized into three major groups: <b>enterprise architects</b>, <b>application architects</b>, and <b>infrastructure architects</b>. Knowing which group an architect falls into helps in understanding their expertise and what to expect of them.",
    "title": "Return of the Pragmatic ArchitectK1 infrastructure",
    "year": 2014,
    "number": 3,
    "page": 10,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.69",
    "selected": false,
    "authors": [],
    "authorsList": "Eoin Woods",
    "citation": "Eoin Woods, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.69\">Return of the Pragmatic ArchitectK1 infrastructure</a>, IEEE Software 2014, no. 3, p. 10",
    "searchText": ""
  },
  {
    "quote": "<b>Continuous integration</b> has been around for a while now, but the habits it suggests are <b>far from common practice</b>. <b>Automated builds</b>, a <b>thorough test suite</b>, and committing to <b>the mainline branch</b> every day sound simple at first, but they require a <b>responsible team</b> to implement and constant care. What starts with improved tooling can be <b>a catalyst</b> for long-lasting change in your company's shipping culture. Continuous integration is more than a set of practices, it's a mindset that has one thing in mind: <b>increasing customer value</b>.",
    "title": "Continuous Integration and Its ToolsK1 testing",
    "year": 2014,
    "number": 3,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.58",
    "selected": false,
    "authors": [],
    "authorsList": "Mathias Meyer",
    "citation": "Mathias Meyer, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.58\">Continuous Integration and Its ToolsK1 testing</a>, IEEE Software 2014, no. 3, p. 14",
    "searchText": ""
  },
  {
    "quote": "<b>Quality goals</b> for security, business agility, maintainability and other such attributes are often achieved through implementing best practices. To know which <b>stakeholder goals</b> are attainable and how they can best be achieved, we must <b>empirically evaluate</b> software development beliefs and practices.",
    "title": "Beyond Anecdotal Thinking: Deepening Our Understanding for Achieving Quality Goals",
    "year": 2014,
    "number": 3,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.57",
    "selected": false,
    "authors": [
      {
        "name": "Mamoun Hirzalla",
        "link": ""
      },
      {
        "name": "Peter Bahrs",
        "link": ""
      },
      {
        "name": "Jane Cleland-Huang K1 quality goals",
        "link": ""
      }
    ],
    "authorsList": "Mamoun Hirzalla, Peter Bahrs, Jane Cleland-Huang K1 quality goals",
    "citation": "Mamoun Hirzalla, Peter Bahrs, Jane Cleland-Huang K1 quality goals, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.57\">Beyond Anecdotal Thinking: Deepening Our Understanding for Achieving Quality Goals</a>, IEEE Software 2014, no. 3, p. 26",
    "searchText": ""
  },
  {
    "quote": "Most studies and regulatory controls focus on <b>hardware-related measurement</b>, analysis, and control for <b>energy consumption</b>. However, all forms of hardware include <b>significant software components</b>. Although software systems don't consume energy directly, they affect <b>hardware utilization</b>, leading to <b>indirect energy consumption</b>. Therefore, it's important to engineer software to optimize its energy consumption. ",
    "title": "Green Software",
    "year": 2014,
    "number": 3,
    "page": 36,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.62",
    "selected": false,
    "authors": [
      {
        "name": "Ayse Basar Bener",
        "link": ""
      },
      {
        "name": "Maurizio Morisio",
        "link": ""
      },
      {
        "name": "Andriy Miranskyy K1 cloud",
        "link": ""
      }
    ],
    "authorsList": "Ayse Basar Bener, Maurizio Morisio, Andriy Miranskyy K1 cloud",
    "citation": "Ayse Basar Bener, Maurizio Morisio, Andriy Miranskyy K1 cloud, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.62\">Green Software</a>, IEEE Software 2014, no. 3, p. 36",
    "searchText": ""
  },
  {
    "quote": "Many software systems today control <b>large-scale sociotechnical systems</b>. These systems aren't just entangled with the environment but also with our dwindling resources and mostly unsustainable way of living, while the planet's population continues to grow. Dealing with <b>sustainability requirements</b> and systematically supporting their elicitation, analysis, and realization is a problem that has yet to be solved.",
    "title": "Safety, Security, Now Sustainability: The Nonfunctional Requirement for the 21st Century",
    "year": 2014,
    "number": 3,
    "page": 40,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.22",
    "selected": false,
    "authors": [
      {
        "name": "Birgit Penzenstadler",
        "link": ""
      },
      {
        "name": "Ankita Raturi",
        "link": ""
      },
      {
        "name": "Debra Richardson",
        "link": ""
      },
      {
        "name": "Bill Tomlinson",
        "link": ""
      }
    ],
    "authorsList": "Birgit Penzenstadler, Ankita Raturi, Debra Richardson, Bill Tomlinson",
    "citation": "Birgit Penzenstadler, Ankita Raturi, Debra Richardson, Bill Tomlinson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.22\">Safety, Security, Now Sustainability: The Nonfunctional Requirement for the 21st Century</a>, IEEE Software 2014, no. 3, p. 40",
    "searchText": ""
  },
  {
    "quote": "<b>Energy efficiency</b> and other <b>sustainability issues</b> are common concerns in the material production industries but rarely addressed in software development efforts. Instead, traditional software development life cycles and methodologies place an emphasis on maintainability and other intrinsic software quality features. One standard practice is to <b>improve maintainability</b> by detecting <b>bad smells</b> in a system's architecture and then applying <b>refactoring transformations</b> to deal with those smells. The refactoring research area is sufficiently mature for most techniques to achieve more maintainable system architectures, but ... they can also lead to both <b>decreased sustainability</b> and <b>increased power consumption</b>.",
    "title": "Analyzing the Harmful Effect of God Class Refactoring on Power Consumption",
    "year": 2014,
    "number": 3,
    "page": 48,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.23",
    "selected": false,
    "authors": [
      {
        "name": "Ricardo Perez-Castillo",
        "link": ""
      },
      {
        "name": "Mario Piattini",
        "link": ""
      }
    ],
    "authorsList": "Ricardo Perez-Castillo, Mario Piattini",
    "citation": "Ricardo Perez-Castillo, Mario Piattini, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.23\">Analyzing the Harmful Effect of God Class Refactoring on Power Consumption</a>, IEEE Software 2014, no. 3, p. 48",
    "searchText": ""
  },
  {
    "quote": "To develop more powerful, service-specific strategies for <b>reducing IT's carbon footprint</b>, we need more complete and widely <b>understandable specifications</b> that describe exactly a service's functionality, the level of quality it achieves, and its <b>environmental consequences</b>. Such green specifications will allow more stakeholders involved in the delivery and consumption of IT services to understand their detailed functionality and the <b>tradeoffs</b> between <b>quality of service</b> and <b>environmental impact</b> entailed in their use.",
    "title": "Facilitating Greener IT through Green Specifications",
    "year": 2014,
    "number": 3,
    "page": 56,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.19",
    "selected": false,
    "authors": [
      {
        "name": "Colin Atkinson",
        "link": ""
      },
      {
        "name": "Thomas Schulze",
        "link": ""
      },
      {
        "name": "Sonja Klingert",
        "link": ""
      }
    ],
    "authorsList": "Colin Atkinson, Thomas Schulze, Sonja Klingert",
    "citation": "Colin Atkinson, Thomas Schulze, Sonja Klingert, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.19\">Facilitating Greener IT through Green Specifications</a>, IEEE Software 2014, no. 3, p. 56",
    "searchText": ""
  },
  {
    "quote": "In applications in which <b>embedded devices</b> cooperate with <b>ICT (information and communication technology)</b> systems to make industrial processes more efficient, reduce waste or raw materials, and save the environment, the concept of <b>green software</b> becomes increasingly complex. To deal with this issue, the green-software community has introduced the concepts of <b>greening ICT</b> or <b>greening through ICT</b>.",
    "title": "Green Software: Greening What and How Much?",
    "year": 2014,
    "number": 3,
    "page": 64,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.63",
    "selected": false,
    "authors": [
      {
        "name": "Krzysztof Sierszecki",
        "link": ""
      },
      {
        "name": "Tommi Mikkonen",
        "link": ""
      },
      {
        "name": "Michaela Steffens",
        "link": ""
      },
      {
        "name": "Thomas Fogdal",
        "link": ""
      },
      {
        "name": "Juha Savolainen K1 software engineering",
        "link": ""
      }
    ],
    "authorsList": "Krzysztof Sierszecki, Tommi Mikkonen, Michaela Steffens, Thomas Fogdal, Juha Savolainen K1 software engineering",
    "citation": "Krzysztof Sierszecki, Tommi Mikkonen, Michaela Steffens, Thomas Fogdal, Juha Savolainen K1 software engineering, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.63\">Green Software: Greening What and How Much?</a>, IEEE Software 2014, no. 3, p. 64",
    "searchText": ""
  },
  {
    "quote": "Hardware and software engineers are instrumental in developing <b>energy-efficient mobile systems</b>. Unfortunately, the <b>last mile of energy</b> efficiency relies on end users' choices and requirements. Imagine a user who has no power outlet access and must remain productive on the laptop's battery. How does this person maximize battery life, yet remain productive? What does the user have to give up to keep working?",
    "title": "The Impact of User Choice on Energy Consumption",
    "year": 2014,
    "number": 3,
    "page": 69,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.27",
    "selected": false,
    "authors": [
      {
        "name": "Chenlei Zhang",
        "link": ""
      },
      {
        "name": "Abram Hindle",
        "link": ""
      },
      {
        "name": "Daniel M. German",
        "link": ""
      }
    ],
    "authorsList": "Chenlei Zhang, Abram Hindle, Daniel M. German",
    "citation": "Chenlei Zhang, Abram Hindle, Daniel M. German, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.27\">The Impact of User Choice on Energy Consumption</a>, IEEE Software 2014, no. 3, p. 69",
    "searchText": ""
  },
  {
    "quote": "The <b>Healthcare.gov debacle</b> of 2013 leads many to wonder if a better understanding of the project's requirements could have lessened the impact of the failed launch.",
    "title": "Don't Fire the Architect! Where Were the Requirements?",
    "year": 2014,
    "number": 2,
    "page": 27,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.34",
    "selected": false,
    "authors": [],
    "authorsList": "Jane Cleland-Huang",
    "citation": "Jane Cleland-Huang, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.34\">Don't Fire the Architect! Where Were the Requirements?</a>, IEEE Software 2014, no. 2, p. 27",
    "searchText": ""
  },
  {
    "quote": "Many affordable <b>cloud-based offerings</b> that cover software development needs, like <b>version control</b>, <b>issue tracking</b>, <b>remote application monitoring</b>, <b>localization</b>, <b>deployment</b>, <b>payment processing</b>, and <b>continuous integration</b>, do away with the setup, maintenance, and user support costs and complexity associated with running such systems in-house. The most <b>important risks</b> of cloud-based tools concern <b>control of the data</b> stored and the services an organization uses.",
    "title": "Developing in the Cloud",
    "year": 2014,
    "number": 2,
    "page": 41,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.33",
    "selected": false,
    "authors": [],
    "authorsList": "Diomidis Spinellis",
    "citation": "Diomidis Spinellis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.33\">Developing in the Cloud</a>, IEEE Software 2014, no. 2, p. 41",
    "searchText": ""
  },
  {
    "quote": "Within the <b>last decade</b>, <b>laptop sales</b> have surpassed those of <b>desktop computers</b> in many world markets, and the worldwide popularity of <b>smartphones</b> has surpassed them both ... But smartphones are not the likely end of the mobile computing innovation vector. We believe <b>mobile computing is in its infancy</b>, and the next generations of mobile technology are going to be even more pervasive, smaller, and maybe even a bit weirder and more integral to our lives, jobs, and future.",
    "title": "Next-Generation Mobile Computing",
    "year": 2014,
    "number": 2,
    "page": 44,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.39",
    "selected": false,
    "authors": [
      {
        "name": "James Edmondson",
        "link": ""
      },
      {
        "name": "William Anderson",
        "link": ""
      },
      {
        "name": "Jeff Gray",
        "link": ""
      },
      {
        "name": "Joseph P. Loyall",
        "link": ""
      },
      {
        "name": "Klaus Schmid",
        "link": ""
      },
      {
        "name": "Jules White",
        "link": ""
      }
    ],
    "authorsList": "James Edmondson, William Anderson, Jeff Gray, Joseph P. Loyall, Klaus Schmid, Jules White",
    "citation": "James Edmondson, William Anderson, Jeff Gray, Joseph P. Loyall, Klaus Schmid, Jules White, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.39\">Next-Generation Mobile Computing</a>, IEEE Software 2014, no. 2, p. 44",
    "searchText": ""
  },
  {
    "quote": "Researchers from <b>sociological disciplines</b> could greatly benefit from <b>collective information</b> from the many people who use <b>mobile devices</b> to communicate via various social apps and services. However, processing that information is difficult because it's <b>scattered</b> among numerous social platforms. Furthermore, <b>users</b> are becoming <b>increasingly concerned</b> about how and by whom their information is being accessed.",
    "title": "People as a Service: A Mobile-centric Model for Providing Collective Sociological Profiles",
    "year": 2014,
    "number": 2,
    "page": 48,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.140",
    "selected": false,
    "authors": [
      {
        "name": "Joaquin Guillen",
        "link": ""
      },
      {
        "name": "Javier Miranda",
        "link": ""
      },
      {
        "name": "Javier Berrocal",
        "link": ""
      },
      {
        "name": "Jose Garcia-Alonso",
        "link": ""
      },
      {
        "name": "Juan Manuel Murillo",
        "link": ""
      },
      {
        "name": "Carlos Canal",
        "link": ""
      }
    ],
    "authorsList": "Joaquin Guillen, Javier Miranda, Javier Berrocal, Jose Garcia-Alonso, Juan Manuel Murillo, Carlos Canal",
    "citation": "Joaquin Guillen, Javier Miranda, Javier Berrocal, Jose Garcia-Alonso, Juan Manuel Murillo, Carlos Canal, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.140\">People as a Service: A Mobile-centric Model for Providing Collective Sociological Profiles</a>, IEEE Software 2014, no. 2, p. 48",
    "searchText": ""
  },
  {
    "quote": "Mobile cloud computing infrastructures supporting the vision of the <b>Internet of Things</b> (IoT) provide services <b>beneficial to our society</b>. For example, a <b>cloud of smartphones</b> can run software that shares the sensing and computing resources of nearby devices, providing increased <b>situational awareness</b> in a <b>disaster zone</b>. ",
    "title": "Distributed Real-Time Managed Systems: A Model-Driven Distributed Secure Information Architecture Platform for Managed Embedded Systems",
    "year": 2014,
    "number": 2,
    "page": 62,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.143",
    "selected": false,
    "authors": [
      {
        "name": "Tihamer Levendovszky",
        "link": ""
      },
      {
        "name": "Abhishek Dubey",
        "link": ""
      },
      {
        "name": "William R. Otte",
        "link": ""
      },
      {
        "name": "Daniel Balasubramanian",
        "link": ""
      },
      {
        "name": "Alessandro Coglio",
        "link": ""
      },
      {
        "name": "Sandor Nyako",
        "link": ""
      },
      {
        "name": "William Emfinger",
        "link": ""
      },
      {
        "name": "Pranav Kumar",
        "link": ""
      },
      {
        "name": "Aniruddha Gokhale",
        "link": ""
      },
      {
        "name": "Gabor Karsai",
        "link": ""
      }
    ],
    "authorsList": "Tihamer Levendovszky, Abhishek Dubey, William R. Otte, Daniel Balasubramanian, Alessandro Coglio, Sandor Nyako, William Emfinger, Pranav Kumar, Aniruddha Gokhale, Gabor Karsai",
    "citation": "Tihamer Levendovszky, Abhishek Dubey, William R. Otte, Daniel Balasubramanian, Alessandro Coglio, Sandor Nyako, William Emfinger, Pranav Kumar, Aniruddha Gokhale, Gabor Karsai, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.143\">Distributed Real-Time Managed Systems: A Model-Driven Distributed Secure Information Architecture Platform for Managed Embedded Systems</a>, IEEE Software 2014, no. 2, p. 62",
    "searchText": ""
  },
  {
    "quote": "Newer models for interacting with wireless sensors such as <b>Internet of Things</b> and <b>Sensor Cloud</b> aim to overcome restricted resources and efficiency. The Missouri S&T (science and technology) sensor cloud enables different networks, spread in a huge geographical area, to connect together and be employed simultaneously by multiple users on demand. <b>Virtual sensors</b>, which are at the core of this sensor cloud architecture, assist in creating a multiuser environment on top of resource-constrained physical wireless sensors and can help in supporting multiple applications.",
    "title": "Sensor Cloud: A Cloud of Virtual Sensors",
    "year": 2014,
    "number": 2,
    "page": 70,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.141",
    "selected": false,
    "authors": [
      {
        "name": "Sanjay Madria",
        "link": ""
      },
      {
        "name": "Vimal Kumar",
        "link": ""
      },
      {
        "name": "Rashmi Dalvi",
        "link": ""
      }
    ],
    "authorsList": "Sanjay Madria, Vimal Kumar, Rashmi Dalvi",
    "citation": "Sanjay Madria, Vimal Kumar, Rashmi Dalvi, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.141\">Sensor Cloud: A Cloud of Virtual Sensors</a>, IEEE Software 2014, no. 2, p. 70",
    "searchText": ""
  },
  {
    "quote": "Developers of <b>embedded systems</b> are driven to constantly improve product quality, reduce cost, and rapidly deliver reliable working code. The embedded software domain applies constraints which can <b>hinder agile methodologies</b> commonly used to achieve such benefits. <b>Simulation-based software development</b> is one proven method that addresses these constraints.",
    "title": "Simulation-Based Embedded Agile Development",
    "year": 2014,
    "number": 2,
    "page": 97,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.42",
    "selected": false,
    "authors": [
      {
        "name": "Jason Ard",
        "link": ""
      },
      {
        "name": "Kristine Davidsen",
        "link": ""
      },
      {
        "name": "Terril Hurst",
        "link": ""
      }
    ],
    "authorsList": "Jason Ard, Kristine Davidsen, Terril Hurst",
    "citation": "Jason Ard, Kristine Davidsen, Terril Hurst, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.42\">Simulation-Based Embedded Agile Development</a>, IEEE Software 2014, no. 2, p. 97",
    "searchText": ""
  },
  {
    "quote": "<b>Every line of code</b> represents a <b>moral decision</b>; every bit of data collected, analyzed, and visualized has moral implications.",
    "title": "The Human and Ethical Aspects of Big Data",
    "year": 2014,
    "number": 1,
    "page": 20,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.16",
    "selected": false,
    "authors": [],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.16\">The Human and Ethical Aspects of Big Data</a>, IEEE Software 2014, no. 1, p. 20",
    "searchText": ""
  },
  {
    "quote": "In practice, it's neither <b>possible nor meaningful</b> to characterize software products or projects by a <b>single quality metric</b>. ",
    "title": "New Perspectives on Software Quality [Guest editors' introduction]",
    "year": 2014,
    "number": 1,
    "page": 32,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.9",
    "selected": false,
    "authors": [
      {
        "name": "Ruth Breu",
        "link": ""
      },
      {
        "name": "Annie Kuntzmann-Combelles",
        "link": ""
      },
      {
        "name": "Michael Felderer",
        "link": ""
      }
    ],
    "authorsList": "Ruth Breu, Annie Kuntzmann-Combelles, Michael Felderer",
    "citation": "Ruth Breu, Annie Kuntzmann-Combelles, Michael Felderer, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.9\">New Perspectives on Software Quality [Guest editors' introduction]</a>, IEEE Software 2014, no. 1, p. 32",
    "searchText": ""
  },
  {
    "quote": "<b>Automated GUIs</b> test application user interfaces and verify their functionalities. However, due to the uncertainty of runtime execution environments, the <b>device under test (DUT)</b> might not reproduce GUI operations on time, resulting in test failures.",
    "title": "Improving the Accuracy of Automated GUI Testing for Embedded Systems",
    "year": 2014,
    "number": 1,
    "page": 39,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.100",
    "selected": false,
    "authors": [
      {
        "name": "Ying-Dar Lin",
        "link": ""
      },
      {
        "name": "Edward T.-H. Chu",
        "link": ""
      },
      {
        "name": "Shang-Che Yu",
        "link": ""
      },
      {
        "name": "Yuan-Cheng Lai",
        "link": ""
      }
    ],
    "authorsList": "Ying-Dar Lin, Edward T.-H. Chu, Shang-Che Yu, Yuan-Cheng Lai",
    "citation": "Ying-Dar Lin, Edward T.-H. Chu, Shang-Che Yu, Yuan-Cheng Lai, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.100\">Improving the Accuracy of Automated GUI Testing for Embedded Systems</a>, IEEE Software 2014, no. 1, p. 39",
    "searchText": ""
  },
  {
    "quote": "<b>Healthcare social networking sites</b> (HSNSs) provide users with tools and services to easily establish contact with each other around <b>shared problems</b> and utilize the <b>wisdom of crowds</b> to <b>attack disease</b>. The increasing popularity of HSNSs has led to concern over the <b>privacy of health-related data</b> published through these websites. The open philosophy of contemporary HSNSs can result in <b>unauthorized use</b> and disclosure of sensitive personal health data.",
    "title": "Data Protection in Healthcare Social Networks",
    "year": 2014,
    "number": 1,
    "page": 46,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.99",
    "selected": false,
    "authors": [],
    "authorsList": "Jingquan Li",
    "citation": "Jingquan Li, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.99\">Data Protection in Healthcare Social Networks</a>, IEEE Software 2014, no. 1, p. 46",
    "searchText": ""
  },
  {
    "quote": "<b>Agility</b> without <b>objective governance</b> cannot scale, and governance without agility cannot compete. <b>Agile methods</b> are <b>mainstream</b>, and software enterprises are adopting these practices in diverse delivery contexts and at enterprise scale. IBM's broad industry experience with agile transformations and deep internal know-how point to <b>two key principles</b> to deliver sustained improvements in software business outcomes with higher confidence: <b>measure and streamline</b> change <b>costs</b>, and <b>steer with economic governance</b> and <b>Bayesian analytics</b>.",
    "title": "Economic Governance of Software Delivery",
    "year": 2014,
    "number": 1,
    "page": 54,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.102",
    "selected": false,
    "authors": [
      {
        "name": "Murray Cantor",
        "link": ""
      },
      {
        "name": "Walker Royce",
        "link": ""
      }
    ],
    "authorsList": "Murray Cantor, Walker Royce",
    "citation": "Murray Cantor, Walker Royce, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.102\">Economic Governance of Software Delivery</a>, IEEE Software 2014, no. 1, p. 54",
    "searchText": ""
  },
  {
    "quote": "<b>ISO 26262</b>, a functional-safety standard, uses <b>Automotive Safety Integrity Levels (ASILs)</b> to assign safety requirements to automotive-system elements. System designers initially assign ASILs to <b>system-level hazards</b> and then allocate them to elements of the refined system architecture. Through ASIL decomposition, designers can divide a function's safety requirements among <b>multiple components</b>. However, in practice, manual ASIL decomposition is difficult and produces varying results.",
    "title": "Assisted Assignment of Automotive Safety Requirements",
    "year": 2014,
    "number": 1,
    "page": 62,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.118",
    "selected": false,
    "authors": [
      {
        "name": "Luis da Silva Azevedo",
        "link": ""
      },
      {
        "name": "David Parker",
        "link": ""
      },
      {
        "name": "Martin Walker",
        "link": ""
      },
      {
        "name": "Yiannis Papadopoulos",
        "link": ""
      },
      {
        "name": "Rui Esteves Araujo",
        "link": ""
      }
    ],
    "authorsList": "Luis da Silva Azevedo, David Parker, Martin Walker, Yiannis Papadopoulos, Rui Esteves Araujo",
    "citation": "Luis da Silva Azevedo, David Parker, Martin Walker, Yiannis Papadopoulos, Rui Esteves Araujo, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.118\">Assisted Assignment of Automotive Safety Requirements</a>, IEEE Software 2014, no. 1, p. 62",
    "searchText": ""
  },
  {
    "quote": "The rhetorical question '<b>do we practice what we preach?</b>' still seems to be relevant, even a decade after it appeared on the requirements engineering research landscape.",
    "title": "Practicing What We Preach",
    "year": 2014,
    "number": 1,
    "page": 88,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2014.10",
    "selected": false,
    "authors": [],
    "authorsList": "Smita Ghaisas",
    "citation": "Smita Ghaisas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2014.10\">Practicing What We Preach</a>, IEEE Software 2014, no. 1, p. 88",
    "searchText": ""
  },
  {
    "quote": "No matter your individual position on the matter, <b>faith is a powerful element</b> of the human experience. Therefore, it comes as no surprise that <b>computing intersects</b> with the <b>story of belief</b> in many ways ... computing as a <b>medium for faith</b>, as a <b>ritual space</b>, and as a technology that itself raises certain <b>metaphysical issues</b>.",
    "title": "Deus ex Machina",
    "year": 2013,
    "number": 6,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.122",
    "selected": false,
    "authors": [],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.122\">Deus ex Machina</a>, IEEE Software 2013, no. 6, p. 14",
    "searchText": ""
  },
  {
    "quote": "<b>Embedded analytics</b> and statistics for <b>big data</b> have emerged as an important topic across industries. As the volumes of data have increased, software engineers are called to support data analysis and applying some kind of statistics to them.",
    "title": "Embedded Analytics and Statistics for Big Data",
    "year": 2013,
    "number": 6,
    "page": 33,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.125",
    "selected": false,
    "authors": [
      {
        "name": "Panos Louridas",
        "link": ""
      },
      {
        "name": "Christof Ebert",
        "link": ""
      }
    ],
    "authorsList": "Panos Louridas, Christof Ebert",
    "citation": "Panos Louridas, Christof Ebert, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.125\">Embedded Analytics and Statistics for Big Data</a>, IEEE Software 2013, no. 6, p. 33",
    "searchText": ""
  },
  {
    "quote": "<b>Software architecture</b> is the foundation of software system development, encompassing a system's architects' and stakeholders' <b>strategic decisions</b>.",
    "title": "Architecture Sustainability [Guest editors' introduction]",
    "year": 2013,
    "number": 6,
    "page": 40,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.120",
    "selected": false,
    "authors": [
      {
        "name": "Paris Avgeriou",
        "link": ""
      },
      {
        "name": "Michael Stal",
        "link": ""
      },
      {
        "name": "Rich Hilliard",
        "link": ""
      }
    ],
    "authorsList": "Paris Avgeriou, Michael Stal, Rich Hilliard",
    "citation": "Paris Avgeriou, Michael Stal, Rich Hilliard, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.120\">Architecture Sustainability [Guest editors' introduction]</a>, IEEE Software 2013, no. 6, p. 40",
    "searchText": ""
  },
  {
    "quote": "Software architects must <b>sustain design decisions</b> to endure throughout software evolution. Several criteria can help them assess decisions' sustainability ... <b>Strategic</b> ... <b>Measurable and Manageable</b> ... <b>Achievable and Realistic</b> ... <b>Rooted in Requirements</b> ... <b>Timeless</b> ... ",
    "title": "Sustainable Architectural Design Decisions",
    "year": 2013,
    "number": 6,
    "page": 46,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.97",
    "selected": false,
    "authors": [
      {
        "name": "Uwe Zdun",
        "link": ""
      },
      {
        "name": "Rafael Capilla",
        "link": ""
      },
      {
        "name": "Huy Tran",
        "link": ""
      },
      {
        "name": "Olaf Zimmermann",
        "link": ""
      }
    ],
    "authorsList": "Uwe Zdun, Rafael Capilla, Huy Tran, Olaf Zimmermann",
    "citation": "Uwe Zdun, Rafael Capilla, Huy Tran, Olaf Zimmermann, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.97\">Sustainable Architectural Design Decisions</a>, IEEE Software 2013, no. 6, p. 46",
    "searchText": ""
  },
  {
    "quote": "It's difficult to express a <b>software architecture's sustainability</b> in a single metric: relevant information is spread across requirements, architecture design documents, <b>technology choices</b>, source code, system context, and software architects' implicit knowledge. Many aspects influence economic sustainability, including design decisions facilitating <b>evolutionary changes</b>, adherence to good <b>modularization practices</b>, and <b>technology choices</b>.",
    "title": "Measuring Architecture Sustainability",
    "year": 2013,
    "number": 6,
    "page": 54,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.101",
    "selected": false,
    "authors": [
      {
        "name": "Heiko Koziolek",
        "link": ""
      },
      {
        "name": "Dominik Domis",
        "link": ""
      },
      {
        "name": "Thomas Goldschmidt",
        "link": ""
      },
      {
        "name": "Philipp Vorst",
        "link": ""
      }
    ],
    "authorsList": "Heiko Koziolek, Dominik Domis, Thomas Goldschmidt, Philipp Vorst",
    "citation": "Heiko Koziolek, Dominik Domis, Thomas Goldschmidt, Philipp Vorst, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.101\">Measuring Architecture Sustainability</a>, IEEE Software 2013, no. 6, p. 54",
    "searchText": ""
  },
  {
    "quote": "<b>Software product lines (SPLs)</b> are <b>long-living systems</b> that enable <b>systematic reuse</b> in application engineering. Product-specific changes over time can result in <b>architecture drift</b>, which requires updating assumptions made in the SPL's reuse infrastructure.",
    "title": "Long-Term Product Line Sustainability with Planned Staged Investments",
    "year": 2013,
    "number": 6,
    "page": 63,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.96",
    "selected": false,
    "authors": [
      {
        "name": "Juha Savolainen",
        "link": ""
      },
      {
        "name": "Nan Niu",
        "link": ""
      },
      {
        "name": "Tommi Mikkonen",
        "link": ""
      },
      {
        "name": "Thomas Fogdal",
        "link": ""
      }
    ],
    "authorsList": "Juha Savolainen, Nan Niu, Tommi Mikkonen, Thomas Fogdal",
    "citation": "Juha Savolainen, Nan Niu, Tommi Mikkonen, Thomas Fogdal, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.96\">Long-Term Product Line Sustainability with Planned Staged Investments</a>, IEEE Software 2013, no. 6, p. 63",
    "searchText": ""
  },
  {
    "quote": "One of the most notable categories of successful UI development is <b>form-oriented frameworks</b> tightly coupled with <b>relational database</b> management systems. Essentially, this approach builds a UI for relational database applications by organizing that <b>interface into forms</b>, which present values of database fields in the corresponding form controls, such as text boxes, list boxes, check boxes, grids, and so on. Tools and runtime engines support generic navigation through these forms and direct coupling of controls with the back-end data. The developer doesn't need to take care of data locking, transfer, transformation, and updates: when the user switches to another record in the master part of a master-details form, for example, the mechanism incorporated in the generic form <b>automatically refreshes</b> the values in the details part.",
    "title": "A Retrospective on User Interface Development Technology",
    "year": 2013,
    "number": 6,
    "page": 76,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.45",
    "selected": false,
    "authors": [
      {
        "name": "Zarko Mijailovic",
        "link": ""
      },
      {
        "name": "Dragan Milicev",
        "link": ""
      }
    ],
    "authorsList": "Zarko Mijailovic, Dragan Milicev",
    "citation": "Zarko Mijailovic, Dragan Milicev, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.45\">A Retrospective on User Interface Development Technology</a>, IEEE Software 2013, no. 6, p. 76",
    "searchText": ""
  },
  {
    "quote": "A <b>conservative estimate</b> puts today’s number of <b>published patterns</b> at more than <b>7,500</b>, and growing. ",
    "title": "Twenty Years of Patterns' Impact",
    "year": 2013,
    "number": 6,
    "page": 88,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.135",
    "selected": false,
    "authors": [
      {
        "name": "Gregor Hohpe",
        "link": ""
      },
      {
        "name": "Rebecca Wirfs-Brock",
        "link": ""
      },
      {
        "name": "Joseph W. Yoder",
        "link": ""
      },
      {
        "name": "Olaf Zimmermann K1 architectural knowledge",
        "link": ""
      }
    ],
    "authorsList": "Gregor Hohpe, Rebecca Wirfs-Brock, Joseph W. Yoder, Olaf Zimmermann K1 architectural knowledge",
    "citation": "Gregor Hohpe, Rebecca Wirfs-Brock, Joseph W. Yoder, Olaf Zimmermann K1 architectural knowledge, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.135\">Twenty Years of Patterns' Impact</a>, IEEE Software 2013, no. 6, p. 88",
    "searchText": ""
  },
  {
    "quote": "With <b>smartphones</b> being the primary handheld device for more than <b>a billion people</b>, mobile Web apps are a necessity in both technical and commercial fields. There are several approaches to developing mobile Web apps, but given the <b>fast speed</b> of mobile software evolution, in which the leading companies become marginal in months and new gadgets continually appear, it's crucial to <b>understand the basic technologies</b>. ",
    "title": "Mobile Web Apps",
    "year": 2013,
    "number": 5,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.111",
    "selected": false,
    "authors": [
      {
        "name": "N. Serrano",
        "link": ""
      },
      {
        "name": "J. Hernantes",
        "link": ""
      },
      {
        "name": "G. Gallardo",
        "link": ""
      }
    ],
    "authorsList": "N. Serrano, J. Hernantes, G. Gallardo",
    "citation": "N. Serrano, J. Hernantes, G. Gallardo, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.111\">Mobile Web Apps</a>, IEEE Software 2013, no. 5, p. 22",
    "searchText": ""
  },
  {
    "quote": "With <b>software analytics</b>, software practitioners explore and analyze data to obtain insightful, actionable information for tasks regarding software development, systems, and users. The <b>StackMine</b> project produced a software analytics system for <b>Microsoft product teams</b>.",
    "title": "Software Analytics in Practice",
    "year": 2013,
    "number": 5,
    "page": 30,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.94",
    "selected": false,
    "authors": [
      {
        "name": "Dongmei Zhang",
        "link": ""
      },
      {
        "name": "Shi Han",
        "link": ""
      },
      {
        "name": "Yingnong Dang",
        "link": ""
      },
      {
        "name": "Jian-Guang Lou",
        "link": ""
      },
      {
        "name": "Haidong Zhang",
        "link": ""
      },
      {
        "name": "Tao Xie",
        "link": ""
      }
    ],
    "authorsList": "Dongmei Zhang, Shi Han, Yingnong Dang, Jian-Guang Lou, Haidong Zhang, Tao Xie",
    "citation": "Dongmei Zhang, Shi Han, Yingnong Dang, Jian-Guang Lou, Haidong Zhang, Tao Xie, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.94\">Software Analytics in Practice</a>, IEEE Software 2013, no. 5, p. 30",
    "searchText": ""
  },
  {
    "quote": "When free, open source software development communities work with companies that use their output, it's especially important for both parties to understand how this collaboration is performing. The use of data analytics techniques on software development repositories can improve <b>factual knowledge</b> about <b>performance metrics</b>.",
    "title": "Understanding How Companies Interact with Free Software Communities",
    "year": 2013,
    "number": 5,
    "page": 38,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.95",
    "selected": false,
    "authors": [
      {
        "name": "J. M. Gonzalez-Barahona",
        "link": ""
      },
      {
        "name": "D. Izquierdo-Cortazar",
        "link": ""
      },
      {
        "name": "S. Maffulli",
        "link": ""
      },
      {
        "name": "G. Robles",
        "link": ""
      }
    ],
    "authorsList": "J. M. Gonzalez-Barahona, D. Izquierdo-Cortazar, S. Maffulli, G. Robles",
    "citation": "J. M. Gonzalez-Barahona, D. Izquierdo-Cortazar, S. Maffulli, G. Robles, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.95\">Understanding How Companies Interact with Free Software Communities</a>, IEEE Software 2013, no. 5, p. 38",
    "searchText": ""
  },
  {
    "quote": "Amisoft, a <b>Chilean software company</b> with <b>43 employees</b>, successfully uses <b>software analytics</b> in its projects. These support a variety of <b>strategic and tactical decisions</b>, resulting in <b>less overwork</b> of employees. However, the analytics done at Amisoft are <b>very different</b> from the ones used in larger companies.",
    "title": "Are Software Analytics Efforts Worthwhile for Small Companies? The Case of Amisoft",
    "year": 2013,
    "number": 5,
    "page": 46,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.92",
    "selected": false,
    "authors": [
      {
        "name": "R. Robbes",
        "link": ""
      },
      {
        "name": "R. Vidal",
        "link": ""
      },
      {
        "name": "M. C. Bastarrica",
        "link": ""
      }
    ],
    "authorsList": "R. Robbes, R. Vidal, M. C. Bastarrica",
    "citation": "R. Robbes, R. Vidal, M. C. Bastarrica, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.92\">Are Software Analytics Efforts Worthwhile for Small Companies? The Case of Amisoft</a>, IEEE Software 2013, no. 5, p. 46",
    "searchText": ""
  },
  {
    "quote": "<b>Software analytics</b> guide practitioners in <b>decision making</b> throughout the software development process. In this context, <b>prediction models</b> help managers efficiently organize their resources and identify problems by <b>analyzing patterns</b> on existing project data in an intelligent and meaningful manner.",
    "title": "A Retrospective Study of Software Analytics Projects: In-Depth Interviews with Practitioners",
    "year": 2013,
    "number": 5,
    "page": 54,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.93",
    "selected": false,
    "authors": [
      {
        "name": "A. T. Misirli",
        "link": ""
      },
      {
        "name": "B. Caglayan",
        "link": ""
      },
      {
        "name": "A. Bener",
        "link": ""
      },
      {
        "name": "B. Turhan",
        "link": ""
      }
    ],
    "authorsList": "A. T. Misirli, B. Caglayan, A. Bener, B. Turhan",
    "citation": "A. T. Misirli, B. Caglayan, A. Bener, B. Turhan, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.93\">A Retrospective Study of Software Analytics Projects: In-Depth Interviews with Practitioners</a>, IEEE Software 2013, no. 5, p. 54",
    "searchText": ""
  },
  {
    "quote": "As the last standardization effort was done in 2004, the software engineering curriculum is currently being revised. Haven't we reached the point where <b>agile development</b> should be <b>part of all software engineering curricula</b>? And if so, shouldn't new curriculum standards ensure that it is?",
    "title": "Is the New Software Engineering Curriculum Agile?",
    "year": 2013,
    "number": 5,
    "page": 88,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.109",
    "selected": false,
    "authors": [
      {
        "name": "A. Fox",
        "link": ""
      },
      {
        "name": "D. Patterson",
        "link": ""
      }
    ],
    "authorsList": "A. Fox, D. Patterson",
    "citation": "A. Fox, D. Patterson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.109\">Is the New Software Engineering Curriculum Agile?</a>, IEEE Software 2013, no. 5, p. 88",
    "searchText": ""
  },
  {
    "quote": "For those on the outside of the <b>curtain of computing</b>, there is <b>much mystery</b> behind the matter of software-intensive systems. To some, it looks like magic; to most, its inner workings are irrelevant insofar that it simply works. To those of us behind the curtain, however, we know that such systems are filled with <b>chaos, regularity, and beauty</b>.",
    "title": "The Wonder Years",
    "year": 2013,
    "number": 4,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.89",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.89\">The Wonder Years</a>, IEEE Software 2013, no. 4, p. 16",
    "searchText": ""
  },
  {
    "quote": "Deciding whether to <b>write portable code</b> or not should be the outcome of a <b>cost-benefit analysis</b>. The key reason to favor portable code is that it opens up the <b>selection of resources</b> available to our project. Diverse technology choices free us from vendor lock-in, allowing us to select the best technology in each area based on quality and price, and minimize technology risks. However, portable code can <b>degrade functionality</b>, expressiveness, and efficiency.",
    "title": "Portability: Goodies vs. the Hair Shirt",
    "year": 2013,
    "number": 4,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.82",
    "selected": false,
    "authors": [
      {
        "name": "Diomidis Spinellis",
        "link": ""
      }
    ],
    "authorsList": "Diomidis Spinellis",
    "citation": "Diomidis Spinellis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.82\">Portability: Goodies vs. the Hair Shirt</a>, IEEE Software 2013, no. 4, p. 22",
    "searchText": ""
  },
  {
    "quote": "[M]any practitioners and researchers have turned to <b>analytics</b>—that is, the use of analysis, data, and systematic reasoning for making decisions. We can define software analytics as follows: '<b>Software analytics</b> is <b>analytics on software data</b> for managers and software engineers with the aim of empowering software development individuals and teams to <b>gain and share insight</b> from their data to make better decisions.'",
    "title": "Software Analytics: So What?",
    "year": 2013,
    "number": 4,
    "page": 31,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.86",
    "selected": false,
    "authors": [
      {
        "name": "Tim Menzies",
        "link": ""
      },
      {
        "name": "Thomas Zimmermann",
        "link": ""
      }
    ],
    "authorsList": "Tim Menzies, Thomas Zimmermann",
    "citation": "Tim Menzies, Thomas Zimmermann, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.86\">Software Analytics: So What?</a>, IEEE Software 2013, no. 4, p. 31",
    "searchText": ""
  },
  {
    "quote": "<b>Performance</b> is a critical component of <b>customer satisfaction</b> with network-based applications. Unfortunately, accurately evaluating the <b>performance of collaborative software</b> that operates in extremely heterogeneous environments is difficult with traditional techniques such as modeling workloads or testing in controlled environments.",
    "title": "Leveraging the Crowd: How 48,000 Users Helped Improve Lync Performance",
    "year": 2013,
    "number": 4,
    "page": 38,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.67",
    "selected": false,
    "authors": [
      {
        "name": "Sandipan Ganguly",
        "link": ""
      },
      {
        "name": "Brian Bussone",
        "link": ""
      },
      {
        "name": "Christian Bird",
        "link": ""
      },
      {
        "name": "Danyel Fisher",
        "link": ""
      },
      {
        "name": "Jacqueline Richards",
        "link": ""
      },
      {
        "name": "Robert Musson",
        "link": ""
      }
    ],
    "authorsList": "Sandipan Ganguly, Brian Bussone, Christian Bird, Danyel Fisher, Jacqueline Richards, Robert Musson",
    "citation": "Sandipan Ganguly, Brian Bussone, Christian Bird, Danyel Fisher, Jacqueline Richards, Robert Musson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.67\">Leveraging the Crowd: How 48,000 Users Helped Improve Lync Performance</a>, IEEE Software 2013, no. 4, p. 38",
    "searchText": ""
  },
  {
    "quote": "Prominent technology companies including IBM, Microsoft, and Google have embraced an <b>analytics-driven culture</b> to help improve their <b>decision making</b>. Analytics aim to help practitioners answer questions critical to their projects, such as 'Are we on track to deliver the next release on schedule?' and 'Of the recent features added, which are the most prone to defects?' by providing <b>fact-based views</b> about projects. Analytic results are often quantitative in nature, presenting data as <b>graphical dashboards</b> with reports and charts.",
    "title": "Developer Dashboards: The Need for Qualitative Analytics",
    "year": 2013,
    "number": 4,
    "page": 46,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.66",
    "selected": false,
    "authors": [
      {
        "name": "Olga Baysal",
        "link": ""
      },
      {
        "name": "Michael W. Godfrey",
        "link": ""
      },
      {
        "name": "Reid Holmes",
        "link": ""
      }
    ],
    "authorsList": "Olga Baysal, Michael W. Godfrey, Reid Holmes",
    "citation": "Olga Baysal, Michael W. Godfrey, Reid Holmes, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.66\">Developer Dashboards: The Need for Qualitative Analytics</a>, IEEE Software 2013, no. 4, p. 46",
    "searchText": ""
  },
  {
    "quote": "<b>Defect density</b> is the ratio between the <b>number of defects</b> and <b>software size</b>. Properly assessing defect density in evolutionary product development requires a strong tool and rigid process support that enables defects to be traced to the offending source code. In addition, it requires waiting for <b>field defects</b> after the product is deployed.",
    "title": "Defect-Density Assessment in Evolutionary Product Development: A Case Study in Medical Imaging",
    "year": 2013,
    "number": 4,
    "page": 81,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.111",
    "selected": false,
    "authors": [
      {
        "name": "David Faller",
        "link": ""
      },
      {
        "name": "Yang-Ming Zhu",
        "link": ""
      }
    ],
    "authorsList": "David Faller, Yang-Ming Zhu",
    "citation": "David Faller, Yang-Ming Zhu, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.111\">Defect-Density Assessment in Evolutionary Product Development: A Case Study in Medical Imaging</a>, IEEE Software 2013, no. 4, p. 81",
    "searchText": ""
  },
  {
    "quote": "Today's software development challenges require <b>learning teams</b> that can continuously apply new engineering and management practices, new and complex <b>technical skills</b>, <b>cross-functional skills</b>, and <b>experiential lessons</b> learned. The pressure of delivering working software often forces software teams to <b>sacrifice learning</b>-focused practices. Effective <b>learning under pressure</b> involves conscious efforts to implement original agile practices such as retrospectives and adapted strategies such as learning spikes. Teams, their management, and customers must all recognize the importance of creating <b>learning teams</b> as the key to braving the erratic climates and uncharted territories of future software development.",
    "title": "Toward Learning Teams",
    "year": 2013,
    "number": 4,
    "page": 95,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.90",
    "selected": false,
    "authors": [
      {
        "name": "Jeffry Babb",
        "link": ""
      },
      {
        "name": "Rashina Hoda",
        "link": ""
      },
      {
        "name": "Jacob Norbjerg",
        "link": ""
      }
    ],
    "authorsList": "Jeffry Babb, Rashina Hoda, Jacob Norbjerg",
    "citation": "Jeffry Babb, Rashina Hoda, Jacob Norbjerg, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.90\">Toward Learning Teams</a>, IEEE Software 2013, no. 4, p. 95",
    "searchText": ""
  },
  {
    "quote": "On the one hand, we seek to build software-intensive systems that are <b>innovative</b>, <b>elegant</b>, and <b>supremely useful</b>. On the other hand, computing technology as a thing unto itself is not the place of enduring value, and therefore, as computing fills the spaces of our world, it becomes <b>boring</b>. And that's a very good and desirable thing.",
    "title": "In Defense of Boring",
    "year": 2013,
    "number": 3,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.54",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.54\">In Defense of Boring</a>, IEEE Software 2013, no. 3, p. 16",
    "searchText": ""
  },
  {
    "quote": "<b>Agent orientation</b> is moving from its origins in computer science into applied <b>automation systems engineering</b>. The main benefit of using software agents in industrial automation is the combined application of agent-oriented software engineering with growing fields such as <b>semantic technologies</b>. Software agents also provide <b>flexibility</b>, which is often the key requirement for creating software system architectures that can <b>evolve at runtime</b>.",
    "title": "Software Agents in Industrial Automation Systems",
    "year": 2013,
    "number": 3,
    "page": 20,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.57",
    "selected": false,
    "authors": [
      {
        "name": "Stephan Pech",
        "link": ""
      }
    ],
    "authorsList": "Stephan Pech",
    "citation": "Stephan Pech, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.57\">Software Agents in Industrial Automation Systems</a>, IEEE Software 2013, no. 3, p. 20",
    "searchText": ""
  },
  {
    "quote": "We live in a world in which our <b>safety depends</b> on <b>software-intensive systems</b>. This is the case for the <b>aeronautic</b>, <b>automotive</b>, <b>medical</b>, <b>nuclear</b>, and <b>railway</b> sectors as well as many more. Organizations everywhere are struggling to find <b>cost-effective methods</b> to deal with the enormous increase in size and complexity of these systems, while simultaneously respecting the need to ensure their safety. Consequently, we're witnessing the ad hoc emergence of a <b>renewed discipline</b> of <b>safety-critical software systems</b> development as a broad range of software engineering methods, tools, and frameworks are revisited from a safety-related perspective.",
    "title": "Safety-Critical Software [Guest editors' introduction]",
    "year": 2013,
    "number": 3,
    "page": 25,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.55",
    "selected": false,
    "authors": [
      {
        "name": "Annie Combelles",
        "link": ""
      },
      {
        "name": "Xabier Larrucea",
        "link": ""
      },
      {
        "name": "John Favaro",
        "link": ""
      }
    ],
    "authorsList": "Annie Combelles, Xabier Larrucea, John Favaro",
    "citation": "Annie Combelles, Xabier Larrucea, John Favaro, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.55\">Safety-Critical Software [Guest editors' introduction]</a>, IEEE Software 2013, no. 3, p. 25",
    "searchText": ""
  },
  {
    "quote": "The transition from a <b>code-based process</b> to a <b>model-based process</b> isn't easy. This is particularly true for a company that operates in a <b>safety-critical sector</b>, where the products must be developed according to <b>international standards</b>, with certified tools and controlled processes.",
    "title": "Model-Based Development and Formal Methods in the Railway Industry",
    "year": 2013,
    "number": 3,
    "page": 28,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.44",
    "selected": false,
    "authors": [
      {
        "name": "Stefania Gnesi",
        "link": ""
      },
      {
        "name": "Gianluca Magnani",
        "link": ""
      },
      {
        "name": "Alessandro Fantechi",
        "link": ""
      },
      {
        "name": "Alessio Ferrari",
        "link": ""
      }
    ],
    "authorsList": "Stefania Gnesi, Gianluca Magnani, Alessandro Fantechi, Alessio Ferrari",
    "citation": "Stefania Gnesi, Gianluca Magnani, Alessandro Fantechi, Alessio Ferrari, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.44\">Model-Based Development and Formal Methods in the Railway Industry</a>, IEEE Software 2013, no. 3, p. 28",
    "searchText": ""
  },
  {
    "quote": "Conventional software reliability assessment validates a system's reliability only at the end of development, resulting in costly <b>defect correction</b>. A ... <b>statistical model checking</b> (SMC) ... validate reliability at an <b>early stage</b>. SMC computes the <b>probability</b> that a target system will satisfy <b>functional-safety</b> requirements.",
    "title": "Validating Software Reliability Early through Statistical Model Checking",
    "year": 2013,
    "number": 3,
    "page": 35,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.24",
    "selected": false,
    "authors": [
      {
        "name": "Tai-Hyo Kim",
        "link": ""
      },
      {
        "name": "Jongmoon Baik",
        "link": ""
      },
      {
        "name": "Moonzoo Kim",
        "link": ""
      },
      {
        "name": "Okjoo Choi",
        "link": ""
      },
      {
        "name": "Youngjoo Kim",
        "link": ""
      }
    ],
    "authorsList": "Tai-Hyo Kim, Jongmoon Baik, Moonzoo Kim, Okjoo Choi, Youngjoo Kim",
    "citation": "Tai-Hyo Kim, Jongmoon Baik, Moonzoo Kim, Okjoo Choi, Youngjoo Kim, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.24\">Validating Software Reliability Early through Statistical Model Checking</a>, IEEE Software 2013, no. 3, p. 35",
    "searchText": ""
  },
  {
    "quote": "Testing software in <b>air traffic control systems</b> costs much more than building them. This is basically true in every domain producing software-intensive critical systems. Software engineers strive to find methodological and process-level solutions to <b>balance these costs</b> and to better distribute verification efforts among all development phases.",
    "title": "Engineering Air Traffic Control Systems with a Model-Driven Approach",
    "year": 2013,
    "number": 3,
    "page": 42,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.20",
    "selected": false,
    "authors": [
      {
        "name": "Stefano Russo",
        "link": ""
      },
      {
        "name": "Francesco Fucci",
        "link": ""
      },
      {
        "name": "Roberto Pietrantuono",
        "link": ""
      },
      {
        "name": "Mauro Faella",
        "link": ""
      },
      {
        "name": "Gabriella Carrozza",
        "link": ""
      }
    ],
    "authorsList": "Stefano Russo, Francesco Fucci, Roberto Pietrantuono, Mauro Faella, Gabriella Carrozza",
    "citation": "Stefano Russo, Francesco Fucci, Roberto Pietrantuono, Mauro Faella, Gabriella Carrozza, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.20\">Engineering Air Traffic Control Systems with a Model-Driven Approach</a>, IEEE Software 2013, no. 3, p. 42",
    "searchText": ""
  },
  {
    "quote": "Software for <b>commercial aircraft</b> is subject to the stringent <b>certification processes</b> described in the <b>DO-178B standard</b>, 'Software Considerations in Airborne Systems and Equipment Certification.' Issued in 1992, this document focuses strongly on the verification process, with a major emphasis on testing. In 2005, the avionics industry initiated an effort to update DO-178B, in large part to accommodate development practices (including formal verification techniques) that had matured since its publication. A revised standard, DO-178C, was issued in late 2011, incorporating new guidance that allows <b>formal verification</b> to <b>replace</b> certain forms of <b>testing</b>.",
    "title": "Testing or Formal Verification: DO-178C Alternatives and Industrial Experience",
    "year": 2013,
    "number": 3,
    "page": 50,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.43",
    "selected": false,
    "authors": [
      {
        "name": "Benjamin Monate",
        "link": ""
      },
      {
        "name": "Emmanuel Ledinot",
        "link": ""
      },
      {
        "name": "Herve Delseny",
        "link": ""
      },
      {
        "name": "Virginie Wiels",
        "link": ""
      },
      {
        "name": "Yannick Moy",
        "link": ""
      }
    ],
    "authorsList": "Benjamin Monate, Emmanuel Ledinot, Herve Delseny, Virginie Wiels, Yannick Moy",
    "citation": "Benjamin Monate, Emmanuel Ledinot, Herve Delseny, Virginie Wiels, Yannick Moy, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.43\">Testing or Formal Verification: DO-178C Alternatives and Industrial Experience</a>, IEEE Software 2013, no. 3, p. 50",
    "searchText": ""
  },
  {
    "quote": "To <b>support any claim</b> that a <b>product is safe</b> for its intended use, manufacturers must <b>establish traceability</b> within that product's development life cycle. ",
    "title": "Strategic Traceability for Safety-Critical Projects",
    "year": 2013,
    "number": 3,
    "page": 58,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.60",
    "selected": false,
    "authors": [
      {
        "name": "Jane Cleland-Huang",
        "link": ""
      },
      {
        "name": "Yi Zhang",
        "link": ""
      },
      {
        "name": "Paul L. Jones",
        "link": ""
      },
      {
        "name": "Patrick Mader",
        "link": ""
      }
    ],
    "authorsList": "Jane Cleland-Huang, Yi Zhang, Paul L. Jones, Patrick Mader",
    "citation": "Jane Cleland-Huang, Yi Zhang, Paul L. Jones, Patrick Mader, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.60\">Strategic Traceability for Safety-Critical Projects</a>, IEEE Software 2013, no. 3, p. 58",
    "searchText": ""
  },
  {
    "quote": "Aerospace or <b>flight control systems</b> software development follows a rigorous process according to the <b>RTCA DO-178B standard</b>, yet <b>software errors</b> still occur.",
    "title": "Flight Control Software: Mistakes Made and Lessons Learned",
    "year": 2013,
    "number": 3,
    "page": 67,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.42",
    "selected": false,
    "authors": [
      {
        "name": "Yogananda Jeppu",
        "link": ""
      }
    ],
    "authorsList": "Yogananda Jeppu",
    "citation": "Yogananda Jeppu, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.42\">Flight Control Software: Mistakes Made and Lessons Learned</a>, IEEE Software 2013, no. 3, p. 67",
    "searchText": ""
  },
  {
    "quote": "Inspired by general ideas about how the <b>automotive industry</b> brings <b>innovation</b> into lean manufacturing, the author proposes introducing an activity called <b>software sketchifying</b> into software product development. Sketchifying aims to stimulate software stakeholders to spend more time generating and considering <b>alternative ideas</b> before making a decision to proceed with engineering.",
    "title": "Software Sketchifying: Bringing Innovation into Software Development",
    "year": 2013,
    "number": 3,
    "page": 80,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.71",
    "selected": false,
    "authors": [
      {
        "name": "Zeljko Obrenovi&amp;#x0107;",
        "link": ""
      }
    ],
    "authorsList": "Zeljko Obrenovi&amp;#x0107;",
    "citation": "Zeljko Obrenovi&amp;#x0107;, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.71\">Software Sketchifying: Bringing Innovation into Software Development</a>, IEEE Software 2013, no. 3, p. 80",
    "searchText": ""
  },
  {
    "quote": "The subject of the <b>computability of the mind</b> introduces complex philosophical, ethical, and technical issues. That aside, this topic draws us in to the <b>nature of algorithms</b>. We are <b>surrounded by algorithms</b>; much of the history of computing is also the history of the advance of algorithms. For the public, algorithms are part of <b>computing's self-made mystery</b>, but to understand their nature is an important part of computational thinking.",
    "title": "From Minecraft to Minds",
    "year": 2013,
    "number": 2,
    "page": 11,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.28",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.28\">From Minecraft to Minds</a>, IEEE Software 2013, no. 2, p. 11",
    "searchText": ""
  },
  {
    "quote": "<b>Requirements work</b> is really about <b>problem solving</b>. Its primary function is to locate and scope problems, then create and describe solutions for them.",
    "title": "So, What Is Requirements Work?",
    "year": 2013,
    "number": 2,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.35",
    "selected": false,
    "authors": [
      {
        "name": "Neil Maiden",
        "link": ""
      }
    ],
    "authorsList": "Neil Maiden",
    "citation": "Neil Maiden, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.35\">So, What Is Requirements Work?</a>, IEEE Software 2013, no. 2, p. 14",
    "searchText": ""
  },
  {
    "quote": "<b>Quality concerns</b>, often referred to as <b>nonfunctional requirements</b>, <b>service-level agreements</b>, <b>quality attributes</b>, <b>performance constraints</b>, or <b>architecturally significant requirements</b>, describe system-level attributes such as <b>security</b>, <b>performance</b>, <b>reliability</b>, and <b>maintainability</b>. In conjunction with functional requirements, these quality concerns drive and constrain a <b>system's architectural design</b> and often introduce significant <b>trade-offs</b> that must be carefully considered and balanced. The dependencies that exist between requirements and architecture have been referred to as the <b>twin peaks</b> of requirements and architecture.",
    "title": "The Twin Peaks of Requirements and Architecture",
    "year": 2013,
    "number": 2,
    "page": 24,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.39",
    "selected": false,
    "authors": [
      {
        "name": "Jane Cleland-Huang",
        "link": ""
      },
      {
        "name": "Robert S. Hanmer",
        "link": ""
      },
      {
        "name": "Sam Supakkul",
        "link": ""
      },
      {
        "name": "Mehdi Mirakhorli",
        "link": ""
      }
    ],
    "authorsList": "Jane Cleland-Huang, Robert S. Hanmer, Sam Supakkul, Mehdi Mirakhorli",
    "citation": "Jane Cleland-Huang, Robert S. Hanmer, Sam Supakkul, Mehdi Mirakhorli, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.39\">The Twin Peaks of Requirements and Architecture</a>, IEEE Software 2013, no. 2, p. 24",
    "searchText": ""
  },
  {
    "quote": "The most useful forms of <b>documentation</b> are <b>views of the software</b> that can be <b>automatically generated</b>.",
    "title": "Traversing the Twin Peaks",
    "year": 2013,
    "number": 2,
    "page": 30,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.40",
    "selected": false,
    "authors": [
      {
        "name": "Mehdi Mirakhorli",
        "link": ""
      },
      {
        "name": "Jane Cleland-Huang",
        "link": ""
      }
    ],
    "authorsList": "Mehdi Mirakhorli, Jane Cleland-Huang",
    "citation": "Mehdi Mirakhorli, Jane Cleland-Huang, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.40\">Traversing the Twin Peaks</a>, IEEE Software 2013, no. 2, p. 30",
    "searchText": ""
  },
  {
    "quote": "In the past decade, researchers have devised many methods to support and <b>codify architecture design</b>. However, what hampers such methods' adoption is that these methods employ abstract concepts such as <b>views</b>, <b>tactics</b>, and <b>patterns</b>, whereas practicing software architects choose technical design primitives from the services offered in <b>commercial frameworks</b>. ... systematically links both <b>top-down concepts</b>, such as <b>patterns</b> and <b>tactics</b>, and <b>implementation artifacts</b>, such as frameworks, which are bottom-up concepts.",
    "title": "A Principled Way to Use Frameworks in Architecture Design",
    "year": 2013,
    "number": 2,
    "page": 46,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.175",
    "selected": false,
    "authors": [
      {
        "name": "Rick Kazman",
        "link": ""
      },
      {
        "name": "Perla Velasco-Elizondo",
        "link": ""
      },
      {
        "name": "Humberto Cervantes",
        "link": ""
      }
    ],
    "authorsList": "Rick Kazman, Perla Velasco-Elizondo, Humberto Cervantes",
    "citation": "Rick Kazman, Perla Velasco-Elizondo, Humberto Cervantes, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.175\">A Principled Way to Use Frameworks in Architecture Design</a>, IEEE Software 2013, no. 2, p. 46",
    "searchText": ""
  },
  {
    "quote": "Systems are naturally constructed in <b>hierarchies</b>, in which <b>design choices</b> made at higher levels of abstraction levy requirements on system components at the lower levels. Thus, whether an aspect of a system is a <b>design choice</b> or <b>a requirement</b> largely depends on your <b>vantage poin</b>t within the system components' hierarchy. ",
    "title": "Your &#x0022;What&#x0022; Is My &#x0022;How&#x0022;: Iteration and Hierarchy in System Design",
    "year": 2013,
    "number": 2,
    "page": 54,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.173",
    "selected": false,
    "authors": [
      {
        "name": "Sanjai Rayadurgam",
        "link": ""
      },
      {
        "name": "Mats P.E. Heimdahl",
        "link": ""
      },
      {
        "name": "Anitha Murugesan",
        "link": ""
      },
      {
        "name": "Darren Cofer",
        "link": ""
      },
      {
        "name": "Andrew Gacek",
        "link": ""
      },
      {
        "name": "Michael W. Whalen",
        "link": ""
      }
    ],
    "authorsList": "Sanjai Rayadurgam, Mats P.E. Heimdahl, Anitha Murugesan, Darren Cofer, Andrew Gacek, Michael W. Whalen",
    "citation": "Sanjai Rayadurgam, Mats P.E. Heimdahl, Anitha Murugesan, Darren Cofer, Andrew Gacek, Michael W. Whalen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.173\">Your &#x0022;What&#x0022; Is My &#x0022;How&#x0022;: Iteration and Hierarchy in System Design</a>, IEEE Software 2013, no. 2, p. 54",
    "searchText": ""
  },
  {
    "quote": "Software architects often must work with <b>incomplete or ill-specified</b> <b>non-functional requirements</b> (NFRs) and use them to make decisions. Through this process, existing NFRs are <b>refined or modified</b> and new ones emerge. ... The survey revealed that architects usually elicit NFRs themselves in an iterative process; they usually <b>don't document</b> the NFRs and only <b>partially validate</b> them.",
    "title": "Non-functional Requirements in Architectural Decision Making",
    "year": 2013,
    "number": 2,
    "page": 61,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.176",
    "selected": false,
    "authors": [
      {
        "name": "Claudia Ayala",
        "link": ""
      },
      {
        "name": "David Ameller",
        "link": ""
      },
      {
        "name": "Jordi Cabot",
        "link": ""
      },
      {
        "name": "Xavier Franch",
        "link": ""
      }
    ],
    "authorsList": "Claudia Ayala, David Ameller, Jordi Cabot, Xavier Franch",
    "citation": "Claudia Ayala, David Ameller, Jordi Cabot, Xavier Franch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.176\">Non-functional Requirements in Architectural Decision Making</a>, IEEE Software 2013, no. 2, p. 61",
    "searchText": ""
  },
  {
    "quote": "There's clearly <b>no single magic tool</b> or technique that can be used to secure the reliability of any large and complex software application; rather, it takes good tools, workmanship, and a carefully managed process. The three main control points in this process are <b>prevention</b>, <b>detection</b>, and <b>containment</b>.",
    "title": "Landing a Spacecraft on Mars",
    "year": 2013,
    "number": 2,
    "page": 83,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.32",
    "selected": false,
    "authors": [
      {
        "name": "Gerard J. Holzmann",
        "link": ""
      }
    ],
    "authorsList": "Gerard J. Holzmann",
    "citation": "Gerard J. Holzmann, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.32\">Landing a Spacecraft on Mars</a>, IEEE Software 2013, no. 2, p. 83",
    "searchText": ""
  },
  {
    "quote": "Software development teams no longer live - or want to live - in a world of <b>command and control</b>. They want to be <b>self-organizing</b> and have adaptive, supportive, and <b>collaborative leadership</b> guiding them. This new age of management requires managers to build a <b>culture of trust</b>, encourage <b>participation</b> of their teams in decision making, and <b>sponsor innovation</b>. Simply put, managers need to do away with the traditional (micro) management and <b>share power</b> with self-organizing teams.",
    "title": "Power to the People",
    "year": 2013,
    "number": 2,
    "page": 92,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.34",
    "selected": false,
    "authors": [
      {
        "name": "Rashina Hoda",
        "link": ""
      }
    ],
    "authorsList": "Rashina Hoda",
    "citation": "Rashina Hoda, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.34\">Power to the People</a>, IEEE Software 2013, no. 2, p. 92",
    "searchText": ""
  },
  {
    "quote": "Computing is transforming every aspect of the human experience. As creators of this technology, what obligations do we have to the <b>general public</b>, for whom we make the <b>complex machinery</b> of computing increasingly invisible? ... it's important for the general public to know something about the <b>technology behind the curtain</b> of computing.",
    "title": "The Great and Terrible Oz",
    "year": 2013,
    "number": 1,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.16",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.16\">The Great and Terrible Oz</a>, IEEE Software 2013, no. 1, p. 14",
    "searchText": ""
  },
  {
    "quote": "Most people think of <b>requirements</b> as things to manipulate at the <b>start of a project</b>. Others, more enlightened, recognize that requirements also have a role toward the end of projects to <b>test compliance</b>. But few people have recognized an active role for requirements during their <b>system's use</b> - to <b>monitor</b> whether the system continues to <b>comply with its requirements</b> during its lifetime.",
    "title": "Monitoring Our Requirements",
    "year": 2013,
    "number": 1,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.10",
    "selected": false,
    "authors": [
      {
        "name": "Neil Maiden",
        "link": ""
      }
    ],
    "authorsList": "Neil Maiden",
    "citation": "Neil Maiden, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.10\">Monitoring Our Requirements</a>, IEEE Software 2013, no. 1, p. 16",
    "searchText": ""
  },
  {
    "quote": "'<b>Innovation</b>' and '<b>innovative architecture</b>' are topics of broad popularity in software engineering. Yet, the two terms appear to mean different things to different people - with interpretations of both driven more by <b>personal interests</b> than by their <b>true meanings</b>. It's therefore essential for architects to have a clear understanding of what 'innovation' means in the context of their projects if they are to make the <b>right design decisions</b> and communicate the <b>intended messages</b> to project stakeholders.",
    "title": "Innovation Reconsidered",
    "year": 2013,
    "number": 1,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.9",
    "selected": false,
    "authors": [
      {
        "name": "Frank Buschmann",
        "link": ""
      }
    ],
    "authorsList": "Frank Buschmann",
    "citation": "Frank Buschmann, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.9\">Innovation Reconsidered</a>, IEEE Software 2013, no. 1, p. 18",
    "searchText": ""
  },
  {
    "quote": "Over the past decade, the advent of <b>social networking</b> has fundamentally altered the landscape of how software is used, designed, and developed. It has expanded how <b>communities of software stakeholders</b> communicate, <b>collaborate</b>, <b>learn</b> from, and <b>coordinate</b> with one another.",
    "title": "Bridging Software Communities through Social Networking",
    "year": 2013,
    "number": 1,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.3",
    "selected": false,
    "authors": [
      {
        "name": "Andrew Begel",
        "link": ""
      },
      {
        "name": "Jan Bosch",
        "link": ""
      },
      {
        "name": "Margaret-Anne Storey",
        "link": ""
      }
    ],
    "authorsList": "Andrew Begel, Jan Bosch, Margaret-Anne Storey",
    "citation": "Andrew Begel, Jan Bosch, Margaret-Anne Storey, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.3\">Bridging Software Communities through Social Networking</a>, IEEE Software 2013, no. 1, p. 26",
    "searchText": ""
  },
  {
    "quote": "<b>Software development</b> is increasingly carried out by <b>developer communities</b> in a <b>global setting</b>. One way to prepare for development success is to uncover and <b>harmonize</b> these <b>communities</b> to exploit their collective, collaborative potential.",
    "title": "Uncovering Latent Social Communities in Software Development",
    "year": 2013,
    "number": 1,
    "page": 29,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.170",
    "selected": false,
    "authors": [
      {
        "name": "Hans van Vliet",
        "link": ""
      },
      {
        "name": "Patricia Lago",
        "link": ""
      },
      {
        "name": "Damian A. Tamburri",
        "link": ""
      }
    ],
    "authorsList": "Hans van Vliet, Patricia Lago, Damian A. Tamburri",
    "citation": "Hans van Vliet, Patricia Lago, Damian A. Tamburri, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.170\">Uncovering Latent Social Communities in Software Development</a>, IEEE Software 2013, no. 1, p. 29",
    "searchText": ""
  },
  {
    "quote": "A new generation of <b>development environments</b> takes a radical approach to communication and coordination by <b>fusing social networking</b> functionality with flexible, <b>distributed version control</b>. Through these transparent work environments, people, repositories, development activities, and their histories are immediately and easily visible to all users .... <b>transparency</b> helps developers on <b>GitHub</b> manage their projects, handle dependencies more effectively, reduce communication needs, and figure out what requires their attention.",
    "title": "Leveraging Transparency",
    "year": 2013,
    "number": 1,
    "page": 37,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.172",
    "selected": false,
    "authors": [
      {
        "name": "James Herbsleb",
        "link": ""
      },
      {
        "name": "Jason Tsay",
        "link": ""
      },
      {
        "name": "Colleen Stuart",
        "link": ""
      },
      {
        "name": "Laura Dabbish",
        "link": ""
      }
    ],
    "authorsList": "James Herbsleb, Jason Tsay, Colleen Stuart, Laura Dabbish",
    "citation": "James Herbsleb, Jason Tsay, Colleen Stuart, Laura Dabbish, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.172\">Leveraging Transparency</a>, IEEE Software 2013, no. 1, p. 37",
    "searchText": ""
  },
  {
    "quote": "The <b>Social Web</b> provides comprehensive and publicly available <b>information about software developers</b>, identifying them as <b>contributors</b> to open source projects, <b>experts</b> at maintaining ties on social network sites, or <b>active participants</b> on knowledge-sharing sites. These <b>signals</b>, when aggregated and summarized, could be used to define potential <b>candidates' individual profiles</b>: potential employers could qualitatively evaluate job seekers, even those lacking a formal degree or changing their career path, by assessing candidates' online contributions.",
    "title": "Assessing Technical Candidates on the Social Web",
    "year": 2013,
    "number": 1,
    "page": 45,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.169",
    "selected": false,
    "authors": [
      {
        "name": "Andrea Capiluppi",
        "link": ""
      },
      {
        "name": "Alexander Serebrenik",
        "link": ""
      },
      {
        "name": "Leif Singer",
        "link": ""
      }
    ],
    "authorsList": "Andrea Capiluppi, Alexander Serebrenik, Leif Singer",
    "citation": "Andrea Capiluppi, Alexander Serebrenik, Leif Singer, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.169\">Assessing Technical Candidates on the Social Web</a>, IEEE Software 2013, no. 1, p. 45",
    "searchText": ""
  },
  {
    "quote": "Many successful software companies use <b>social networking</b> as a way to <b>improve the services</b> or products they provide. ... semistructured interviews with leaders from four successful companies: <b>Brian Doll</b>, an engineer who manages GitHub's marketing; <b>Doug Laundry</b>, a principal group program manager at Microsoft; <b>David Fullerton</b>, vice president of engineering at Stack Exchange; and <b>Robert Hughes</b>, the president and chief operating officer of TopCoder.",
    "title": "Social Networking Meets Software Development: Perspectives from GitHub, MSDN, Stack Exchange, and TopCoder",
    "year": 2013,
    "number": 1,
    "page": 52,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.13",
    "selected": false,
    "authors": [
      {
        "name": "Andrew Begel",
        "link": ""
      },
      {
        "name": "Jan Bosch",
        "link": ""
      },
      {
        "name": "Margaret-Anne Storey",
        "link": ""
      }
    ],
    "authorsList": "Andrew Begel, Jan Bosch, Margaret-Anne Storey",
    "citation": "Andrew Begel, Jan Bosch, Margaret-Anne Storey, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.13\">Social Networking Meets Software Development: Perspectives from GitHub, MSDN, Stack Exchange, and TopCoder</a>, IEEE Software 2013, no. 1, p. 52",
    "searchText": ""
  },
  {
    "quote": "<b>Mutation testing</b> improves a system's bug-detection capability. It also helps improve coverage by exposing software or code areas that other types of testing might not expose.",
    "title": "Using Mutation to Enhance GUI Testing Coverage",
    "year": 2013,
    "number": 1,
    "page": 67,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.22",
    "selected": false,
    "authors": [
      {
        "name": "Izzat Mahmoud Alsmadi",
        "link": ""
      }
    ],
    "authorsList": "Izzat Mahmoud Alsmadi",
    "citation": "Izzat Mahmoud Alsmadi, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.22\">Using Mutation to Enhance GUI Testing Coverage</a>, IEEE Software 2013, no. 1, p. 67",
    "searchText": ""
  },
  {
    "quote": "<b>What works</b> for <b>whom</b>, <b>where</b>, <b>when</b>, and <b>why</b> is the ultimate question of <b>evidence-based software engineering</b>. Still, the empirical research seems mostly concerned with identifying <b>universal relationships</b> that are independent of how work settings and other contexts interact with the processes important to software practice. Questions of '<b>What is best?</b>' seem to prevail. For example, 'Which is better: pair or solo programming? test-first or test-last?' However, just as the question of <b>whether a helicopter is better than a bicycle</b> is meaningless, so are these questions because the answers depend on the settings and goals of the projects studied.",
    "title": "Contextualizing empirical evidence",
    "year": 2013,
    "number": 1,
    "page": 81,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.4",
    "selected": false,
    "authors": [
      {
        "name": "Tore Dyba",
        "link": ""
      }
    ],
    "authorsList": "Tore Dyba",
    "citation": "Tore Dyba, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.4\">Contextualizing empirical evidence</a>, IEEE Software 2013, no. 1, p. 81",
    "searchText": ""
  },
  {
    "quote": "<b>Testing</b> is a <b>destructive task</b> in which the goal is to find relevant defects as early as possible. It <b>requires automation</b> to reduce cost and ensure high regression, thus delivering determined quality. ... In practice, <b>XUnit</b> frameworks are the most used technology to automate tests. In such frameworks, test cases are written in an <b>executable language</b> and can be executed automatically. They also provide specific operations to implement the <b>test case oracles</b>.",
    "title": "Test Automation",
    "year": 2013,
    "number": 1,
    "page": 84,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2013.15",
    "selected": false,
    "authors": [
      {
        "name": "Macario Polo",
        "link": ""
      },
      {
        "name": "Pedro Reales",
        "link": ""
      },
      {
        "name": "Mario Piattini",
        "link": ""
      },
      {
        "name": "Christof Ebert",
        "link": ""
      }
    ],
    "authorsList": "Macario Polo, Pedro Reales, Mario Piattini, Christof Ebert",
    "citation": "Macario Polo, Pedro Reales, Mario Piattini, Christof Ebert, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2013.15\">Test Automation</a>, IEEE Software 2013, no. 1, p. 84",
    "searchText": ""
  },
  {
    "quote": "<b>Computing</b> was once a companion to conflict; computing is now an instrument of war; computing is becoming a <b>theater of war</b>. Along the way, conflict has shaped computing, and computing has changed the nature of warfare.",
    "title": "Woven on the Loom of Sorrow",
    "year": 2012,
    "number": 6,
    "page": 13,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.168",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.168\">Woven on the Loom of Sorrow</a>, IEEE Software 2012, no. 6, p. 13",
    "searchText": ""
  },
  {
    "quote": "The metaphor of <b>technical debt</b> in software development was introduced two decades ago to explain to <b>nontechnical stakeholders</b> the need for what we call now '<b>refactoring</b>.'",
    "title": "Technical Debt: From Metaphor to Theory and Practice",
    "year": 2012,
    "number": 6,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.167",
    "selected": false,
    "authors": [
      {
        "name": "Ipek Ozkaya",
        "link": ""
      },
      {
        "name": "Robert L. Nord",
        "link": ""
      },
      {
        "name": "Philippe Kruchten",
        "link": ""
      }
    ],
    "authorsList": "Ipek Ozkaya, Robert L. Nord, Philippe Kruchten",
    "citation": "Ipek Ozkaya, Robert L. Nord, Philippe Kruchten, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.167\">Technical Debt: From Metaphor to Theory and Practice</a>, IEEE Software 2012, no. 6, p. 18",
    "searchText": ""
  },
  {
    "quote": "<b>Agile teams</b> create <b>business value</b> by responding to changing business environments and delivering working software at regular intervals. While doing so, they make <b>design tradeoffs</b> to satisfy business needs such as meeting a release schedule. <b>Technical debt</b> is the result of such decisions or tradeoffs. When this happens, agile teams must pay off the <b>accumulated debt</b> by improving designs during subsequent iterations in order to improve maintainability.",
    "title": "Distributed Agile, Agile Testing, and Technical Debt",
    "year": 2012,
    "number": 6,
    "page": 28,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.155",
    "selected": false,
    "authors": [
      {
        "name": "Raja Bavani",
        "link": ""
      }
    ],
    "authorsList": "Raja Bavani",
    "citation": "Raja Bavani, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.155\">Distributed Agile, Agile Testing, and Technical Debt</a>, IEEE Software 2012, no. 6, p. 28",
    "searchText": ""
  },
  {
    "quote": "<b>Technical debt</b> is more than a metaphor: applying <b>finance and accounting practices</b> typical of other business obligations to technical debt can, in addition to meeting ethical and legal governance requirements, generate real, sustained financial benefits.",
    "title": "Technical Debt: Where Are the Shareholders' Interests?",
    "year": 2012,
    "number": 6,
    "page": 88,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.166",
    "selected": false,
    "authors": [
      {
        "name": "Patrick Conroy",
        "link": ""
      }
    ],
    "authorsList": "Patrick Conroy",
    "citation": "Patrick Conroy, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.166\">Technical Debt: Where Are the Shareholders' Interests?</a>, IEEE Software 2012, no. 6, p. 88",
    "searchText": ""
  },
  {
    "quote": "A close look at the <b>evidence</b> underpinning the original concept of <b>lean production</b> and its popular interpretation reveals the inherent challenges of measuring and interpreting evidence for performance differences.",
    "title": "What's the Evidence for Lean?",
    "year": 2012,
    "number": 5,
    "page": 19,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.126",
    "selected": false,
    "authors": [
      {
        "name": "Helen Sharp",
        "link": ""
      },
      {
        "name": "Tore Dyb&amp;#x00E5;",
        "link": ""
      }
    ],
    "authorsList": "Helen Sharp, Tore Dyb&amp;#x00E5;",
    "citation": "Helen Sharp, Tore Dyb&amp;#x00E5;, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.126\">What's the Evidence for Lean?</a>, IEEE Software 2012, no. 5, p. 19",
    "searchText": ""
  },
  {
    "quote": "Although some claim that <b>principles from other fields</b> can't apply to a creative and design-oriented discipline such as software development, many studies have proven <b>the simple wisdom</b> that we all benefit from <b>empowered and motivated teams</b>, we build our products faster and with better quality if <b>market strategy is understood</b> and <b>requirements changes managed</b>, we <b>learn from previous defects</b>, we can emphasize <b>repeatable processes</b>, and we should build from high-quality components. The software industry is now poised to transform to <b>customer-centric development</b>, which translates into both reducing the total life-cycle cost and increasing efficiency and effectiveness by <b>eliminating waste</b> and <b>adding value</b>.",
    "title": "Lean Software Development",
    "year": 2012,
    "number": 5,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.116",
    "selected": false,
    "authors": [
      {
        "name": "Pekka Abrahamsson",
        "link": ""
      },
      {
        "name": "Christof Ebert",
        "link": ""
      },
      {
        "name": "Nilay Oza",
        "link": ""
      }
    ],
    "authorsList": "Pekka Abrahamsson, Christof Ebert, Nilay Oza",
    "citation": "Pekka Abrahamsson, Christof Ebert, Nilay Oza, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.116\">Lean Software Development</a>, IEEE Software 2012, no. 5, p. 22",
    "searchText": ""
  },
  {
    "quote": "[T]he term '<b>lean</b>' ... describe[s] any efficient management practice that <b>minimized waste</b>, including in product development ... In lean terms, '<b>waste</b>' is anything that doesn't either <b>add customer value directly</b> or <b>add knowledge</b> about how to deliver that value more effectively.",
    "title": "Lean Software Development: A Tutorial",
    "year": 2012,
    "number": 5,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.107",
    "selected": false,
    "authors": [
      {
        "name": "Mary Poppendieck",
        "link": ""
      },
      {
        "name": "Michael A. Cusumano",
        "link": ""
      }
    ],
    "authorsList": "Mary Poppendieck, Michael A. Cusumano",
    "citation": "Mary Poppendieck, Michael A. Cusumano, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.107\">Lean Software Development: A Tutorial</a>, IEEE Software 2012, no. 5, p. 26",
    "searchText": ""
  },
  {
    "quote": "<b>Lean practices</b> use the principle of <b>Little's law</b> to improve the flow of value to the end user by eliminating sources of waste from a software development process. <b>Little's law</b> defines throughput as a ratio of <b>work in process</b> and <b>cycle time</b>. Increasing throughput (or productivity) requires continuously improving (that is, decreasing) cycle time while ensuring that the work-in-process limit doesn't exceed the capacity available to process the work.",
    "title": "Making Architecture Visible to Improve Flow Management in Lean Software Development",
    "year": 2012,
    "number": 5,
    "page": 33,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.109",
    "selected": false,
    "authors": [
      {
        "name": "R. L. Nord",
        "link": ""
      },
      {
        "name": "I. Ozkaya",
        "link": ""
      },
      {
        "name": "R. S. Sangwan",
        "link": ""
      }
    ],
    "authorsList": "R. L. Nord, I. Ozkaya, R. S. Sangwan",
    "citation": "R. L. Nord, I. Ozkaya, R. S. Sangwan, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.109\">Making Architecture Visible to Improve Flow Management in Lean Software Development</a>, IEEE Software 2012, no. 5, p. 33",
    "searchText": ""
  },
  {
    "quote": "Modern <b>virtualization technology</b> allows us to run operating systems in a virtual machine that can be hosted on facilities ranging from our laptop to a datacenter in the cloud. It's thus possible to create <b>a virtualized development environment</b> that contains all the tools, applications, and libraries that a programmer requires. This speeds up developer setup time, brings economies of scale, introduces parity between development and production environments, allows the use of platform-specific tools, and simplifies embedded-system development. Using VMs, testers can ensure a <b>pristine environment</b> and access to diverse (virtual) platforms. Deployment is also simplified by packaging all the system's components and setup into a <b>VM appliance</b>. Finally, on the operations side, VMs make it easier for a system to support application <b>provisioning</b>, <b>maintenance windows</b>, <b>high availability</b>, and <b>disaster recovery</b>.",
    "title": "Virtualize Me",
    "year": 2012,
    "number": 5,
    "page": 91,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.125",
    "selected": false,
    "authors": [
      {
        "name": "Diomidis Spinellis",
        "link": ""
      }
    ],
    "authorsList": "Diomidis Spinellis",
    "citation": "Diomidis Spinellis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.125\">Virtualize Me</a>, IEEE Software 2012, no. 5, p. 91",
    "searchText": ""
  },
  {
    "quote": "<b>Smart mobile devices</b> have had a <b>huge impact</b> on the world today with new apps being produced at a prodigious rate. How we got to this point has a lot to do with the <b>ease of use</b> that manufacturers and app developers have achieved, which includes aspects such as <b>quick response time</b>, <b>intuitive interfaces</b>, and well-designed functionality.",
    "title": "Designing a World at Your Fingertips: A Look at Mobile User Interfaces",
    "year": 2012,
    "number": 4,
    "page": 4,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.81",
    "selected": false,
    "authors": [
      {
        "name": "Forrest Shull",
        "link": ""
      }
    ],
    "authorsList": "Forrest Shull",
    "citation": "Forrest Shull, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.81\">Designing a World at Your Fingertips: A Look at Mobile User Interfaces</a>, IEEE Software 2012, no. 4, p. 4",
    "searchText": ""
  },
  {
    "quote": "<b>Computing has transformed humanity</b> in ways that we have only begun to metabolize. Computing amplifies what we celebrate most about being human, but it also has the capacity to magnify that which we mourn. <b>Exploring the story of computing</b> has value, for an <b>educated populace</b> is far more able to reconcile its past, reason about its present, and be intentional about its future.",
    "title": "The Human Experience",
    "year": 2012,
    "number": 4,
    "page": 13,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.103",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.103\">The Human Experience</a>, IEEE Software 2012, no. 4, p. 13",
    "searchText": ""
  },
  {
    "quote": "<b>Smartphones</b> aren't very 'smart' without the <b>software apps</b> that give them their usability and versatility. Apps, like all software, need some degree of guidance, regulation, and measurement to ensure a user is receiving proper functionality and quality of service.",
    "title": "The Mobile Software App Takeover",
    "year": 2012,
    "number": 4,
    "page": 25,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.104",
    "selected": false,
    "authors": [
      {
        "name": "Jeffrey Voas",
        "link": ""
      },
      {
        "name": "J. Bret Michael",
        "link": ""
      },
      {
        "name": "Michiel van Genuchten",
        "link": ""
      }
    ],
    "authorsList": "Jeffrey Voas, J. Bret Michael, Michiel van Genuchten",
    "citation": "Jeffrey Voas, J. Bret Michael, Michiel van Genuchten, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.104\">The Mobile Software App Takeover</a>, IEEE Software 2012, no. 4, p. 25",
    "searchText": ""
  },
  {
    "quote": "<b>Mobile devices</b> have become a commodity: we use several devices for various purposes. Although we carry only some of our devices with us, we still want to access content originating from any device. To overcome this issue, device users often upload content into a hosting service available in the cloud. However, <b>cloud-based</b> hosting can <b>alienate the control</b> and ownership of the content.",
    "title": "Mobile Content as a Service A Blueprint for a Vendor-Neutral Cloud of Mobile Devices",
    "year": 2012,
    "number": 4,
    "page": 28,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.54",
    "selected": false,
    "authors": [
      {
        "name": "Niko M&amp;#x00E4;kitalo",
        "link": ""
      },
      {
        "name": "Varvara Myll&amp;#x00E4;rniemi",
        "link": ""
      },
      {
        "name": "Tommi Mikkonen",
        "link": ""
      },
      {
        "name": "Mikko Raatikainen",
        "link": ""
      },
      {
        "name": "Tomi M&amp;#x00E4;nnist&amp;#x00F6;",
        "link": ""
      },
      {
        "name": "Juha Savolainen",
        "link": ""
      }
    ],
    "authorsList": "Niko M&amp;#x00E4;kitalo, Varvara Myll&amp;#x00E4;rniemi, Tommi Mikkonen, Mikko Raatikainen, Tomi M&amp;#x00E4;nnist&amp;#x00F6;, Juha Savolainen",
    "citation": "Niko M&amp;#x00E4;kitalo, Varvara Myll&amp;#x00E4;rniemi, Tommi Mikkonen, Mikko Raatikainen, Tomi M&amp;#x00E4;nnist&amp;#x00F6;, Juha Savolainen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.54\">Mobile Content as a Service A Blueprint for a Vendor-Neutral Cloud of Mobile Devices</a>, IEEE Software 2012, no. 4, p. 28",
    "searchText": ""
  },
  {
    "quote": "<b>Service-oriented architecture (SOA)</b> has gained significant attention as a means of developing flexible and modular systems. .. not all stated benefits are realised due to, among other things, a failure of service-oriented <b>thinking at an organisational level</b>, problems allocating <b>financial responsibility</b> for services within and between organisations, and a lack of <b>mature tool chains</b>.",
    "title": "Service-Oriented Architectures: Myth or Reality?",
    "year": 2012,
    "number": 4,
    "page": 46,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.156",
    "selected": false,
    "authors": [
      {
        "name": "Fethi A. Rabhi",
        "link": ""
      },
      {
        "name": "Haresh Luthria",
        "link": ""
      }
    ],
    "authorsList": "Fethi A. Rabhi, Haresh Luthria",
    "citation": "Fethi A. Rabhi, Haresh Luthria, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.156\">Service-Oriented Architectures: Myth or Reality?</a>, IEEE Software 2012, no. 4, p. 46",
    "searchText": ""
  },
  {
    "quote": "<b>Codification</b> and <b>testing of business rules</b> in application programs has historically been a challenge in software engineering. Many organizations have adopted the business rules approach to formalize and compartmentalize business rules as a separate component from application code.",
    "title": "The Business Rules Approach and Its Effect on Software Testing",
    "year": 2012,
    "number": 4,
    "page": 60,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.120",
    "selected": false,
    "authors": [
      {
        "name": "Euntae T. Lee",
        "link": ""
      },
      {
        "name": "Chen Zhang",
        "link": ""
      },
      {
        "name": "Thomas O. Meservy",
        "link": ""
      },
      {
        "name": "Jasbir Dhaliwal",
        "link": ""
      }
    ],
    "authorsList": "Euntae T. Lee, Chen Zhang, Thomas O. Meservy, Jasbir Dhaliwal",
    "citation": "Euntae T. Lee, Chen Zhang, Thomas O. Meservy, Jasbir Dhaliwal, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.120\">The Business Rules Approach and Its Effect on Software Testing</a>, IEEE Software 2012, no. 4, p. 60",
    "searchText": ""
  },
  {
    "quote": "Even the fanciest videoconferencing or 3G holography can't overcome <b>the fundamental time-zone problem</b> — that it's sleep time on the other side of the world. Consequently, no miracle technology will overcome time-zone differences.",
    "title": "Technologies to Support Collaboration across Time Zones",
    "year": 2012,
    "number": 3,
    "page": 10,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.68",
    "selected": false,
    "authors": [
      {
        "name": "Christof Ebert",
        "link": ""
      },
      {
        "name": "Rafael Prikladnicki",
        "link": ""
      },
      {
        "name": "Sabrina Marczak",
        "link": ""
      },
      {
        "name": "Erran Carmel",
        "link": ""
      }
    ],
    "authorsList": "Christof Ebert, Rafael Prikladnicki, Sabrina Marczak, Erran Carmel",
    "citation": "Christof Ebert, Rafael Prikladnicki, Sabrina Marczak, Erran Carmel, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.68\">Technologies to Support Collaboration across Time Zones</a>, IEEE Software 2012, no. 3, p. 10",
    "searchText": ""
  },
  {
    "quote": "Typically, organizations face conflicting objectives, with <b>compliance policies</b> possibly <b>hindering innovation</b>, slowing down the product development process, or making the whole process <b>most costly</b>. The goal of software engineering for compliance is to bridge <b>the gap</b> between the <b>software engineering community</b> and the <b>compliance community</b>.",
    "title": "Guest Editors' Introduction: Software Engineering for Compliance",
    "year": 2012,
    "number": 3,
    "page": 24,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.63",
    "selected": false,
    "authors": [
      {
        "name": "Ayse Bener",
        "link": ""
      },
      {
        "name": "Uwe Zdun",
        "link": ""
      },
      {
        "name": "Erlinda L. Olalia-Carin",
        "link": ""
      }
    ],
    "authorsList": "Ayse Bener, Uwe Zdun, Erlinda L. Olalia-Carin",
    "citation": "Ayse Bener, Uwe Zdun, Erlinda L. Olalia-Carin, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.63\">Guest Editors' Introduction: Software Engineering for Compliance</a>, IEEE Software 2012, no. 3, p. 24",
    "searchText": ""
  },
  {
    "quote": "<b>Ensuring compliance</b> to laws, regulations, and standards in a <b>constantly changing</b> business environment is a major challenge for companies. So, organizations have an increasing need for <b>systematic approaches</b> to manage compliance throughout the business process (BP) life cycle.",
    "title": "Capturing Compliance Requirements: A Pattern-Based Approach",
    "year": 2012,
    "number": 3,
    "page": 28,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.45",
    "selected": false,
    "authors": [
      {
        "name": "Michael P. Papazoglou",
        "link": ""
      },
      {
        "name": "Amal Elgammal",
        "link": ""
      },
      {
        "name": "Willem-Jan van den Heuvel",
        "link": ""
      },
      {
        "name": "Oktay Turetken",
        "link": ""
      }
    ],
    "authorsList": "Michael P. Papazoglou, Amal Elgammal, Willem-Jan van den Heuvel, Oktay Turetken",
    "citation": "Michael P. Papazoglou, Amal Elgammal, Willem-Jan van den Heuvel, Oktay Turetken, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.45\">Capturing Compliance Requirements: A Pattern-Based Approach</a>, IEEE Software 2012, no. 3, p. 28",
    "searchText": ""
  },
  {
    "quote": "The changing <b>global business environment</b> and continued introduction of new technologies are significantly affecting organizations' privacy practices. In this environment, <b>privacy-enhancing technology (PET)</b> often becomes a key to protecting personal information.",
    "title": "A Framework for Managing Privacy-Enhancing Technology",
    "year": 2012,
    "number": 3,
    "page": 45,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.47",
    "selected": false,
    "authors": [
      {
        "name": "David Pelkola",
        "link": ""
      }
    ],
    "authorsList": "David Pelkola",
    "citation": "David Pelkola, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.47\">A Framework for Managing Privacy-Enhancing Technology</a>, IEEE Software 2012, no. 3, p. 45",
    "searchText": ""
  },
  {
    "quote": "<b>Leadership</b> is the key for architects to balance all their activities and duties with the interests of different <b>stakeholders</b> without losing control of the architecture under development. They must have a <b>clear vision</b> and strict focus on key aspects of success. All their activities should be <b>goal-driven</b> and in direct cooperation and interaction with the relevant stakeholder groups.",
    "title": "A Week in the Life of an Architect",
    "year": 2012,
    "number": 3,
    "page": 94,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.55",
    "selected": false,
    "authors": [
      {
        "name": "Frank Buschmann",
        "link": ""
      }
    ],
    "authorsList": "Frank Buschmann",
    "citation": "Frank Buschmann, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.55\">A Week in the Life of an Architect</a>, IEEE Software 2012, no. 3, p. 94",
    "searchText": ""
  },
  {
    "quote": "<b>Git</b> is a distributed revision control system available on all mainstream development platforms through a free software license. An important difference of git over its older ancestors is that it elevates the <b>software's revisions</b> to <b>first-class citizens</b>. ",
    "title": "Git",
    "year": 2012,
    "number": 3,
    "page": 100,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.61",
    "selected": false,
    "authors": [
      {
        "name": "Diomidis Spinellis",
        "link": ""
      }
    ],
    "authorsList": "Diomidis Spinellis",
    "citation": "Diomidis Spinellis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.61\">Git</a>, IEEE Software 2012, no. 3, p. 100",
    "searchText": ""
  },
  {
    "quote": "The increasing pervasiveness of <b>cloud computing</b> is changing the state of the practice in software testing. ... interview with <b>James Whittaker</b> ... covers key technology changes, such as more pervasive access to <b>monitoring frameworks</b>, the ability to <b>aggregate and act on feedback</b> directly from massive user communities (the '<b>crowdsourcing</b>' of quality assurance), and the ability to know the <b>exact machine configuration</b> when <b>bugs</b> are discovered.",
    "title": "A Brave New World of Testing? An Interview with Google's James Whittaker",
    "year": 2012,
    "number": 2,
    "page": 4,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.23",
    "selected": false,
    "authors": [
      {
        "name": "Forrest Shull",
        "link": ""
      }
    ],
    "authorsList": "Forrest Shull",
    "citation": "Forrest Shull, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.23\">A Brave New World of Testing? An Interview with Google's James Whittaker</a>, IEEE Software 2012, no. 2, p. 4",
    "searchText": ""
  },
  {
    "quote": "There comes <b>a point of no return</b> in the life of every successful software-intensive system, a point where you can no longer place a pile of your best developers at one end of a lever and expect them to move the world. Rather, you must come to realize that <b>putting piles of developers</b> at the end of even the longest lever is no longer the right tool to use. Crossing that point while still preserving the values and the <b>tribal memory</b> of your organization's development culture requires some serious adult supervision.",
    "title": "Facing Future",
    "year": 2012,
    "number": 2,
    "page": 20,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.29",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.29\">Facing Future</a>, IEEE Software 2012, no. 2, p. 20",
    "searchText": ""
  },
  {
    "quote": "<b>Cloud computing</b> is a new paradigm for software systems where applications are divided into sets of <b>composite services</b> hosted on leased, <b>highly distributed platforms</b>. There are many new software engineering challenges in building effective cloud-based software applications.",
    "title": "Guest Editors' Introduction: Software Engineering for the Cloud",
    "year": 2012,
    "number": 2,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.31",
    "selected": false,
    "authors": [
      {
        "name": "Jacky Keung",
        "link": ""
      },
      {
        "name": "Gerald Kaefer",
        "link": ""
      },
      {
        "name": "Anna Liu",
        "link": ""
      },
      {
        "name": "John Grundy",
        "link": ""
      }
    ],
    "authorsList": "Jacky Keung, Gerald Kaefer, Anna Liu, John Grundy",
    "citation": "Jacky Keung, Gerald Kaefer, Anna Liu, John Grundy, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.31\">Guest Editors' Introduction: Software Engineering for the Cloud</a>, IEEE Software 2012, no. 2, p. 26",
    "searchText": ""
  },
  {
    "quote": "Platforms such as <b>Windows Azure</b> let applications conduct data-intensive cloud computing. <b>Unit testing</b> can help ensure high-quality development of such applications, but the results <b>depend on</b> test inputs and the cloud <b>environment's state</b>. Manually providing various test inputs and <b>cloud states</b> is laborious and time-consuming. However, automated test generation must <b>simulate</b> various <b>cloud states</b> to achieve effective testing.",
    "title": "Environmental Modeling for Automated Cloud Application Testing",
    "year": 2011,
    "number": 2,
    "page": 30,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.158",
    "selected": false,
    "authors": [
      {
        "name": "Jian Lu",
        "link": ""
      },
      {
        "name": "Linghao Zhang",
        "link": ""
      },
      {
        "name": "Tao Xie",
        "link": ""
      },
      {
        "name": "Nikolai Tillmann",
        "link": ""
      },
      {
        "name": "Xiaoxing Ma",
        "link": ""
      },
      {
        "name": "Peli de Halleux",
        "link": ""
      }
    ],
    "authorsList": "Jian Lu, Linghao Zhang, Tao Xie, Nikolai Tillmann, Xiaoxing Ma, Peli de Halleux",
    "citation": "Jian Lu, Linghao Zhang, Tao Xie, Nikolai Tillmann, Xiaoxing Ma, Peli de Halleux, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.158\">Environmental Modeling for Automated Cloud Application Testing</a>, IEEE Software 2011, no. 2, p. 30",
    "searchText": ""
  },
  {
    "quote": "The large-scale, dynamic, and heterogeneous nature of cloud computing poses numerous security challenges. But the <b>cloud's</b> main challenge is to provide a <b>robust authorization mechanism</b> that incorporates <b>multitenancy</b> and <b>virtualization</b> aspects of resources.",
    "title": "A Distributed Access Control Architecture for Cloud Computing",
    "year": 2011,
    "number": 2,
    "page": 36,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.153",
    "selected": false,
    "authors": [
      {
        "name": "Walid G. Aref",
        "link": ""
      },
      {
        "name": "Arif Ghafoor",
        "link": ""
      },
      {
        "name": "Saleh Basalamah",
        "link": ""
      },
      {
        "name": "Abdulrahman A. Almutairi",
        "link": ""
      },
      {
        "name": "Muhammad I. Sarfraz",
        "link": ""
      }
    ],
    "authorsList": "Walid G. Aref, Arif Ghafoor, Saleh Basalamah, Abdulrahman A. Almutairi, Muhammad I. Sarfraz",
    "citation": "Walid G. Aref, Arif Ghafoor, Saleh Basalamah, Abdulrahman A. Almutairi, Muhammad I. Sarfraz, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.153\">A Distributed Access Control Architecture for Cloud Computing</a>, IEEE Software 2011, no. 2, p. 36",
    "searchText": ""
  },
  {
    "quote": "As applications and services migrate to the cloud, testing will follow the same trend. Therefore, organizations must understand the <b>dynamics of cloud-based testing</b>. ... cloud computing can make testing faster and enhance the delivery of testing services. Cloud computing also highlights important aspects of testing that require attention, such as <b>integration and interoperability</b>.",
    "title": "Testing in the Cloud: Exploring the Practice",
    "year": 2011,
    "number": 2,
    "page": 46,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.132",
    "selected": false,
    "authors": [
      {
        "name": "Ossi Taipale",
        "link": ""
      },
      {
        "name": "Kari Smolander",
        "link": ""
      },
      {
        "name": "Leah Riungu-Kalliosaari",
        "link": ""
      }
    ],
    "authorsList": "Ossi Taipale, Kari Smolander, Leah Riungu-Kalliosaari",
    "citation": "Ossi Taipale, Kari Smolander, Leah Riungu-Kalliosaari, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.132\">Testing in the Cloud: Exploring the Practice</a>, IEEE Software 2011, no. 2, p. 46",
    "searchText": ""
  },
  {
    "quote": "An experimental approach employs the <b>Google App Engine</b> (GAE) for high-performance parallel computing. A generic <b>master-slave framework</b> enables fast prototyping and integration of parallel algorithms that are transparently scheduled and executed on the Google cloud infrastructure. Compared to <b>Amazon Elastic Compute Cloud</b> (EC2), GAE offers lower resource-provisioning overhead and is cheaper for jobs shorter than one hour.",
    "title": "Evaluating High-Performance Computing on Google App Engine",
    "year": 2011,
    "number": 2,
    "page": 52,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.131",
    "selected": false,
    "authors": [
      {
        "name": "Radu Prodan",
        "link": ""
      },
      {
        "name": "Simon Ostermann",
        "link": ""
      },
      {
        "name": "Michael Sperk",
        "link": ""
      }
    ],
    "authorsList": "Radu Prodan, Simon Ostermann, Michael Sperk",
    "citation": "Radu Prodan, Simon Ostermann, Michael Sperk, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.131\">Evaluating High-Performance Computing on Google App Engine</a>, IEEE Software 2011, no. 2, p. 52",
    "searchText": ""
  },
  {
    "quote": "There is broad consensus that <b>architects should code</b>. Yet the challenging question is: how can architects program without being lost in myriads of local code details? ... <b>Agile practices</b> help architects to balance their coding activities with other duties, allowing them to be in control of the amount of time they spend on programming and the concerns and system parts on which they program.",
    "title": "Code Matters!",
    "year": 2012,
    "number": 2,
    "page": 81,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.27",
    "selected": false,
    "authors": [
      {
        "name": "Frank Buschmann",
        "link": ""
      },
      {
        "name": "J&#x00F6;rg Bartholdt",
        "link": ""
      }
    ],
    "authorsList": "Frank Buschmann, J&#x00F6;rg Bartholdt",
    "citation": "Frank Buschmann, J&#x00F6;rg Bartholdt, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.27\">Code Matters!</a>, IEEE Software 2012, no. 2, p. 81",
    "searchText": ""
  },
  {
    "quote": "A <b>package management system</b> organizes and simplifies the installation and maintenance of software by standardizing and organizing the production and consumption of software collections. As a software developer, you can benefit from package managers in two ways: through a rich and stable development environment and through <b>friction-free reuse</b>. Promisingly, the structure that package managers bring both to the tools we use in our development process and the libraries we reuse in our products ties nicely with the recent move emphasizing <b>DevOps</b> (development operations) as an integration between software development and IT operations.",
    "title": "Package Management Systems",
    "year": 2012,
    "number": 2,
    "page": 84,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.38",
    "selected": false,
    "authors": [
      {
        "name": "Diomidis Spinellis",
        "link": ""
      }
    ],
    "authorsList": "Diomidis Spinellis",
    "citation": "Diomidis Spinellis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.38\">Package Management Systems</a>, IEEE Software 2012, no. 2, p. 84",
    "searchText": ""
  },
  {
    "quote": "Almost everyone agrees that there is <b>a gender gap</b> in computer science, where there are far too few females participating in the field. But does that gap occur in the whole of the field of computing? This sounding board explores the notion that the gap is <b>unique to CS</b>, and that any solution to the problem must occur within that field and not the broader field of computing.",
    "title": "The Gender Gap: Is It a Computing Problem or Simply a Computer Science Problem?",
    "year": 2012,
    "number": 2,
    "page": 87,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.44",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.44\">The Gender Gap: Is It a Computing Problem or Simply a Computer Science Problem?</a>, IEEE Software 2012, no. 2, p. 87",
    "searchText": ""
  },
  {
    "quote": "In <b>model-based testing</b> (MBT), manually selected algorithms automatically and systematically <b>generate test cases</b> from a set of models of the system under test or its environment. Whereas test automation replaces manual test execution with automated test scripts, MBT replaces manual test designs with automated test designs and test generation. ",
    "title": "Model-Based Testing",
    "year": 2012,
    "number": 1,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.13",
    "selected": false,
    "authors": [
      {
        "name": "Ina Schieferdecker",
        "link": ""
      }
    ],
    "authorsList": "Ina Schieferdecker",
    "citation": "Ina Schieferdecker, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.13\">Model-Based Testing</a>, IEEE Software 2012, no. 1, p. 14",
    "searchText": ""
  },
  {
    "quote": "<b>Architecture mastery</b> is more than professional expertise in modern software engineering methods and techniques. It is mainly in how architects approach design. Particularly, the '<b>things between things</b>' require the architect's full attention: domain concepts hidden between the lines of code; interactions and interfaces residing between components; and even choices between design options. This is the <b>architect's territory</b>, and successful architecture <b>uncovers the things 'in-between'</b> as early as possible, make them explicit, and decide about them!",
    "title": "To Boldly Go Where No One Has Gone Before",
    "year": 2012,
    "number": 1,
    "page": 23,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.18",
    "selected": false,
    "authors": [
      {
        "name": "Frank Buschmann",
        "link": ""
      }
    ],
    "authorsList": "Frank Buschmann",
    "citation": "Frank Buschmann, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.18\">To Boldly Go Where No One Has Gone Before</a>, IEEE Software 2012, no. 1, p. 23",
    "searchText": ""
  },
  {
    "quote": "[L]ooking at <b>software</b> from a <b>design perspective</b>, understanding software as a designed artifact, and considering how design reaches into the whole software life cycle can bring significant benefits both to our understanding of what works in software design and to our approach to tools and practices.",
    "title": "Guest Editors' Introduction: Studying Professional Software Design",
    "year": 2011,
    "number": 1,
    "page": 28,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.155",
    "selected": false,
    "authors": [
      {
        "name": "Andre van der Hoek",
        "link": ""
      },
      {
        "name": "Alex Baker",
        "link": ""
      },
      {
        "name": "Harold Ossher",
        "link": ""
      },
      {
        "name": "Marian Petre",
        "link": ""
      }
    ],
    "authorsList": "Andre van der Hoek, Alex Baker, Harold Ossher, Marian Petre",
    "citation": "Andre van der Hoek, Alex Baker, Harold Ossher, Marian Petre, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.155\">Guest Editors' Introduction: Studying Professional Software Design</a>, IEEE Software 2011, no. 1, p. 28",
    "searchText": ""
  },
  {
    "quote": "<b>Software designers</b> make decisions covering a wide variety of aspects of the software to be designed through nested, intertwined processes. Some of these dependencies among design decisions might not be obvious, especially for people who didn't start with the project at the beginning of the design process. Extending or <b>altering an existing design decision</b> without fully understanding its dependencies might result in a deterioration of the quality of the software design. ",
    "title": "Toward Unweaving Streams of Thought for Reflection in Professional Software Design",
    "year": 2011,
    "number": 1,
    "page": 34,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.125",
    "selected": false,
    "authors": [
      {
        "name": "Nobuto Matsubara",
        "link": ""
      },
      {
        "name": "Kumiyo Nakakoji",
        "link": ""
      },
      {
        "name": "Yoshinari Shirai",
        "link": ""
      },
      {
        "name": "Yasuhiro Yamamoto",
        "link": ""
      }
    ],
    "authorsList": "Nobuto Matsubara, Kumiyo Nakakoji, Yoshinari Shirai, Yasuhiro Yamamoto",
    "citation": "Nobuto Matsubara, Kumiyo Nakakoji, Yoshinari Shirai, Yasuhiro Yamamoto, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.125\">Toward Unweaving Streams of Thought for Reflection in Professional Software Design</a>, IEEE Software 2011, no. 1, p. 34",
    "searchText": ""
  },
  {
    "quote": "<b>Collaboration</b> can enhance the output of <b>early-stage design</b>. When software designers or architects work together to define a problem and explore potential solutions, they find and address design problems earlier and arrive at more innovative and effective solutions than when they work alone. Nonetheless, collaboration can fail without <b>proper planning</b>.",
    "title": "Strategies for Early-Stage Collaborative Design",
    "year": 2011,
    "number": 1,
    "page": 39,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.124",
    "selected": false,
    "authors": [
      {
        "name": "Ania Dilmaghani",
        "link": ""
      },
      {
        "name": "Jim Dibble",
        "link": ""
      }
    ],
    "authorsList": "Ania Dilmaghani, Jim Dibble",
    "citation": "Ania Dilmaghani, Jim Dibble, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.124\">Strategies for Early-Stage Collaborative Design</a>, IEEE Software 2011, no. 1, p. 39",
    "searchText": ""
  },
  {
    "quote": "A central task in design is deciding what artifact will best satisfy the client's needs, whether that requires creating an artifact or choosing from existing alternatives. <b>A design space</b> identifies and <b>organizes the decisions</b> that must be made, together with the alternatives for those decisions, thereby <b>providing guidance</b> for creating artifacts or a framework for comparing them.",
    "title": "The Role of Design Spaces",
    "year": 2011,
    "number": 1,
    "page": 46,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.121",
    "selected": false,
    "authors": [
      {
        "name": "Mary Shaw",
        "link": ""
      }
    ],
    "authorsList": "Mary Shaw",
    "citation": "Mary Shaw, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.121\">The Role of Design Spaces</a>, IEEE Software 2011, no. 1, p. 46",
    "searchText": ""
  },
  {
    "quote": "<b>Software design</b> is about <b>a sequence of steps</b> taken to achieve a goal. Designers must plan their approach to carrying out these steps. In studying designers at work, the authors observed <b>breadth- versus</b> <b>depth-first</b> approaches to design-space exploration and problem- versus solution-driven approaches during the actual design.",
    "title": "Design Strategy and Software Design Effectiveness",
    "year": 2011,
    "number": 1,
    "page": 51,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.130",
    "selected": false,
    "authors": [
      {
        "name": "Hans van Vliet",
        "link": ""
      },
      {
        "name": "Antony Tang",
        "link": ""
      }
    ],
    "authorsList": "Hans van Vliet, Antony Tang",
    "citation": "Hans van Vliet, Antony Tang, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.130\">Design Strategy and Software Design Effectiveness</a>, IEEE Software 2011, no. 1, p. 51",
    "searchText": ""
  },
  {
    "quote": "Enormous advances in computing power and programming environments have obscured the <b>importance of algorithms</b>, one of the <b>foundational pillars</b> of software engineering. Today, even university curricula too often pay only lip service to the teaching of algorithmic fundamentals, reinforcing the popular belief that their place at the core of a software engineer's <b>education is past</b>. Yet even today, the importance of algorithms in software engineering has not diminished, and the effects of neglect are evident everywhere in needlessly <b>inefficient industrial applications</b>.",
    "title": "Guest Editors' Introduction: Algorithms and Today's Practitioner",
    "year": 2012,
    "number": 1,
    "page": 61,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.9",
    "selected": false,
    "authors": [
      {
        "name": "Giuseppe Prencipe",
        "link": ""
      },
      {
        "name": "John Favaro",
        "link": ""
      },
      {
        "name": "Cesare Zavattari",
        "link": ""
      },
      {
        "name": "Alessandro Tommasi",
        "link": ""
      }
    ],
    "authorsList": "Giuseppe Prencipe, John Favaro, Cesare Zavattari, Alessandro Tommasi",
    "citation": "Giuseppe Prencipe, John Favaro, Cesare Zavattari, Alessandro Tommasi, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.9\">Guest Editors' Introduction: Algorithms and Today's Practitioner</a>, IEEE Software 2012, no. 1, p. 61",
    "searchText": ""
  },
  {
    "quote": "Formally speaking, <b>mastering complexity</b> requires a proof of the asymptotic computation, storage, and communication needs of a system. While we don't always do formal specifications and proofs of the properties of our algorithms, the underlying <b>behavior of the algorithms</b> factors into our <b>capacity modeling</b>—and therefore our capital and operational expense planning—in a fundamental way.",
    "title": "Excellence in Search: An Interview with David Chaiken",
    "year": 2012,
    "number": 1,
    "page": 84,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.7",
    "selected": false,
    "authors": [
      {
        "name": "John Favaro",
        "link": ""
      }
    ],
    "authorsList": "John Favaro",
    "citation": "John Favaro, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.7\">Excellence in Search: An Interview with David Chaiken</a>, IEEE Software 2012, no. 1, p. 84",
    "searchText": ""
  },
  {
    "quote": "<b>Conway's law</b>, also called the <b>mirroring hypothesis</b>, predicts that a development <b>organization</b> will inevitably design <b>systems</b> that <b>mirror</b> its <b>organizational communication</b> structure.",
    "title": "Conway's Law Revisited: The Evidence for a Task-Based Perspective",
    "year": 2012,
    "number": 1,
    "page": 90,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2012.3",
    "selected": false,
    "authors": [
      {
        "name": "Marcelo Cataldo",
        "link": ""
      },
      {
        "name": "Irwin Kwan",
        "link": ""
      },
      {
        "name": "Daniela Damian",
        "link": ""
      }
    ],
    "authorsList": "Marcelo Cataldo, Irwin Kwan, Daniela Damian",
    "citation": "Marcelo Cataldo, Irwin Kwan, Daniela Damian, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2012.3\">Conway's Law Revisited: The Evidence for a Task-Based Perspective</a>, IEEE Software 2012, no. 1, p. 90",
    "searchText": ""
  },
  {
    "quote": "If you give a <b>hurricane meteorologist</b> a giant pile of data about a storm spinning in the middle of the Atlantic Ocean and ask her to <b>determine exactly</b> where it will come ashore, she can analyze the data, construct a detailed and accurate model of the atmospheric conditions and weather patterns, run some simulations, and come up with a forecast—<b>two months after</b> the storm hits. It'll probably be wrong, but not by much, a moot point for the people in the storm's path. The <b>problem isn't</b> with the <b>forecast's accuracy</b> but with <b>the time</b> needed to prepare it. On the other extreme, if given a satellite image and a few points of other data—and a few minutes—a hurricane meteorologist can prepare a forecast so uncertain it might as well not even exist. There is a point where forecast <b>accuracy and timeliness overlap</b>. The model favored by hurricane meteorologists is to <b>do just enough</b> data acquisition and analysis to <b>be reasonably certain</b> what the storm will do and then <b>start telling people</b> to get ready.",
    "title": "What an Agile Architect Can Learn from a Hurricane Meteorologist",
    "year": 2011,
    "number": 6,
    "page": 9,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.152",
    "selected": false,
    "authors": [
      {
        "name": "Eric Richardson",
        "link": ""
      }
    ],
    "authorsList": "Eric Richardson",
    "citation": "Eric Richardson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.152\">What an Agile Architect Can Learn from a Hurricane Meteorologist</a>, IEEE Software 2011, no. 6, p. 9",
    "searchText": ""
  },
  {
    "quote": "Software systems must <b>continually evolve</b> to meet ever changing needs. However, such systems often become <b>legacy systems</b> as a consequence of <b>uncontrolled maintenance</b> combined with <b>obsolete technology</b>. To control maintenance costs and preserve complex embedded business rules, companies must <b>evolve their legacy systems</b>.",
    "title": "Reengineering Technologies",
    "year": 2011,
    "number": 6,
    "page": 13,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.145",
    "selected": false,
    "authors": [
      {
        "name": "Mario Piattini",
        "link": ""
      },
      {
        "name": "Ignacio Garc&#x00ED;a-Rodriguez de Guzm&#x00E1;n",
        "link": ""
      },
      {
        "name": "Christof Ebert",
        "link": ""
      },
      {
        "name": "Ricardo P&#x00E9;rez-Castillo",
        "link": ""
      }
    ],
    "authorsList": "Mario Piattini, Ignacio Garc&#x00ED;a-Rodriguez de Guzm&#x00E1;n, Christof Ebert, Ricardo P&#x00E9;rez-Castillo",
    "citation": "Mario Piattini, Ignacio Garc&#x00ED;a-Rodriguez de Guzm&#x00E1;n, Christof Ebert, Ricardo P&#x00E9;rez-Castillo, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.145\">Reengineering Technologies</a>, IEEE Software 2011, no. 6, p. 13",
    "searchText": ""
  },
  {
    "quote": "There is complexity, and then there is organized complexity. <b>Pure complexity</b> is <b>chaotic</b>; <b>organized complexity</b> is full of <b>patterns</b>. Naming these <b>patterns</b> and respecting their intention is the essence of architecture.",
    "title": "The Architecture of Small Things",
    "year": 2011,
    "number": 6,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.148",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.148\">The Architecture of Small Things</a>, IEEE Software 2011, no. 6, p. 18",
    "searchText": ""
  },
  {
    "quote": "<b>Climate change</b> is likely to be one of the defining global issues of the 21st century. The past decade - the hottest in recorded history - has witnessed countries around the world struggling to deal with drought, heat waves, and extreme weather. The sheer <b>scale of the problem</b> also makes it hard to understand, predict, and solve. <b>Climate science</b> journals regularly publish special issues on specific climate models, typically timed to present results from a major new release of a given model. However, these tend to focus on the <b>new science</b> that the model enables, rather than to describe the <b>software</b> and its development.",
    "title": "Guest Editors' Introduction: Climate Change - Science and Software",
    "year": 2011,
    "number": 6,
    "page": 32,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.141",
    "selected": false,
    "authors": [
      {
        "name": "Steve M. Easterbrook",
        "link": ""
      },
      {
        "name": "Venkatramani Balaji",
        "link": ""
      },
      {
        "name": "Reinhard Budich",
        "link": ""
      },
      {
        "name": "Paul N. Edwards",
        "link": ""
      }
    ],
    "authorsList": "Steve M. Easterbrook, Venkatramani Balaji, Reinhard Budich, Paul N. Edwards",
    "citation": "Steve M. Easterbrook, Venkatramani Balaji, Reinhard Budich, Paul N. Edwards, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.141\">Guest Editors' Introduction: Climate Change - Science and Software</a>, IEEE Software 2011, no. 6, p. 32",
    "searchText": ""
  },
  {
    "quote": "The <b>Clear Climate Code</b> project rewrote GISTEMP, a legacy software system used to produce an important global surface temperature dataset. The <b>focus</b> of the project is <b>on clarity</b>: making the source code as clear as possible to interested people, to <b>improve public understanding</b>.",
    "title": "Clear Climate Code: Rewriting Legacy Science Software for Clarity",
    "year": 2011,
    "number": 6,
    "page": 36,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.113",
    "selected": false,
    "authors": [
      {
        "name": "David Jones",
        "link": ""
      },
      {
        "name": "Nicholas Barnes",
        "link": ""
      }
    ],
    "authorsList": "David Jones, Nicholas Barnes",
    "citation": "David Jones, Nicholas Barnes, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.113\">Clear Climate Code: Rewriting Legacy Science Software for Clarity</a>, IEEE Software 2011, no. 6, p. 36",
    "searchText": ""
  },
  {
    "quote": "<b>Coupled climate models</b> exhibit scientific, numerical, and architectural <b>variability.</b> This variability introduces requirements that give rise to <b>complexity</b>.",
    "title": "Managing Software Complexity and Variability in Coupled Climate Models",
    "year": 2011,
    "number": 6,
    "page": 43,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.114",
    "selected": false,
    "authors": [
      {
        "name": "Spencer Rugaber",
        "link": ""
      },
      {
        "name": "Sameer Ansari",
        "link": ""
      },
      {
        "name": "Leo Mark",
        "link": ""
      },
      {
        "name": "Rocky Dunlap",
        "link": ""
      }
    ],
    "authorsList": "Spencer Rugaber, Sameer Ansari, Leo Mark, Rocky Dunlap",
    "citation": "Spencer Rugaber, Sameer Ansari, Leo Mark, Rocky Dunlap, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.114\">Managing Software Complexity and Variability in Coupled Climate Models</a>, IEEE Software 2011, no. 6, p. 43",
    "searchText": ""
  },
  {
    "quote": "<b>Models</b> play a central role for <b>climate change policy-makers</b>, but they're often so <b>complex and computationally demanding</b> that experts must run them and interpret their results. This reduces stakeholders' ability to <b>explore alternative scenarios</b>, increases perceptions of model complexity and opacity, and can ultimately reduce public confidence .",
    "title": "Enabling Open Development Methodologies in Climate Change Assessment Modeling",
    "year": 2011,
    "number": 6,
    "page": 56,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.115",
    "selected": false,
    "authors": [
      {
        "name": "Joshua Introne",
        "link": ""
      },
      {
        "name": "Robert Laubacher",
        "link": ""
      },
      {
        "name": "Thomas Malone",
        "link": ""
      }
    ],
    "authorsList": "Joshua Introne, Robert Laubacher, Thomas Malone",
    "citation": "Joshua Introne, Robert Laubacher, Thomas Malone, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.115\">Enabling Open Development Methodologies in Climate Change Assessment Modeling</a>, IEEE Software 2011, no. 6, p. 56",
    "searchText": ""
  },
  {
    "quote": "<b>Lateness</b> is the <b>most common</b> form of software project <b>failure</b>.",
    "title": "All Late Projects Are the Same",
    "year": 2011,
    "number": 6,
    "page": 103,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.134",
    "selected": false,
    "authors": [
      {
        "name": "Tom DeMarco",
        "link": ""
      }
    ],
    "authorsList": "Tom DeMarco",
    "citation": "Tom DeMarco, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.134\">All Late Projects Are the Same</a>, IEEE Software 2011, no. 6, p. 103",
    "searchText": ""
  },
  {
    "quote": "<b>Security and privacy</b> are <b>interdependent</b> concepts. Each impacts the other, but to say that they are alternatives is a false dichotomy. Both are issues of <b>human concern</b>; their policies and their risks may be made manifest in software-intensive systems. Architecting a system that attends to the needs of security and privacy is possible and desirable, yet there are often unintended and <b>unexpected consequences</b> in so doing.",
    "title": "Unintentional and Unbalanced Transparency",
    "year": 2011,
    "number": 5,
    "page": 12,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.112",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.112\">Unintentional and Unbalanced Transparency</a>, IEEE Software 2011, no. 5, p. 12",
    "searchText": ""
  },
  {
    "quote": "Successful development of <b>video games</b> hinges on understanding the difficulties of ensuring the resulting product is <b>fun</b>. Addressing this <b>soft requirement</b>, incorporating nontrivial multimedia, and other domain-specific concerns bring novel challenges to software development. ",
    "title": "Guest Editors' Introduction: Engineering Fun",
    "year": 2011,
    "number": 5,
    "page": 27,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.98",
    "selected": false,
    "authors": [
      {
        "name": "Paul Kruszewski",
        "link": ""
      },
      {
        "name": "Clark Verbrugge",
        "link": ""
      }
    ],
    "authorsList": "Paul Kruszewski, Clark Verbrugge",
    "citation": "Paul Kruszewski, Clark Verbrugge, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.98\">Guest Editors' Introduction: Engineering Fun</a>, IEEE Software 2011, no. 5, p. 27",
    "searchText": ""
  },
  {
    "quote": "Introducing reuse and <b>software product line</b> (SPL) concepts into digital <b>game-development processes</b> isn't a straightforward task. This work presents a systematic process for bridging SPLs to game development, culminating with <b>domain-specific languages</b> and generators streamlined for game subdomains.",
    "title": "Improving Digital Game Development with Software Product Lines",
    "year": 2011,
    "number": 5,
    "page": 30,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.101",
    "selected": false,
    "authors": [
      {
        "name": "Geber L. Ramalho",
        "link": ""
      },
      {
        "name": "Andre W.B. Furtado",
        "link": ""
      },
      {
        "name": "Eduardo Santana de Almeida",
        "link": ""
      },
      {
        "name": "Andre L.M. Santos",
        "link": ""
      }
    ],
    "authorsList": "Geber L. Ramalho, Andre W.B. Furtado, Eduardo Santana de Almeida, Andre L.M. Santos",
    "citation": "Geber L. Ramalho, Andre W.B. Furtado, Eduardo Santana de Almeida, Andre L.M. Santos, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.101\">Improving Digital Game Development with Software Product Lines</a>, IEEE Software 2011, no. 5, p. 30",
    "searchText": ""
  },
  {
    "quote": "The design of <b>massively multiplayer online games</b> (MMOGs) is challenging because scalability, consistency, reliability, and fairness must be achieved while providing good performance and enjoyable gameplay.",
    "title": "Journey: A Massively Multiplayer Online Game Middleware",
    "year": 2011,
    "number": 5,
    "page": 38,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.88",
    "selected": false,
    "authors": [
      {
        "name": "J&#x00F6;rg Kienzle",
        "link": ""
      },
      {
        "name": "Alexandre Denault",
        "link": ""
      }
    ],
    "authorsList": "J&#x00F6;rg Kienzle, Alexandre Denault",
    "citation": "J&#x00F6;rg Kienzle, Alexandre Denault, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.88\">Journey: A Massively Multiplayer Online Game Middleware</a>, IEEE Software 2011, no. 5, p. 38",
    "searchText": ""
  },
  {
    "quote": "<b>Games</b> must be <b>emergent</b>, constantly surprising players by the possibilities they offer. However, emergence <b>creates unpredictability</b>, preventing developers from verifying that their games won't lead to undesirable states. Worse still, even when <b>a bug</b> is found, finding out how it occurred can be a significant challenge.",
    "title": "Repairing Games at Runtime or, How We Learned to Stop Worrying and Love Emergence",
    "year": 2011,
    "number": 5,
    "page": 53,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.87",
    "selected": false,
    "authors": [
      {
        "name": "Chris Lewis",
        "link": ""
      },
      {
        "name": "Jim Whitehead",
        "link": ""
      }
    ],
    "authorsList": "Chris Lewis, Jim Whitehead",
    "citation": "Chris Lewis, Jim Whitehead, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.87\">Repairing Games at Runtime or, How We Learned to Stop Worrying and Love Emergence</a>, IEEE Software 2011, no. 5, p. 53",
    "searchText": ""
  },
  {
    "quote": "<b>Software</b> plays an increasingly important role in <b>most aspects of business</b>. Many <b>new business models</b> for software-intensive enterprises have arisen in the last decade, ranging from selling software as a service to offshoring and crowdsourcing. Governments and <b>standards bodies</b> have also intervened to influence business models for stimulating growth in the industry. The software business has also had ancillary effects including the creation of new sectors such as <b>innovation management</b>. The management of <b>intellectual property rights</b> has become a more critical issue as software is embedded in more and more products.",
    "title": "Guest Editors' Introduction: Software as a Business",
    "year": 2011,
    "number": 4,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.77",
    "selected": false,
    "authors": [
      {
        "name": "Shari Lawrence Pfleeger",
        "link": ""
      },
      {
        "name": "John Favaro",
        "link": ""
      }
    ],
    "authorsList": "Shari Lawrence Pfleeger, John Favaro",
    "citation": "Shari Lawrence Pfleeger, John Favaro, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.77\">Guest Editors' Introduction: Software as a Business</a>, IEEE Software 2011, no. 4, p. 22",
    "searchText": ""
  },
  {
    "quote": "<b>Open innovation</b> and the recent emphasis on <b>client involvement</b> imply the emergence of <b>hybrid software licensing models</b> combining the limited openness of source code with traditional value appropriation logic. ... The central idea is that the vendor of commoditized products also <b>licenses source code to select clients</b>, who become participants in and subscribers to an ongoing closed development community.",
    "title": "Sharing Source Code with Clients: A Hybrid Business and Development Model",
    "year": 2011,
    "number": 4,
    "page": 36,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.53",
    "selected": false,
    "authors": [
      {
        "name": "Mikko Riepula",
        "link": ""
      }
    ],
    "authorsList": "Mikko Riepula",
    "citation": "Mikko Riepula, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.53\">Sharing Source Code with Clients: A Hybrid Business and Development Model</a>, IEEE Software 2011, no. 4, p. 36",
    "searchText": ""
  },
  {
    "quote": "<b>Cloud computing</b> offers new ways for firms to operate in the <b>global market</b> so that even <b>small firms can compete</b> in markets traditionally dominated by multinational corporations. ",
    "title": "Developing Cloud Business Models: A Case Study on Cloud Gaming",
    "year": 2011,
    "number": 4,
    "page": 42,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.51",
    "selected": false,
    "authors": [],
    "authorsList": "Arto Ojala, Pasi Tyrväinen",
    "citation": "Arto Ojala, Pasi Tyrväinen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.51\">Developing Cloud Business Models: A Case Study on Cloud Gaming</a>, IEEE Software 2011, no. 4, p. 42",
    "searchText": ""
  },
  {
    "quote": "<b>[R]efactoring</b> is limited in what qualities it can help improve. It can also do <b>more harm than good</b> when practiced <b>informally</b> or ad hoc or when it's used as a <b>synonym</b> for <b>any form of change</b> in a system.",
    "title": "Gardening Your Architecture, Part 1: Refactoring",
    "year": 2011,
    "number": 4,
    "page": 92,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.76",
    "selected": false,
    "authors": [
      {
        "name": "Frank Buschmann",
        "link": ""
      }
    ],
    "authorsList": "Frank Buschmann",
    "citation": "Frank Buschmann, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.76\">Gardening Your Architecture, Part 1: Refactoring</a>, IEEE Software 2011, no. 4, p. 92",
    "searchText": ""
  },
  {
    "quote": "<b>Keeping up to date</b> with new software engineering methods, practices, and tools is challenging in the best of times, and made even more urgent by today's tough economic climate. ... One way to save time is to take a look at <b>only the best content</b>. Because we don't always know ahead of time which that will be, people find these shortcuts useful: finding content from the <b>established thought leaders</b> in the field, rather than from unknown voices with unknown quality; and reading content where someone has already spent time <b>aggregating or summarizing</b> the best stuff from other raw materials.",
    "title": "How Do You Keep Up to Date?",
    "year": 2011,
    "number": 3,
    "page": 2,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.57",
    "selected": false,
    "authors": [
      {
        "name": "Forrest Shull",
        "link": ""
      }
    ],
    "authorsList": "Forrest Shull",
    "citation": "Forrest Shull, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.57\">How Do You Keep Up to Date?</a>, IEEE Software 2011, no. 3, p. 2",
    "searchText": ""
  },
  {
    "quote": "<b>Architecting</b> a software-intensive system encompasses <b>technical elements</b>, <b>social considerations</b>, and a <b>technical core</b>. Most interesting systems start small and focus on technical concerns, but once they grow to the point of <b>economic significance</b>, <b>social issues</b> begin to loom large.",
    "title": "The Architect's Journey",
    "year": 2011,
    "number": 3,
    "page": 10,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.66",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.66\">The Architect's Journey</a>, IEEE Software 2011, no. 3, p. 10",
    "searchText": ""
  },
  {
    "quote": "In the last decade, <b>software components</b> have been of an increased interest in software engineering community. The appealing concepts of <b>building systems from existing components</b> and reusing components, as well as the appearance of new technologies that enabled the separation of component development from system development, attracted researchers and industry to develop and apply principles of component-based software engineering.",
    "title": "Software Components beyond Programming: From Routines to Services",
    "year": 2011,
    "number": 3,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.62",
    "selected": false,
    "authors": [
      {
        "name": "Ivica Crnkovic",
        "link": ""
      },
      {
        "name": "Clemens Szyperski",
        "link": ""
      },
      {
        "name": "Judith Stafford",
        "link": ""
      }
    ],
    "authorsList": "Ivica Crnkovic, Clemens Szyperski, Judith Stafford",
    "citation": "Ivica Crnkovic, Clemens Szyperski, Judith Stafford, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.62\">Software Components beyond Programming: From Routines to Services</a>, IEEE Software 2011, no. 3, p. 22",
    "searchText": ""
  },
  {
    "quote": "Scientists commonly describe their data-processing systems metaphorically as <b>software pipelines</b>. These pipelines input one or more data sources and apply steps to transform the data and create useful results. Although <b>conceptually simple</b>, pipelines often adopt <b>complex topologies</b> and must meet stringent <b>quality-of-service</b> requirements that stress the software infrastructure used to construct the pipeline.",
    "title": "Components in the Pipeline",
    "year": 2011,
    "number": 3,
    "page": 34,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.23",
    "selected": false,
    "authors": [
      {
        "name": "Yan Liu",
        "link": ""
      },
      {
        "name": "Adam Wynne",
        "link": ""
      },
      {
        "name": "Jian Yin",
        "link": ""
      },
      {
        "name": "Ian Gorton",
        "link": ""
      }
    ],
    "authorsList": "Yan Liu, Adam Wynne, Jian Yin, Ian Gorton",
    "citation": "Yan Liu, Adam Wynne, Jian Yin, Ian Gorton, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.23\">Components in the Pipeline</a>, IEEE Software 2011, no. 3, p. 34",
    "searchText": ""
  },
  {
    "quote": "<b>Refactoring</b> was originally conceived as a technique for enhancing the design of an existing code base by applying small <b>behavior-preserving transformations</b> to the code. ... discuss how to <b>improve the usability</b> of a Web application by applying <b>refactoring</b> on its <b>design structure</b>. ",
    "title": "Refactoring for Usability in Web Applications",
    "year": 2010,
    "number": 3,
    "page": 60,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.114",
    "selected": false,
    "authors": [
      {
        "name": "Gustavo Rossi",
        "link": ""
      },
      {
        "name": "Alejandra Garrido",
        "link": ""
      },
      {
        "name": "Damiano Distante",
        "link": ""
      }
    ],
    "authorsList": "Gustavo Rossi, Alejandra Garrido, Damiano Distante",
    "citation": "Gustavo Rossi, Alejandra Garrido, Damiano Distante, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.114\">Refactoring for Usability in Web Applications</a>, IEEE Software 2010, no. 3, p. 60",
    "searchText": ""
  },
  {
    "quote": "<b>Developing</b> <b>concurrent software</b> is hard. <b>Testing</b> concurrent software is <b>harder</b>. ",
    "title": "Predictable and Progressive Testing of Multithreaded Code",
    "year": 2010,
    "number": 3,
    "page": 75,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.64",
    "selected": false,
    "authors": [
      {
        "name": "Sebastian Burckhardt",
        "link": ""
      },
      {
        "name": "Madan Musuvathi",
        "link": ""
      },
      {
        "name": "Shaz Qadeer",
        "link": ""
      },
      {
        "name": "Peli de Halleux",
        "link": ""
      },
      {
        "name": "Thomas Ball",
        "link": ""
      }
    ],
    "authorsList": "Sebastian Burckhardt, Madan Musuvathi, Shaz Qadeer, Peli de Halleux, Thomas Ball",
    "citation": "Sebastian Burckhardt, Madan Musuvathi, Shaz Qadeer, Peli de Halleux, Thomas Ball, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.64\">Predictable and Progressive Testing of Multithreaded Code</a>, IEEE Software 2010, no. 3, p. 75",
    "searchText": ""
  },
  {
    "quote": "The metaphor of '<b>technical debt</b>' is useful for reasoning about trading off software development activities: An exclusive focus on implementing functionality can lead to <b>code decay</b>. Since this deterioration of the system usually reflects a <b>lack of</b> activity spent on <b>refactoring</b>, <b>documentation</b>, and other aspects of the <b>project infrastructure</b>, it can be viewed as a kind of debt that the developers owe the system.",
    "title": "Perfectionists in a World of Finite Resources",
    "year": 2011,
    "number": 2,
    "page": 4,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.38",
    "selected": false,
    "authors": [
      {
        "name": "Forrest Shull",
        "link": ""
      }
    ],
    "authorsList": "Forrest Shull",
    "citation": "Forrest Shull, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.38\">Perfectionists in a World of Finite Resources</a>, IEEE Software 2011, no. 2, p. 4",
    "searchText": ""
  },
  {
    "quote": "<b>Software protection</b> is increasingly becoming an important requirement for industrial software development, especially when building systems for <b>military defense</b>, <b>national infrastructure</b>, and <b>medical informatics</b>. Every software vendor should be <b>aware</b> of the <b>potential for attacks</b> against its products and the techniques available to mitigate these attacks. Employing <b>software protection techniques</b> can mean the difference between business survival and failure. ",
    "title": "Guest Editors' Introduction: Software Protection",
    "year": 2011,
    "number": 2,
    "page": 24,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.34",
    "selected": false,
    "authors": [
      {
        "name": "Christian Collberg",
        "link": ""
      },
      {
        "name": "Mikhail Atallah",
        "link": ""
      },
      {
        "name": "Mariusz Jakubowski",
        "link": ""
      },
      {
        "name": "Paolo Falcarin",
        "link": ""
      }
    ],
    "authorsList": "Christian Collberg, Mikhail Atallah, Mariusz Jakubowski, Paolo Falcarin",
    "citation": "Christian Collberg, Mikhail Atallah, Mariusz Jakubowski, Paolo Falcarin, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.34\">Guest Editors' Introduction: Software Protection</a>, IEEE Software 2011, no. 2, p. 24",
    "searchText": ""
  },
  {
    "quote": "In a typical <b>client-server scenario</b>, a server provides valuable services to client applications that run remotely on <b>untrusted client computers</b>. Typical examples are <b>video on demand</b>, online games, <b>voice-over-IP</b> communications, and many others. However, <b>client-side users</b> often hold <b>administrative privileges</b> on their machines and could tamper with the client application to fulfill the service in violation of the service usage conditions or service agreements. <b>Guaranteeing client-code security</b> is one of the most difficult security problem to address.",
    "title": "CodeBender: Remote Software Protection Using Orthogonal Replacement",
    "year": 2010,
    "number": 2,
    "page": 28,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.158",
    "selected": false,
    "authors": [
      {
        "name": "Paolo Tonella",
        "link": ""
      },
      {
        "name": "Mariano Ceccato",
        "link": ""
      }
    ],
    "authorsList": "Paolo Tonella, Mariano Ceccato",
    "citation": "Paolo Tonella, Mariano Ceccato, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.158\">CodeBender: Remote Software Protection Using Orthogonal Replacement</a>, IEEE Software 2010, no. 2, p. 28",
    "searchText": ""
  },
  {
    "quote": "<b>Unintentionally</b> <b>violating</b> open source software <b>(OSS) licenses</b> by reusing OSS code is a serious problem for both software companies and OSS developers. The simplest intuitive way to identify such reuse is to <b>measure code clones</b> - duplicated code fragments - between a suspected program and an existing OSS program.",
    "title": "Guilty or Not Guilty: Using Clone Metrics to Determine Open Source Licensing Violations",
    "year": 2010,
    "number": 2,
    "page": 42,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.159",
    "selected": false,
    "authors": [
      {
        "name": "Yuki Manabe",
        "link": ""
      },
      {
        "name": "Satoshi Okahara",
        "link": ""
      },
      {
        "name": "Kenichi Matsumoto",
        "link": ""
      },
      {
        "name": "Akito Monden",
        "link": ""
      }
    ],
    "authorsList": "Yuki Manabe, Satoshi Okahara, Kenichi Matsumoto, Akito Monden",
    "citation": "Yuki Manabe, Satoshi Okahara, Kenichi Matsumoto, Akito Monden, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.159\">Guilty or Not Guilty: Using Clone Metrics to Determine Open Source Licensing Violations</a>, IEEE Software 2010, no. 2, p. 42",
    "searchText": ""
  },
  {
    "quote": "The evolution of <b>software into services</b> imposes certain concerns in the form of expressing and accessing services. The seamless proliferation of services demands a <b>new kind</b> of <b>software protection</b> with respect to <b>copyrights</b> and <b>moral rights</b> of service-based software to enable services' widespread use.",
    "title": "Managing Copyrights and Moral Rights of Service-Based Software",
    "year": 2010,
    "number": 2,
    "page": 48,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.161",
    "selected": false,
    "authors": [
      {
        "name": "G.R. Gangadharan",
        "link": ""
      },
      {
        "name": "Vincenzo D'Andrea",
        "link": ""
      }
    ],
    "authorsList": "G.R. Gangadharan, Vincenzo D'Andrea",
    "citation": "G.R. Gangadharan, Vincenzo D'Andrea, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.161\">Managing Copyrights and Moral Rights of Service-Based Software</a>, IEEE Software 2010, no. 2, p. 48",
    "searchText": ""
  },
  {
    "quote": "How can an <b>organization transition</b> from several <b>functionally overlapping systems</b> to just one? This scenario is common after, for example, <b>company acquisitions</b> and mergers or as a result of different units in an organization growing to the point at which the two independent efforts must be synchronized to continue.",
    "title": "Oh Dear, We Bought Our Competitor: Integrating Similar Software Systems",
    "year": 2010,
    "number": 2,
    "page": 75,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.86",
    "selected": false,
    "authors": [
      {
        "name": "Ivica Crnkovi&#263;",
        "link": ""
      },
      {
        "name": "Rikard Land",
        "link": ""
      }
    ],
    "authorsList": "Ivica Crnkovi&#263;, Rikard Land",
    "citation": "Ivica Crnkovi&#263;, Rikard Land, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.86\">Oh Dear, We Bought Our Competitor: Integrating Similar Software Systems</a>, IEEE Software 2010, no. 2, p. 75",
    "searchText": ""
  },
  {
    "quote": "<b>Watts Humphrey</b> had a truly remarkable career, during which he developed or contributed to the <b>Personal Software Process</b>, <b>Team Software Process</b>, and <b>Capability Maturity Model Integration</b> (CMMI) framework, among many other contributions.",
    "title": "Watts Humphrey: 4 July 1927 - 28 October 2010",
    "year": 2011,
    "number": 1,
    "page": 5,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.21",
    "selected": false,
    "authors": [
      {
        "name": "Forrest Shull",
        "link": ""
      }
    ],
    "authorsList": "Forrest Shull",
    "citation": "Forrest Shull, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.21\">Watts Humphrey: 4 July 1927 - 28 October 2010</a>, IEEE Software 2011, no. 1, p. 5",
    "searchText": ""
  },
  {
    "quote": "<b>Developers</b>, for the most part, <b>don't draw diagrams</b> because diagrams all too often don't offer any fundamental value that advances essential work. Yet, the problem remains that <b>we must visualize</b> ultra-large complex systems that have no directly observable physical manifestation.",
    "title": "Draw Me a Picture",
    "year": 2011,
    "number": 1,
    "page": 6,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.4",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.4\">Draw Me a Picture</a>, IEEE Software 2011, no. 1, p. 6",
    "searchText": ""
  },
  {
    "quote": "The computer industry is experiencing a major shift: <b>improved single processor performance</b> via <b>higher clock rates</b> has reached its technical limits due to overheating. ... exploiting the <b>full potential</b> of these processors requires <b>parallel programming</b>.",
    "title": "Guest Editors' Introduction: Parallelism on the Desktop",
    "year": 2011,
    "number": 1,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.8",
    "selected": false,
    "authors": [
      {
        "name": "Kurt Keutzer",
        "link": ""
      },
      {
        "name": "Wolfram Schulte",
        "link": ""
      },
      {
        "name": "Victor Pankratius",
        "link": ""
      }
    ],
    "authorsList": "Kurt Keutzer, Wolfram Schulte, Victor Pankratius",
    "citation": "Kurt Keutzer, Wolfram Schulte, Victor Pankratius, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.8\">Guest Editors' Introduction: Parallelism on the Desktop</a>, IEEE Software 2011, no. 1, p. 14",
    "searchText": ""
  },
  {
    "quote": "Writing a correct parallel program is difficult; writing a <b>highly modular parallel program</b> that performs well in a multiprogrammed environment is even more so. <b>Intel Threading Building Blocks</b> (Intel TBB), a key component of Intel Parallel Building Blocks , is a widely used C++ template library that helps developers achieve this goal.",
    "title": "Multicore Desktop Programming with Intel Threading Building Blocks",
    "year": 2011,
    "number": 1,
    "page": 23,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.12",
    "selected": false,
    "authors": [
      {
        "name": "Michael Voss",
        "link": ""
      },
      {
        "name": "Wooyoung Kim",
        "link": ""
      }
    ],
    "authorsList": "Michael Voss, Wooyoung Kim",
    "citation": "Michael Voss, Wooyoung Kim, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.12\">Multicore Desktop Programming with Intel Threading Building Blocks</a>, IEEE Software 2011, no. 1, p. 23",
    "searchText": ""
  },
  {
    "quote": "Developing parallel applications is notoriously difficult, but it's even more complex for desktop applications. The added difficulties primarily come from their interactive nature, where users largely perceive their performance. Desktop applications are typically developed with <b>graphical toolkits</b> that in turn have <b>limitations</b> in regards to <b>multithreading</b>.",
    "title": "Object-Oriented Parallelisation of Java Desktop Programs",
    "year": 2010,
    "number": 1,
    "page": 32,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.135",
    "selected": false,
    "authors": [
      {
        "name": "Oliver Sinnen",
        "link": ""
      },
      {
        "name": "Nasser Giacaman",
        "link": ""
      }
    ],
    "authorsList": "Oliver Sinnen, Nasser Giacaman",
    "citation": "Oliver Sinnen, Nasser Giacaman, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.135\">Object-Oriented Parallelisation of Java Desktop Programs</a>, IEEE Software 2010, no. 1, p. 32",
    "searchText": ""
  },
  {
    "quote": "Desktop software developers' interest in <b>graphics hardware</b> is increasing as a result of modern graphics cards' capabilities to act as compute devices that augment the <b>main processor</b>. This capability means parallel computing is no longer a dedicated task for the CPU. A trend toward heterogeneous computing combines the <b>main processor</b> and <b>graphics processing unit</b> (GPU).",
    "title": "Joint Forces: From Multithreaded Programming to GPU Computing",
    "year": 2010,
    "number": 1,
    "page": 51,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.134",
    "selected": false,
    "authors": [
      {
        "name": "Frank Feinbube",
        "link": ""
      },
      {
        "name": "Peter Troger",
        "link": ""
      },
      {
        "name": "Andreas Polze",
        "link": ""
      }
    ],
    "authorsList": "Frank Feinbube, Peter Troger, Andreas Polze",
    "citation": "Frank Feinbube, Peter Troger, Andreas Polze, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.134\">Joint Forces: From Multithreaded Programming to GPU Computing</a>, IEEE Software 2010, no. 1, p. 51",
    "searchText": ""
  },
  {
    "quote": "<b>Architectural decisions</b> are design decisions that are <b>hard to make</b> or <b>costly to change</b>.",
    "title": "Architectural Decisions as Reusable Design Assets",
    "year": 2011,
    "number": 1,
    "page": 64,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.3",
    "selected": false,
    "authors": [
      {
        "name": "Olaf Zimmermann",
        "link": ""
      }
    ],
    "authorsList": "Olaf Zimmermann",
    "citation": "Olaf Zimmermann, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.3\">Architectural Decisions as Reusable Design Assets</a>, IEEE Software 2011, no. 1, p. 64",
    "searchText": ""
  },
  {
    "quote": "<b>Mobile devices</b> are increasingly accepted as suitable media for multimedia-rich applications. ... the most popular development platform options ... <b>Java ME</b>, <b>.NET Compact Framework</b>, <b>Flash Lite</b>, and <b>Android</b>.",
    "title": "Development Platforms for Mobile Applications: Status and Trends",
    "year": 2010,
    "number": 1,
    "page": 77,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.155",
    "selected": false,
    "authors": [
      {
        "name": "Damianos Gavalas",
        "link": ""
      },
      {
        "name": "Daphne Economou",
        "link": ""
      }
    ],
    "authorsList": "Damianos Gavalas, Daphne Economou",
    "citation": "Damianos Gavalas, Daphne Economou, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.155\">Development Platforms for Mobile Applications: Status and Trends</a>, IEEE Software 2010, no. 1, p. 77",
    "searchText": ""
  },
  {
    "quote": "<b>Usability</b> has a significant impact on the success of software-centric systems and products. It relates to the actual usage of a system, but also to its effective design and development. Ultimately, failing to <b>build usable software</b> may degrade a project's ability to deliver in time, budget, functionality, and quality.",
    "title": "Unusable Software Is Useless, Part 1",
    "year": 2011,
    "number": 1,
    "page": 92,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2011.19",
    "selected": false,
    "authors": [
      {
        "name": "Frank Buschmann",
        "link": ""
      }
    ],
    "authorsList": "Frank Buschmann",
    "citation": "Frank Buschmann, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2011.19\">Unusable Software Is Useless, Part 1</a>, IEEE Software 2011, no. 1, p. 92",
    "searchText": ""
  },
  {
    "quote": "Techniques for <b>requirements acquisition</b> must find new ways to gather information about <b>brands</b> and <b>emotional responses</b> to them. Consumers will also likely have new types of service requirements that must be captured, documented, and easily traceable via new multidisciplinary techniques. ... use <b>storyboards</b> to capture the interplay between <b>human interaction</b> and <b>service design</b> and so improve the quality of <b>service design</b> delivery.",
    "title": "Storyboarding Requirements",
    "year": 2010,
    "number": 6,
    "page": 9,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.147",
    "selected": false,
    "authors": [
      {
        "name": "Malcolm Sutherland",
        "link": ""
      },
      {
        "name": "Neil Maiden",
        "link": ""
      }
    ],
    "authorsList": "Malcolm Sutherland, Neil Maiden",
    "citation": "Malcolm Sutherland, Neil Maiden, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.147\">Storyboarding Requirements</a>, IEEE Software 2010, no. 6, p. 9",
    "searchText": ""
  },
  {
    "quote": "It has long been recognized that one of the key <b>benefits of architecting</b> our systems is <b>managing their complexity</b>. This complexity arises from <b>many factors</b>: the needs and constraints of the multitude of <b>system stakeholders</b> ... the <b>political</b>, <b>social</b>, and other factors from the <b>environment</b> in which the system is embedded; the realities and constraints of the system's <b>development</b>, <b>implementation</b>, <b>maintenance</b>, and <b>operation</b> in relation to available resources; and, of course, the intended properties of the system itself. Taken together, these diverse interests are a system's <b>stakeholder concerns</b>. ",
    "title": "Guest Editors' Introduction: Software Architecture: Framing Stakeholders' Concerns",
    "year": 2010,
    "number": 6,
    "page": 20,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.142",
    "selected": false,
    "authors": [
      {
        "name": "Rich Hilliard",
        "link": ""
      },
      {
        "name": "Paris Avgeriou",
        "link": ""
      },
      {
        "name": "Patricia Lago",
        "link": ""
      }
    ],
    "authorsList": "Rich Hilliard, Paris Avgeriou, Patricia Lago",
    "citation": "Rich Hilliard, Paris Avgeriou, Patricia Lago, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.142\">Guest Editors' Introduction: Software Architecture: Framing Stakeholders' Concerns</a>, IEEE Software 2010, no. 6, p. 20",
    "searchText": ""
  },
  {
    "quote": "Architectures come about through forces and needs other than those captured in traditional requirements documents. <b>A business goal</b> expresses <b>why</b> a system is being developed and what stakeholders in the developing organization, the customer organization, and beyond aspire to achieve through its production and use.",
    "title": "The Business Goals Viewpoint",
    "year": 2010,
    "number": 6,
    "page": 38,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.116",
    "selected": false,
    "authors": [
      {
        "name": "Len Bass",
        "link": ""
      },
      {
        "name": "Paul Clements",
        "link": ""
      }
    ],
    "authorsList": "Len Bass, Paul Clements",
    "citation": "Len Bass, Paul Clements, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.116\">The Business Goals Viewpoint</a>, IEEE Software 2010, no. 6, p. 38",
    "searchText": ""
  },
  {
    "quote": "<b>Small to medium enterprises</b> (SMEs) increasingly participate in <b>offshore software development</b>. Key competitive SME abilities include <b>detecting market niches</b> and deploying highly flexible software development approaches. Therefore, learning how offshoring affects such capabilities, which are closely related to organizational learning, is crucial.",
    "title": "Operational and Strategic Learning in Global Software Development",
    "year": 2009,
    "number": 6,
    "page": 58,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.113",
    "selected": false,
    "authors": [
      {
        "name": "Volker Wulf",
        "link": ""
      },
      {
        "name": "Alexander Boden",
        "link": ""
      },
      {
        "name": "Bernhard Nett",
        "link": ""
      }
    ],
    "authorsList": "Volker Wulf, Alexander Boden, Bernhard Nett",
    "citation": "Volker Wulf, Alexander Boden, Bernhard Nett, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.113\">Operational and Strategic Learning in Global Software Development</a>, IEEE Software 2009, no. 6, p. 58",
    "searchText": ""
  },
  {
    "quote": "The <b>initial presentation</b> of <b>new open source software projects</b> plays a potentially critical role in <b>attracting developers</b>.",
    "title": "Managing First Impressions of New Open Source Software Projects",
    "year": 2010,
    "number": 6,
    "page": 73,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.26",
    "selected": false,
    "authors": [
      {
        "name": "Namjoo Choi",
        "link": ""
      },
      {
        "name": "Indushobha Chengalur-Smith",
        "link": ""
      },
      {
        "name": "Andrew Whitmore",
        "link": ""
      }
    ],
    "authorsList": "Namjoo Choi, Indushobha Chengalur-Smith, Andrew Whitmore",
    "citation": "Namjoo Choi, Indushobha Chengalur-Smith, Andrew Whitmore, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.26\">Managing First Impressions of New Open Source Software Projects</a>, IEEE Software 2010, no. 6, p. 73",
    "searchText": ""
  },
  {
    "quote": "The <b>architecture</b> of a software-intensive system is best <b>reasoned</b> about through multiple, nearly <b>independent views.</b>",
    "title": "The Elephant and the Blind Programmers",
    "year": 2010,
    "number": 6,
    "page": 87,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.149",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.149\">The Elephant and the Blind Programmers</a>, IEEE Software 2010, no. 6, p. 87",
    "searchText": ""
  },
  {
    "quote": "The top questions were Agile and <b>large projects</b>. What factors can <b>break self-organization</b>? Do teams really need to always be <b>collocated</b> to collaborate effectively? <b>Architecture and agile</b>—how much design is enough for different classes of problem? Hard facts on <b>costs of distribution</b> (in $, £, €, and so on). The correlation between <b>release length</b> and <b>success rate</b>. <b>What metrics</b> can we use with minimal <b>side-effects</b>? Distributed agile and <b>trust</b>—what happens around 8–12 weeks? Statistics and data about how much <b>money/time is saved</b> by agile. <b>Sociological studies</b>—what were the personalities in successful/failed agile teams?",
    "title": "The Top 10 Burning Research Questions from Practitioners",
    "year": 2010,
    "number": 5,
    "page": 8,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.129",
    "selected": false,
    "authors": [
      {
        "name": "Helen Sharp",
        "link": ""
      },
      {
        "name": "Sallyann Freudenberg",
        "link": ""
      }
    ],
    "authorsList": "Helen Sharp, Sallyann Freudenberg",
    "citation": "Helen Sharp, Sallyann Freudenberg, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.129\">The Top 10 Burning Research Questions from Practitioners</a>, IEEE Software 2010, no. 5, p. 8",
    "searchText": ""
  },
  {
    "quote": "A collection of <b>coherent</b>, often <b>ideologically</b> or <b>theoretically</b> based <b>abstractions</b> constitutes a <b>programming paradigm</b>. ... Well-known examples include <b>object-oriented</b>, <b>relational</b>, <b>functional</b>, <b>constraint-based</b>, <b>theorem-proving</b>, <b>concurrent</b>, <b>imperative</b>, and <b>declarative</b>. Less well-known (or perhaps less well-defined) examples include <b>graphical</b>, <b>reflective</b>, <b>context-aware</b>, <b>rule-based</b>, and <b>agent-oriented</b>. ... using just <b>one language</b> technology and paradigm is becoming much <b>less common</b>, replaced by <b>multiparadigm programming</b> in which the heterogeneous application consists of several subcomponents, each implemented with an appropriate paradigm and able to communicate with other subcomponents implemented with a different paradigm. ",
    "title": "Guest Editors' Introduction: Multiparadigm Programming",
    "year": 2010,
    "number": 5,
    "page": 20,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.119",
    "selected": false,
    "authors": [
      {
        "name": "Dean Wampler",
        "link": ""
      },
      {
        "name": "Tony Clark",
        "link": ""
      }
    ],
    "authorsList": "Dean Wampler, Tony Clark",
    "citation": "Dean Wampler, Tony Clark, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.119\">Guest Editors' Introduction: Multiparadigm Programming</a>, IEEE Software 2010, no. 5, p. 20",
    "searchText": ""
  },
  {
    "quote": "<b>Domain-specific languages</b> (DSLs) are becoming a mature application development tool that developers use to express concerns. <b>Multi-DSL</b> applications comprise DSLs and host language code. Exploiting the <b>Ruby</b> programming language's <b>built-in support</b> for the <b>imperative</b>, <b>functional</b>, and <b>object-oriented</b> paradigm, extended with <b>feature-oriented</b> programming ...",
    "title": "Multi-DSL Applications with Ruby",
    "year": 2010,
    "number": 5,
    "page": 25,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.91",
    "selected": false,
    "authors": [
      {
        "name": "Sebastian G&#x00FC;nther",
        "link": ""
      }
    ],
    "authorsList": "Sebastian G&#x00FC;nther",
    "citation": "Sebastian G&#x00FC;nther, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.91\">Multi-DSL Applications with Ruby</a>, IEEE Software 2010, no. 5, p. 25",
    "searchText": ""
  },
  {
    "quote": "<b>Constraint programming</b> (CP) is a young but rapidly developing technology that supports the modeling and solution of a wide range of <b>planning</b>, <b>scheduling</b>, <b>search</b>, and <b>optimization</b> problems. The integration of CP concepts into languages from other paradigms yields constraint-based multiparadigm programming.",
    "title": "Constraint-Based Object-Oriented Programming",
    "year": 2010,
    "number": 5,
    "page": 53,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.89",
    "selected": false,
    "authors": [
      {
        "name": "Petra Hofstedt",
        "link": ""
      }
    ],
    "authorsList": "Petra Hofstedt",
    "citation": "Petra Hofstedt, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.89\">Constraint-Based Object-Oriented Programming</a>, IEEE Software 2010, no. 5, p. 53",
    "searchText": ""
  },
  {
    "quote": "<b>Storing data</b> the same <b>way it's used</b> in the application would simplify the programming model, making it easier to decentralize data processing and, in turn, enable horizontal scaling. Emerging <b>NoSQL</b> data-storage engines support this strategy. Just like the application layer, the data-storage layer can use multiple paradigms and store data in a way that's <b>semantically closer</b> to the corresponding domain models.",
    "title": "Multiparadigm Data Storage for Enterprise Applications",
    "year": 2010,
    "number": 5,
    "page": 57,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.87",
    "selected": false,
    "authors": [
      {
        "name": "Debasish Ghosh",
        "link": ""
      }
    ],
    "authorsList": "Debasish Ghosh",
    "citation": "Debasish Ghosh, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.87\">Multiparadigm Data Storage for Enterprise Applications</a>, IEEE Software 2010, no. 5, p. 57",
    "searchText": ""
  },
  {
    "quote": "To some, the phrase '<b>agile architecture</b>' is an <b>oxymoron</b>. ",
    "title": "An Architectural Oxymoron",
    "year": 2010,
    "number": 5,
    "page": 95,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.117",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.117\">An Architectural Oxymoron</a>, IEEE Software 2010, no. 5, p. 95",
    "searchText": ""
  },
  {
    "quote": "The <b>cloud-computing paradigm</b> is characterized by <b>transactional</b> resource <b>acquisition</b> ... <b>nonfederated</b> resource <b>provisioning</b> ... a <b>metered resource</b>.",
    "title": "Up in the Air: Moving Your Applications to the Cloud",
    "year": 2010,
    "number": 4,
    "page": 6,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.109",
    "selected": false,
    "authors": [
      {
        "name": "Panos Louridas",
        "link": ""
      }
    ],
    "authorsList": "Panos Louridas",
    "citation": "Panos Louridas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.109\">Up in the Air: Moving Your Applications to the Cloud</a>, IEEE Software 2010, no. 4, p. 6",
    "searchText": ""
  },
  {
    "quote": "<b>Evolving</b> and <b>maintaining</b> software-intensive systems is critical, and, consequently, <b>most developers</b> are involved in maintaining, incrementally enhancing, and adapting existing systems.",
    "title": "Guest Editors' Introduction: Software Evolution",
    "year": 2010,
    "number": 4,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.100",
    "selected": false,
    "authors": [
      {
        "name": "Yann-Ga&#x00EB;l Gueh&#x00E9;n&#x00E9;uc",
        "link": ""
      },
      {
        "name": "Maja D'Hondt",
        "link": ""
      },
      {
        "name": "Juan Fern&#x00E1;ndez-Ramil",
        "link": ""
      },
      {
        "name": "Tom Mens",
        "link": ""
      }
    ],
    "authorsList": "Yann-Ga&#x00EB;l Gueh&#x00E9;n&#x00E9;uc, Maja D'Hondt, Juan Fern&#x00E1;ndez-Ramil, Tom Mens",
    "citation": "Yann-Ga&#x00EB;l Gueh&#x00E9;n&#x00E9;uc, Maja D'Hondt, Juan Fern&#x00E1;ndez-Ramil, Tom Mens, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.100\">Guest Editors' Introduction: Software Evolution</a>, IEEE Software 2010, no. 4, p. 22",
    "searchText": ""
  },
  {
    "quote": "Despite growth in the popularity of desktop systems, Web applications, and mobile computing, <b>mainframe systems</b> remain the <b>dominant force</b> in large-scale enterprise computing. Although they're sometimes referred to as '<b>the dinosaurs of computing</b>,' even mainframe systems must adapt to changing circumstances to survive.",
    "title": "Reverse Engineering on the Mainframe: Lessons Learned from 'In Vivo' Research",
    "year": 2010,
    "number": 4,
    "page": 30,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.65",
    "selected": false,
    "authors": [
      {
        "name": "Serge Demeyer",
        "link": ""
      },
      {
        "name": "Joris Van Geet",
        "link": ""
      }
    ],
    "authorsList": "Serge Demeyer, Joris Van Geet",
    "citation": "Serge Demeyer, Joris Van Geet, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.65\">Reverse Engineering on the Mainframe: Lessons Learned from 'In Vivo' Research</a>, IEEE Software 2010, no. 4, p. 30",
    "searchText": ""
  },
  {
    "quote": "<b>Architecture evaluations</b> offer many benefits, including the early detection of problems and a better understanding of a system's possibilities. ... the <b>lightweight sanity check</b> for implemented architectures (LiSCIA) evaluation method ... can be used out of the box to perform a first architectural evaluation of a system. ... By <b>periodically performing</b> this check, developers and project managers can <b>control</b> the implemented <b>architecture's erosion</b> as the system (and its requirements) evolves over time.",
    "title": "A Lightweight Sanity Check for Implemented Architectures",
    "year": 2010,
    "number": 4,
    "page": 44,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.60",
    "selected": false,
    "authors": [
      {
        "name": "Eric Bouwers",
        "link": ""
      },
      {
        "name": "Arie van Deursen",
        "link": ""
      }
    ],
    "authorsList": "Eric Bouwers, Arie van Deursen",
    "citation": "Eric Bouwers, Arie van Deursen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.60\">A Lightweight Sanity Check for Implemented Architectures</a>, IEEE Software 2010, no. 4, p. 44",
    "searchText": ""
  },
  {
    "quote": "Although <b>lessons-learned activities</b> aid software process improvement, <b>few</b> IT industry <b>organizations</b> regularly and adequately <b>conduct them</b>.",
    "title": "Appreciating Lessons Learned",
    "year": 2009,
    "number": 4,
    "page": 72,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.198",
    "selected": false,
    "authors": [
      {
        "name": "Anders Baaz",
        "link": ""
      },
      {
        "name": "Anna Sandberg",
        "link": ""
      },
      {
        "name": "Agneta Nilsson",
        "link": ""
      },
      {
        "name": "Lena Holmberg",
        "link": ""
      },
      {
        "name": "Helena Olsson",
        "link": ""
      }
    ],
    "authorsList": "Anders Baaz, Anna Sandberg, Agneta Nilsson, Lena Holmberg, Helena Olsson",
    "citation": "Anders Baaz, Anna Sandberg, Agneta Nilsson, Lena Holmberg, Helena Olsson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.198\">Appreciating Lessons Learned</a>, IEEE Software 2009, no. 4, p. 72",
    "searchText": ""
  },
  {
    "quote": "<b>Software</b> is key to commercial <b>magnetic resonance imaging (MRI)</b> scanners, the medical devices that make images of the living human body for clinical purposes.",
    "title": "Software in MRI Scanners",
    "year": 2010,
    "number": 4,
    "page": 87,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.106",
    "selected": false,
    "authors": [
      {
        "name": "Joop van der Linden",
        "link": ""
      },
      {
        "name": "Lennart Hofland",
        "link": ""
      }
    ],
    "authorsList": "Joop van der Linden, Lennart Hofland",
    "citation": "Joop van der Linden, Lennart Hofland, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.106\">Software in MRI Scanners</a>, IEEE Software 2010, no. 4, p. 87",
    "searchText": ""
  },
  {
    "quote": "All complex <b>systems fail</b>, by some measure of the word 'fail,' with consequences ranging from <b>benign</b> to <b>catastrophic</b>.",
    "title": "Systems Architecture",
    "year": 2010,
    "number": 4,
    "page": 95,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.107",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.107\">Systems Architecture</a>, IEEE Software 2010, no. 4, p. 95",
    "searchText": ""
  },
  {
    "quote": "<b>Web 2.0</b> is less a <b>new technology</b> than a <b>new way of using technology</b>.",
    "title": "Web 2.0 for Practitioners",
    "year": 2010,
    "number": 3,
    "page": 11,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.84",
    "selected": false,
    "authors": [
      {
        "name": "Jos&#x00E9; Manuel Torres",
        "link": ""
      },
      {
        "name": "Nicol&#x00E1;s Serrano",
        "link": ""
      }
    ],
    "authorsList": "Jos&#x00E9; Manuel Torres, Nicol&#x00E1;s Serrano",
    "citation": "Jos&#x00E9; Manuel Torres, Nicol&#x00E1;s Serrano, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.84\">Web 2.0 for Practitioners</a>, IEEE Software 2010, no. 3, p. 11",
    "searchText": ""
  },
  {
    "quote": "Using <b>software product lines</b> to create a shared set of features can increase productivity and reduce costs for organizations. Successful software product lines share certain <b>commonalities</b> but also differ in certain ways, depending on diverse aspects of the products and the product lines themselves.",
    "title": "Guest Editors' Introduction: Successful Software Product Line Practices",
    "year": 2010,
    "number": 3,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.74",
    "selected": false,
    "authors": [
      {
        "name": "Kentaro Yoshimura",
        "link": ""
      },
      {
        "name": "Paul Jensen",
        "link": ""
      },
      {
        "name": "Dirk Muthig",
        "link": ""
      },
      {
        "name": "John D. McGregor",
        "link": ""
      }
    ],
    "authorsList": "Kentaro Yoshimura, Paul Jensen, Dirk Muthig, John D. McGregor",
    "citation": "Kentaro Yoshimura, Paul Jensen, Dirk Muthig, John D. McGregor, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.74\">Guest Editors' Introduction: Successful Software Product Line Practices</a>, IEEE Software 2010, no. 3, p. 16",
    "searchText": ""
  },
  {
    "quote": "[W]e characterize two <b>strategic pitfalls</b> that repeatedly occur: failure to recognize that a software product line approach is <b>a business and technical strategy</b>, and failure to <b>manage the unique aspects</b> of governance for a product line and roll it out appropriately.",
    "title": "Clearing the Way for Software Product Line Success",
    "year": 2010,
    "number": 3,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.71",
    "selected": false,
    "authors": [
      {
        "name": "Linda M. Northrop",
        "link": ""
      },
      {
        "name": "Lawrence G. Jones",
        "link": ""
      }
    ],
    "authorsList": "Linda M. Northrop, Lawrence G. Jones",
    "citation": "Linda M. Northrop, Lawrence G. Jones, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.71\">Clearing the Way for Software Product Line Success</a>, IEEE Software 2010, no. 3, p. 22",
    "searchText": ""
  },
  {
    "quote": "<b>[S]uccessful product lines</b> suffer over time from <b>increasing dependencies</b> between the software assets that make up the product line and, consequently, the teams associated with these assets. This results in high <b>coordination cost</b>, <b>slow release</b> cycles, and high system-level <b>error density</b>.",
    "title": "Toward Compositional Software Product Lines",
    "year": 2010,
    "number": 3,
    "page": 29,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.32",
    "selected": false,
    "authors": [
      {
        "name": "Jan Bosch",
        "link": ""
      }
    ],
    "authorsList": "Jan Bosch",
    "citation": "Jan Bosch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.32\">Toward Compositional Software Product Lines</a>, IEEE Software 2010, no. 3, p. 29",
    "searchText": ""
  },
  {
    "quote": "<b>Product line scoping</b> is the process of determining which of an organization's products, features, and domains would find <b>systematic reuse</b> economically useful.",
    "title": "Using Documentation for Product Line Scoping",
    "year": 2010,
    "number": 3,
    "page": 42,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.34",
    "selected": false,
    "authors": [
      {
        "name": "Isabel John",
        "link": ""
      }
    ],
    "authorsList": "Isabel John",
    "citation": "Isabel John, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.34\">Using Documentation for Product Line Scoping</a>, IEEE Software 2010, no. 3, p. 42",
    "searchText": ""
  },
  {
    "quote": "<b>JavaScript</b> is often seen as a <b>toy language</b>. Yet, it offers a <b>powerful mix</b> of interesting <b>language features</b> based on <b>functional programming</b>, <b>prototyping</b>, and <b>mutable objects</b>. <b>Web 2.0</b> apps use JavaScript extensively to realize sophisticated client-side functionality. Taken this into account, it isn't surprising that JavaScript made it to the <b>top 10</b> in a survey on the most popular programming languages. ",
    "title": "It's About Time to Take JavaScript (More) Seriously",
    "year": 2010,
    "number": 3,
    "page": 60,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.76",
    "selected": false,
    "authors": [
      {
        "name": "Holger M. Kienle",
        "link": ""
      }
    ],
    "authorsList": "Holger M. Kienle",
    "citation": "Holger M. Kienle, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.76\">It's About Time to Take JavaScript (More) Seriously</a>, IEEE Software 2010, no. 3, p. 60",
    "searchText": ""
  },
  {
    "quote": "What are the top five properties that make a <b>software design elegant</b>? ... we explore ... five properties leading architects have found useful: <b>economy</b>, <b>visibility</b>, <b>spacing</b>, <b>symmetry</b>, and <b>emergence</b>.",
    "title": "Five Considerations for Software Architecture, Part 1",
    "year": 2010,
    "number": 3,
    "page": 63,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.72",
    "selected": false,
    "authors": [
      {
        "name": "Frank Buschmann",
        "link": ""
      },
      {
        "name": "Kevlin Henney",
        "link": ""
      }
    ],
    "authorsList": "Frank Buschmann, Kevlin Henney",
    "citation": "Frank Buschmann, Kevlin Henney, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.72\">Five Considerations for Software Architecture, Part 1</a>, IEEE Software 2010, no. 3, p. 63",
    "searchText": ""
  },
  {
    "quote": "An <b>architectural review</b> serves several purposes: to gain confidence in the design, to reason about alternatives, to attend to architectural rot. The process of such a review involves the interplay of <b>design decisions</b>, <b>scenari</b>os, and <b>forces</b> on the system.",
    "title": "Architecture Reviews",
    "year": 2010,
    "number": 3,
    "page": 95,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.68",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.68\">Architecture Reviews</a>, IEEE Software 2010, no. 3, p. 95",
    "searchText": ""
  },
  {
    "quote": "Railroad tracks offer guidance and support. There are various tools that can give our software the same handling. The main tool for guiding the code's direction is the <b>language's type system</b>. For values, the type system can help us by establishing a separate type for each distinct class; for code, interfaces and abstract classes ensure that we won't forget some crucial methods when we add functionality through a new class. With <b>domain-specific languages</b> or even suitably initialized data structures we can efficiently express exactly what the designer intended and nothing more. At a higher level, <b>architectures</b> that enforce a particular open-ended but well-defined interface will also guide a software's progress. Finally, the most flexible track-laying approach is a <b>tool-supported</b> software development process.",
    "title": "Software Tracks",
    "year": 2010,
    "number": 2,
    "page": 10,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.56",
    "selected": false,
    "authors": [
      {
        "name": "Diomidis Spinellis",
        "link": ""
      }
    ],
    "authorsList": "Diomidis Spinellis",
    "citation": "Diomidis Spinellis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.56\">Software Tracks</a>, IEEE Software 2010, no. 2, p. 10",
    "searchText": ""
  },
  {
    "quote": "<b>Providing architecture</b> as a <b>service to application developers</b>. The approach is an effective way to implement the architecture process especially, but not only, in the context of agile development. In their role as stakeholders of nonfunctional system qualities, architects prepare and support developers by <b>participating</b> in <b>coding activities</b> and play a key role in <b>communicating</b> the architecture throughout the project's lifetime.",
    "title": "Architects as Service Providers",
    "year": 2010,
    "number": 2,
    "page": 33,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.25",
    "selected": false,
    "authors": [
      {
        "name": "Roland Faber",
        "link": ""
      }
    ],
    "authorsList": "Roland Faber",
    "citation": "Roland Faber, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.25\">Architects as Service Providers</a>, IEEE Software 2010, no. 2, p. 33",
    "searchText": ""
  },
  {
    "quote": "<b>Agile development</b> delivers value quickly, using a series of short-term goals based on <b>immediate priorities</b>. <b>Architecture</b> grows value carefully, using a set of long-term objectives based on fundamental principles. The two seem at odds, but the architect can bring them together at four well-defined points in agile projects: during <b>project initiation</b> by setting architectural direction, through <b>storyboarding</b> by introducing specific architectural tasks, within sprints by close <b>collaboration on challenging issues</b>, and as working software gets delivered by performing <b>direct inspection</b>.",
    "title": "Agile Architecture Interactions",
    "year": 2010,
    "number": 2,
    "page": 41,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.27",
    "selected": false,
    "authors": [
      {
        "name": "James Madison",
        "link": ""
      }
    ],
    "authorsList": "James Madison",
    "citation": "James Madison, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.27\">Agile Architecture Interactions</a>, IEEE Software 2010, no. 2, p. 41",
    "searchText": ""
  },
  {
    "quote": "<b>Design tactics</b> are a methodology architects can use to master this challenge: choosing design solutions that are <b>simple</b>, <b>economic</b>, and <b>appropriate</b> for resolving the problems at hand.",
    "title": "Learning from Failure, Part III: On Hammers and Nails, and Falling in Love with Technology and Design",
    "year": 2010,
    "number": 2,
    "page": 49,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.47",
    "selected": false,
    "authors": [
      {
        "name": "Frank Buschmann",
        "link": ""
      }
    ],
    "authorsList": "Frank Buschmann",
    "citation": "Frank Buschmann, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.47\">Learning from Failure, Part III: On Hammers and Nails, and Falling in Love with Technology and Design</a>, IEEE Software 2010, no. 2, p. 49",
    "searchText": ""
  },
  {
    "quote": "<b>Enterprise architecture</b> and <b>technical architecture</b> are related yet <b>different</b>: whereas EA focuses on the architecture of a <b>business</b> that uses <b>software-intensive systems</b>, TA focuses on the architecture of the <b>software-intensive systems</b> that are used by a business to makes its mission manifest.",
    "title": "Enterprise Architecture and Technical Architecture",
    "year": 2010,
    "number": 2,
    "page": 95,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.42",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.42\">Enterprise Architecture and Technical Architecture</a>, IEEE Software 2010, no. 2, p. 95",
    "searchText": ""
  },
  {
    "quote": "The <b>software project management</b> body of knowledge is gradually being renewed across the entire lifecycle. In the <b>conception phase</b>, the focus is on <b>fostering innovation</b> through new approaches such as business analysis and crowdsourcing techniques. In the <b>construction phase</b>, the rise of <b>global software development</b> has shrunk the world and led to new approaches to risk management that take into account factors such as cultural diversity. In the <b>project conclusion</b> phase, new approaches to the evaluation of project success are being introduced, such as project <b>retrospectives</b> and <b>intellectual capital reporting</b>.",
    "title": "Guest Editor's Introduction: Renewing the Software Project Management Life Cycle",
    "year": 2010,
    "number": 1,
    "page": 17,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.9",
    "selected": false,
    "authors": [
      {
        "name": "John Favaro",
        "link": ""
      }
    ],
    "authorsList": "John Favaro",
    "citation": "John Favaro, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.9\">Guest Editor's Introduction: Renewing the Software Project Management Life Cycle</a>, IEEE Software 2010, no. 1, p. 17",
    "searchText": ""
  },
  {
    "quote": "Today, many software projects are <b>geographically distributed</b>, so software managers must know how to manage <b>distributed teams</b>. For example, they need to know how to build teams across sites, how to break down and distribute tasks, how to share knowledge across time, space, and cultural differences, and how to coordinate work to produce coherent outcomes.",
    "title": "A Process for Managing Risks in Distributed Teams",
    "year": 2009,
    "number": 1,
    "page": 20,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.157",
    "selected": false,
    "authors": [
      {
        "name": "Lars Mathiassen",
        "link": ""
      },
      {
        "name": "John Stouby Persson",
        "link": ""
      }
    ],
    "authorsList": "Lars Mathiassen, John Stouby Persson",
    "citation": "Lars Mathiassen, John Stouby Persson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.157\">A Process for Managing Risks in Distributed Teams</a>, IEEE Software 2009, no. 1, p. 20",
    "searchText": ""
  },
  {
    "quote": "In 1994, <b>Standish</b> published <b>the Chaos report</b> that showed a shocking 16 percent project success. This and renewed figures by Standish are often used to indicate that project management of application software development is in trouble. However, <b>Standish's definitions</b> have four <b>major problems</b>. First, they're <b>misleading</b> because they're based solely on estimation accuracy of cost, time, and functionality. Second, their estimation accuracy measure is <b>one-sided</b>, leading to unrealistic success rates. Third, <b>steering</b> on their definitions <b>perverts good estimation</b> practice. Fourth, the resulting figures are <b>meaningless</b> because they <b>average</b> numbers with an <b>unknown bias</b>, numbers that are introduced by <b>different underlying estimation</b> processes.",
    "title": "The Rise and Fall of the Chaos Report Figures",
    "year": 2009,
    "number": 1,
    "page": 30,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.154",
    "selected": false,
    "authors": [
      {
        "name": "Chris Verhoef",
        "link": ""
      },
      {
        "name": "J. Laurenz Eveleens",
        "link": ""
      }
    ],
    "authorsList": "Chris Verhoef, J. Laurenz Eveleens",
    "citation": "Chris Verhoef, J. Laurenz Eveleens, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.154\">The Rise and Fall of the Chaos Report Figures</a>, IEEE Software 2009, no. 1, p. 30",
    "searchText": ""
  },
  {
    "quote": "As <b>software's impact</b> and influence grows, so do the <b>possibilities for innovation</b> and increasing the competitive advantage through software.",
    "title": "A Lightweight Innovation Process for Software-Intensive Product Development",
    "year": 2009,
    "number": 1,
    "page": 37,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.164",
    "selected": false,
    "authors": [
      {
        "name": "Steven Kunsman",
        "link": ""
      },
      {
        "name": "Samuel Fricker",
        "link": ""
      },
      {
        "name": "Kenneth Palm",
        "link": ""
      },
      {
        "name": "Tony Gorschek",
        "link": ""
      }
    ],
    "authorsList": "Steven Kunsman, Samuel Fricker, Kenneth Palm, Tony Gorschek",
    "citation": "Steven Kunsman, Samuel Fricker, Kenneth Palm, Tony Gorschek, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.164\">A Lightweight Innovation Process for Software-Intensive Product Development</a>, IEEE Software 2009, no. 1, p. 37",
    "searchText": ""
  },
  {
    "quote": "If you're <b>successful</b>, stakeholders will <b>trust you</b>. However, <b>too much trust</b> can be <b>dangerous</b>. Stakeholders can become <b>overdependent</b> on your guidance, especially if they <b>lack the knowledge</b> to specify requirements for the new system. ",
    "title": "Trust Me, I'm an Analyst",
    "year": 2010,
    "number": 1,
    "page": 46,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.22",
    "selected": false,
    "authors": [
      {
        "name": "Neil Maiden",
        "link": ""
      }
    ],
    "authorsList": "Neil Maiden",
    "citation": "Neil Maiden, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.22\">Trust Me, I'm an Analyst</a>, IEEE Software 2010, no. 1, p. 46",
    "searchText": ""
  },
  {
    "quote": "The drive to rapidly develop layered, interconnected, and flexible systems has eclipsed consideration of resource costs. Consequently, <b>large Java applications</b> suffer from <b>runtime bloat</b>: a large and pervasive <b>infrastructure tax</b>, where simple transactions require a few hundred thousand method calls, and a server with 1 Gbyte of memory sometimes can only support a few hundred users.",
    "title": "Four Trends Leading to Java Runtime Bloat",
    "year": 2010,
    "number": 1,
    "page": 56,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.7",
    "selected": false,
    "authors": [
      {
        "name": "Edith Schonberg",
        "link": ""
      },
      {
        "name": "Nick Mitchell",
        "link": ""
      },
      {
        "name": "Gary Sevitsky",
        "link": ""
      }
    ],
    "authorsList": "Edith Schonberg, Nick Mitchell, Gary Sevitsky",
    "citation": "Edith Schonberg, Nick Mitchell, Gary Sevitsky, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.7\">Four Trends Leading to Java Runtime Bloat</a>, IEEE Software 2010, no. 1, p. 56",
    "searchText": ""
  },
  {
    "quote": "Developers should <b>factor rework into sizing</b> and productivity calculations when estimating software effort. <b>Reworked code</b> is software created during development that <b>doesn't exist</b> in the <b>final build</b>. Using lines of code as a sizing metric is helpful when estimating projects with similar domains, platforms, processes, development teams, and coding constraints.",
    "title": "Using a Line-of-Code Metric to Understand Software Rework",
    "year": 2009,
    "number": 1,
    "page": 72,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.160",
    "selected": false,
    "authors": [
      {
        "name": "Edmund Morozoff",
        "link": ""
      }
    ],
    "authorsList": "Edmund Morozoff",
    "citation": "Edmund Morozoff, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.160\">Using a Line-of-Code Metric to Understand Software Rework</a>, IEEE Software 2009, no. 1, p. 72",
    "searchText": ""
  },
  {
    "quote": "Modern distributed software systems involve <b>dynamic operating conditions</b> that pose engineering challenges to traditional offline design. <b>Multiagent systems</b> engineering can solve some of these problems by offering self-adaptive features such as <b>loose coupling</b>, <b>context sensitivity</b>, and <b>robustness to failure</b>.",
    "title": "Self-Adaptation Using Multiagent Systems",
    "year": 2010,
    "number": 1,
    "page": 86,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.18",
    "selected": false,
    "authors": [
      {
        "name": "Michael Georgeff",
        "link": ""
      },
      {
        "name": "Danny Weyns",
        "link": ""
      }
    ],
    "authorsList": "Michael Georgeff, Danny Weyns",
    "citation": "Michael Georgeff, Danny Weyns, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.18\">Self-Adaptation Using Multiagent Systems</a>, IEEE Software 2010, no. 1, p. 86",
    "searchText": ""
  },
  {
    "quote": "<b>Architecture</b> is just a collective hunch, <b>a shared hallucination</b>, an assertion by a set of stakeholders on the nature of their observable world, be it a world that is or a world as they wish it to be.",
    "title": "Architecture as a Shared Hallucination",
    "year": 2010,
    "number": 1,
    "page": 95,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2010.4",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2010.4\">Architecture as a Shared Hallucination</a>, IEEE Software 2010, no. 1, p. 95",
    "searchText": ""
  },
  {
    "quote": "Software developers are notorious for <b>skimping</b> on <b>design documentation</b>, often eschewing it altogether. This trend has led to claims that it is merely an <b>impediment</b> in the <b>fast-paced</b> and highly pliable world of software development - a useless vestige of <b>old-style engineering</b> that should be eliminated altogether. ... because of the <b>complexity</b> of modern software systems and the <b>cryptic nature</b> of current programming <b>languages</b>, <b>good design documentation</b> is not only useful but vital. However, we must seek ways of adapting it to suit the <b>medium</b> as well as the <b>exceptionally dynamic development</b> process.",
    "title": "Agile Documentation, Anyone?",
    "year": 2009,
    "number": 6,
    "page": 11,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.167",
    "selected": false,
    "authors": [
      {
        "name": "Bran Selic",
        "link": ""
      }
    ],
    "authorsList": "Bran Selic",
    "citation": "Bran Selic, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.167\">Agile Documentation, Anyone?</a>, IEEE Software 2009, no. 6, p. 11",
    "searchText": ""
  },
  {
    "quote": "Software is developed by people, used by people, and supports interaction among people. As such, <b>human characteristics</b> and <b>cooperation</b> are central to modern practical software construction.",
    "title": "Guest Editors' Introduction: Cooperative and Human Aspects of Software Engineering",
    "year": 2009,
    "number": 6,
    "page": 17,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.176",
    "selected": false,
    "authors": [
      {
        "name": "Janice Singer",
        "link": ""
      },
      {
        "name": "Cleidson R. B. de Souza",
        "link": ""
      },
      {
        "name": "Helen Sharp",
        "link": ""
      },
      {
        "name": "Gina Venolia",
        "link": ""
      },
      {
        "name": "Li-Te Cheng",
        "link": ""
      }
    ],
    "authorsList": "Janice Singer, Cleidson R. B. de Souza, Helen Sharp, Gina Venolia, Li-Te Cheng",
    "citation": "Janice Singer, Cleidson R. B. de Souza, Helen Sharp, Gina Venolia, Li-Te Cheng, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.176\">Guest Editors' Introduction: Cooperative and Human Aspects of Software Engineering</a>, IEEE Software 2009, no. 6, p. 17",
    "searchText": ""
  },
  {
    "quote": "In the transformation from <b>traditional command-and-control</b> management to <b>collaborative self-managing</b> teams, the main challenges were the absence of <b>redundancy and conflict</b> between team- and individual-level autonomy.",
    "title": "Overcoming Barriers to Self-Management in Software Teams",
    "year": 2009,
    "number": 6,
    "page": 20,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.182",
    "selected": false,
    "authors": [
      {
        "name": "Tore Dyb&#x00E2;",
        "link": ""
      },
      {
        "name": "Torgeir Dings&#x00F8;yr",
        "link": ""
      },
      {
        "name": "Nils Brede Moe",
        "link": ""
      }
    ],
    "authorsList": "Tore Dyb&#x00E2;, Torgeir Dings&#x00F8;yr, Nils Brede Moe",
    "citation": "Tore Dyb&#x00E2;, Torgeir Dings&#x00F8;yr, Nils Brede Moe, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.182\">Overcoming Barriers to Self-Management in Software Teams</a>, IEEE Software 2009, no. 6, p. 20",
    "searchText": ""
  },
  {
    "quote": "[D]ata showed that <b>learning resources</b> for <b>APIs</b> are critically important and shed light on three issues: the need to <b>discover</b> the <b>design</b> and <b>rationale</b> of the API when needed, the challenge of finding <b>credible</b> usage API <b>examples</b> at the right level of complexity, and the challenge of understanding <b>inexplicable</b> API <b>behavior</b>.",
    "title": "What Makes APIs Hard to Learn? Answers from Developers",
    "year": 2009,
    "number": 6,
    "page": 27,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.193",
    "selected": false,
    "authors": [
      {
        "name": "Martin P. Robillard",
        "link": ""
      }
    ],
    "authorsList": "Martin P. Robillard",
    "citation": "Martin P. Robillard, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.193\">What Makes APIs Hard to Learn? Answers from Developers</a>, IEEE Software 2009, no. 6, p. 27",
    "searchText": ""
  },
  {
    "quote": "Advice on <b>courteousness</b> and <b>politeness</b> in <b>technical communication</b> is in short supply, yet this is needed when developers communicate with other people. When discussing technical problems, aim to encourage rather than complain, focusing on technology issues rather than the people behind them. Every <b>email</b> should tackle <b>one topic</b> and that topic should be <b>the subject line</b>.",
    "title": "Basic Etiquette of Technical Communication",
    "year": 2009,
    "number": 6,
    "page": 86,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.170",
    "selected": false,
    "authors": [
      {
        "name": "Diomidis Spinellis",
        "link": ""
      }
    ],
    "authorsList": "Diomidis Spinellis",
    "citation": "Diomidis Spinellis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.170\">Basic Etiquette of Technical Communication</a>, IEEE Software 2009, no. 6, p. 86",
    "searchText": ""
  },
  {
    "quote": "<b>[P]rocess metrics</b> can ignite <b>strong opinions</b> because they represent an area where <b>technical considerations</b> bump up against <b>human aspects</b> of software development. ",
    "title": "Measuring Developers: Aligning Perspectives and Other Best Practices",
    "year": 2009,
    "number": 6,
    "page": 92,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.180",
    "selected": false,
    "authors": [
      {
        "name": "Forrest Shull",
        "link": ""
      },
      {
        "name": "Medha Umarji",
        "link": ""
      }
    ],
    "authorsList": "Forrest Shull, Medha Umarji",
    "citation": "Forrest Shull, Medha Umarji, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.180\">Measuring Developers: Aligning Perspectives and Other Best Practices</a>, IEEE Software 2009, no. 6, p. 92",
    "searchText": ""
  },
  {
    "quote": "In his final <b>Loyal Opposition</b> column for IEEE Software, <b>Robert Glass</b> points out the continued need for <b>testing academic theories</b> in practice and for practitioners to <b>discuss lessons learned</b>. He also states that <b>software estimation</b> is a <b>deeply flawed</b> activity and that software practitioners should always remain open-minded.",
    "title": "Goodbye!",
    "year": 2009,
    "number": 6,
    "page": 95,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.175",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.175\">Goodbye!</a>, IEEE Software 2009, no. 6, p. 95",
    "searchText": ""
  },
  {
    "quote": "The review results suggest that despite some limitations, <b>agile development</b> can improve <b>job satisfaction</b>, project <b>productivity</b>, and <b>customer satisfaction</b>.",
    "title": "What Do We Know about Agile Software Development?",
    "year": 2009,
    "number": 5,
    "page": 6,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.145",
    "selected": false,
    "authors": [
      {
        "name": "Tore Dyb&#x00E2;",
        "link": ""
      },
      {
        "name": "Torgeir Dings&#x00F8;yr",
        "link": ""
      }
    ],
    "authorsList": "Tore Dyb&#x00E2;, Torgeir Dings&#x00F8;yr",
    "citation": "Tore Dyb&#x00E2;, Torgeir Dings&#x00F8;yr, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.145\">What Do We Know about Agile Software Development?</a>, IEEE Software 2009, no. 5, p. 6",
    "searchText": ""
  },
  {
    "quote": "<b>Millions of people</b> program to support their work but don't call themselves programmers. The field of <b>end-user software engineering</b> is concerned with helping these people create reliable, dependable, and reusable programs, without distracting them from their primary tasks. ",
    "title": "Guest Editors' Introduction: End-User Software Engineering",
    "year": 2009,
    "number": 5,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.129",
    "selected": false,
    "authors": [
      {
        "name": "Brad A. Myers",
        "link": ""
      },
      {
        "name": "Robin Abraham",
        "link": ""
      },
      {
        "name": "Andrew J. Ko",
        "link": ""
      },
      {
        "name": "Margaret M. Burnett",
        "link": ""
      }
    ],
    "authorsList": "Brad A. Myers, Robin Abraham, Andrew J. Ko, Margaret M. Burnett",
    "citation": "Brad A. Myers, Robin Abraham, Andrew J. Ko, Margaret M. Burnett, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.129\">Guest Editors' Introduction: End-User Software Engineering</a>, IEEE Software 2009, no. 5, p. 16",
    "searchText": ""
  },
  {
    "quote": "People often <b>write code</b> to <b>prototype</b>, <b>ideate</b>, and <b>discover</b>. To do this, they <b>work opportunistically</b>, emphasizing speed and ease of development over code robustness and maintainability. Quickly hacking a program together can provide both practical and <b>learning benefits</b> for novices and experts: professional programmers and designers prototype to <b>explore and communicate</b> ideas, scientists program laboratory instruments, and entrepreneurs assemble complex spreadsheets to <b>better understand</b> their business.",
    "title": "Writing Code to Prototype, Ideate, and Discover",
    "year": 2009,
    "number": 5,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.147",
    "selected": false,
    "authors": [],
    "authorsList": "Joel Brandt, Philip J. Guo, Joel Lewenstein, and Scott R. Klemmer, Mira Dontcheva",
    "citation": "Joel Brandt, Philip J. Guo, Joel Lewenstein, and Scott R. Klemmer, Mira Dontcheva, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.147\">Writing Code to Prototype, Ideate, and Discover</a>, IEEE Software 2009, no. 5, p. 18",
    "searchText": ""
  },
  {
    "quote": "<b>Spreadsheets</b> are popular end-user programming tools. Many people use spreadsheet-computed values to make <b>critical decisions</b>, so spreadsheets must be correct. Proven software engineering principles can assist the construction and maintenance of dependable spreadsheets.",
    "title": "Software Engineering for Spreadsheets",
    "year": 2009,
    "number": 5,
    "page": 25,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.140",
    "selected": false,
    "authors": [
      {
        "name": "Martin Erwig",
        "link": ""
      }
    ],
    "authorsList": "Martin Erwig",
    "citation": "Martin Erwig, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.140\">Software Engineering for Spreadsheets</a>, IEEE Software 2009, no. 5, p. 25",
    "searchText": ""
  },
  {
    "quote": "<b>Spreadsheet technology</b> is central to the functioning of the <b>financial sector</b>, but professionally created spreadsheets have a <b>high level of error</b>, which highlights the need for innovative supporting processes and tools. The current global financial crisis will likely accelerate this need because anticipated regulation will require novel, innovative risk management methods and technologies that cover development, risk assessment, review, and other spreadsheet activities. ",
    "title": "Test-Driven Development for Spreadsheet Risk Management",
    "year": 2009,
    "number": 5,
    "page": 31,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.143",
    "selected": false,
    "authors": [
      {
        "name": "Alan Rust",
        "link": ""
      },
      {
        "name": "Kevin McDaid",
        "link": ""
      }
    ],
    "authorsList": "Alan Rust, Kevin McDaid",
    "citation": "Alan Rust, Kevin McDaid, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.143\">Test-Driven Development for Spreadsheet Risk Management</a>, IEEE Software 2009, no. 5, p. 31",
    "searchText": ""
  },
  {
    "quote": "Using <b>Selenium</b>, Web <b>acceptance-test designers</b> have a tool that programmatically reflects <b>business structure</b> much better than <b>protocol-level tools would</b>, while avoiding the pitfalls of capture-and-replay tools.",
    "title": "Web Application Tests with Selenium",
    "year": 2009,
    "number": 5,
    "page": 88,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.144",
    "selected": false,
    "authors": [
      {
        "name": "Andreas Bruns",
        "link": ""
      },
      {
        "name": "Dennis Wichmann",
        "link": ""
      },
      {
        "name": "Andreas Kornst&#x00E4;dt",
        "link": ""
      }
    ],
    "authorsList": "Andreas Bruns, Dennis Wichmann, Andreas Kornst&#x00E4;dt",
    "citation": "Andreas Bruns, Dennis Wichmann, Andreas Kornst&#x00E4;dt, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.144\">Web Application Tests with Selenium</a>, IEEE Software 2009, no. 5, p. 88",
    "searchText": ""
  },
  {
    "quote": "<b>Superprofessionalism</b> is a mode of conduct characterized by seven central traits: focus on <b>individual responsibility</b>, acute <b>awareness</b>, commitment to <b>facts</b>, <b>resilience</b> under pressure, sense of <b>fairness</b>, attention to detail in <b>perspective</b>, and <b>pragmatism</b> first.",
    "title": "The Seven Traits of Superprofessionals",
    "year": 2009,
    "number": 4,
    "page": 4,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.107",
    "selected": false,
    "authors": [
      {
        "name": "Hakan Erdogmus",
        "link": ""
      }
    ],
    "authorsList": "Hakan Erdogmus",
    "citation": "Hakan Erdogmus, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.107\">The Seven Traits of Superprofessionals</a>, IEEE Software 2009, no. 4, p. 4",
    "searchText": ""
  },
  {
    "quote": "<b>Simple architectures</b> have <b>conceptual integrity</b> and are better than more complex ones. Continuous architectural refactoring helps to converge a system to its practical and optimal simplicity.",
    "title": "The Defenestration of Superfluous Architectural Accoutrements",
    "year": 2009,
    "number": 4,
    "page": 7,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.105",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.105\">The Defenestration of Superfluous Architectural Accoutrements</a>, IEEE Software 2009, no. 4, p. 7",
    "searchText": ""
  },
  {
    "quote": "Compliance to a professional society's <b>code of ethics</b> carries obligations beyond minimum standards of behavior. Members of software engineering professional societies should also serve the <b>public interest</b> and promote the common good.",
    "title": "The Ethical Software Engineer",
    "year": 2009,
    "number": 4,
    "page": 9,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.106",
    "selected": false,
    "authors": [
      {
        "name": "Duncan Hall",
        "link": ""
      }
    ],
    "authorsList": "Duncan Hall",
    "citation": "Duncan Hall, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.106\">The Ethical Software Engineer</a>, IEEE Software 2009, no. 4, p. 9",
    "searchText": ""
  },
  {
    "quote": "A <b>framework</b> for <b>thinking about</b> domain-specific languages (<b>DSLs</b>) divides them into <b>internal DSLs</b>, <b>external DSLs</b>, and <b>language workbenches</b>. In all cases, it's important to have an explicit semantic model so that they form a veneer over an underlying library. DSLs are valuable for increasing programmer <b>productivity</b> and improving <b>communication</b> with domain experts.",
    "title": "A Pedagogical Framework for Domain-Specific Languages",
    "year": 2009,
    "number": 4,
    "page": 13,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.85",
    "selected": false,
    "authors": [
      {
        "name": "Martin Fowler",
        "link": ""
      }
    ],
    "authorsList": "Martin Fowler",
    "citation": "Martin Fowler, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.85\">A Pedagogical Framework for Domain-Specific Languages</a>, IEEE Software 2009, no. 4, p. 13",
    "searchText": ""
  },
  {
    "quote": "<b>Domain-specific techniques</b> provide a high-level specification for software systems. The technology's foundations have been developed over the last few years. However, domain-specific techniques <b>aren't a panacea</b>, and deciding whether investment in them is merited is an important step in understanding their benefits.",
    "title": "Guest Editors' Introduction: What Kinds of Nails Need a Domain-Specific Hammer?",
    "year": 2009,
    "number": 4,
    "page": 15,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.92",
    "selected": false,
    "authors": [
      {
        "name": "Jonathan Sprinkle",
        "link": ""
      },
      {
        "name": "Diomidis Spinellis",
        "link": ""
      },
      {
        "name": "Juha-Pekka Tolvanen",
        "link": ""
      },
      {
        "name": "Marjan Mernik",
        "link": ""
      }
    ],
    "authorsList": "Jonathan Sprinkle, Diomidis Spinellis, Juha-Pekka Tolvanen, Marjan Mernik",
    "citation": "Jonathan Sprinkle, Diomidis Spinellis, Juha-Pekka Tolvanen, Marjan Mernik, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.92\">Guest Editors' Introduction: What Kinds of Nails Need a Domain-Specific Hammer?</a>, IEEE Software 2009, no. 4, p. 15",
    "searchText": ""
  },
  {
    "quote": "Maintenance in software-intensive systems is critical because software often continuously evolves not only during development but also after delivery, to meet users' ever-changing needs. So, maintenance performance significantly impacts software development productivity.",
    "title": "Are Domain-Specific Models Easier to Maintain Than UML Models?",
    "year": 2009,
    "number": 4,
    "page": 19,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.87",
    "selected": false,
    "authors": [
      {
        "name": "Lan Cao",
        "link": ""
      },
      {
        "name": "Matti Rossi",
        "link": ""
      },
      {
        "name": "Balasubramaniam Ramesh",
        "link": ""
      }
    ],
    "authorsList": "Lan Cao, Matti Rossi, Balasubramaniam Ramesh",
    "citation": "Lan Cao, Matti Rossi, Balasubramaniam Ramesh, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.87\">Are Domain-Specific Models Easier to Maintain Than UML Models?</a>, IEEE Software 2009, no. 4, p. 19",
    "searchText": ""
  },
  {
    "quote": "The single largest factor that led to a <b>language not being</b> used was when organizations gave the language design task to someone with <b>insufficient experience</b> in the <b>problem domain</b>.",
    "title": "Worst Practices for Domain-Specific Modeling",
    "year": 2009,
    "number": 4,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.109",
    "selected": false,
    "authors": [
      {
        "name": "Steven Kelly",
        "link": ""
      },
      {
        "name": "Risto Pohjonen",
        "link": ""
      }
    ],
    "authorsList": "Steven Kelly, Risto Pohjonen",
    "citation": "Steven Kelly, Risto Pohjonen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.109\">Worst Practices for Domain-Specific Modeling</a>, IEEE Software 2009, no. 4, p. 22",
    "searchText": ""
  },
  {
    "quote": "<b>Reusing DSLs</b> is <b>hard</b>, however, because they're often designed to precisely describe a single domain or concern. A new approach uses techniques from <b>software product lines</b> (SPLs) to improve the reusability of a DSL, DSL composition, or supporting tool by providing traceability of language concepts to DSL design.",
    "title": "Improving Domain-Specific Language Reuse with Software Product Line Techniques",
    "year": 2009,
    "number": 4,
    "page": 47,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.95",
    "selected": false,
    "authors": [
      {
        "name": "Sumant Tambe",
        "link": ""
      },
      {
        "name": "Jules White",
        "link": ""
      },
      {
        "name": "Jeff Gray",
        "link": ""
      },
      {
        "name": "James H. Hill",
        "link": ""
      },
      {
        "name": "Aniruddha S. Gokhale",
        "link": ""
      },
      {
        "name": "Douglas C. Schmidt",
        "link": ""
      }
    ],
    "authorsList": "Sumant Tambe, Jules White, Jeff Gray, James H. Hill, Aniruddha S. Gokhale, Douglas C. Schmidt",
    "citation": "Sumant Tambe, Jules White, Jeff Gray, James H. Hill, Aniruddha S. Gokhale, Douglas C. Schmidt, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.95\">Improving Domain-Specific Language Reuse with Software Product Line Techniques</a>, IEEE Software 2009, no. 4, p. 47",
    "searchText": ""
  },
  {
    "quote": "For the past 40 years... we've <b>tortured ourselves</b> over our <b>inability</b> to finish a software project <b>on time</b> and <b>on budget</b>. But ... this <b>never</b> should have been the <b>supreme goal</b>. The <b>more important</b> goal is transformation, creating <b>software that changes the world</b> or that transforms a company or how it does business. We've been rather <b>successful at transformation</b>, often while operating outside our control envelope. Software development is and always will be somewhat <b>experimental</b>. The actual software construction isn't necessarily experimental, but its <b>conception is</b>. And this is where our focus ought to be. It's where our focus always ought to have been.",
    "title": "Software Engineering: An Idea Whose Time Has Come and Gone?",
    "year": 2009,
    "number": 4,
    "page": 95,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.101",
    "selected": false,
    "authors": [
      {
        "name": "Tom DeMarco",
        "link": ""
      }
    ],
    "authorsList": "Tom DeMarco",
    "citation": "Tom DeMarco, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.101\">Software Engineering: An Idea Whose Time Has Come and Gone?</a>, IEEE Software 2009, no. 4, p. 95",
    "searchText": ""
  },
  {
    "quote": "At the core of <b>cloud computing</b> is a simple concept: <b>software as a service</b>, or SaaS. Whether the underlying software is an <b>application</b>, application <b>component</b>, <b>platform</b>, <b>framework</b>, <b>environment</b>, or some other soft infrastructure for composing applications to be delivered as a service on the Web, it's all software in the end. But the <b>simplicity ends</b> there. Just a step away from that core, a <b>complex concoction</b> of paradigms, concepts, and technologies envelop cloud computing.",
    "title": "Cloud Computing: Does Nirvana Hide behind the Nebula?",
    "year": 2009,
    "number": 2,
    "page": 4,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.31",
    "selected": false,
    "authors": [
      {
        "name": "Hakan Erdogmus",
        "link": ""
      }
    ],
    "authorsList": "Hakan Erdogmus",
    "citation": "Hakan Erdogmus, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.31\">Cloud Computing: Does Nirvana Hide behind the Nebula?</a>, IEEE Software 2009, no. 2, p. 4",
    "searchText": ""
  },
  {
    "quote": "Given that useful knowledge in software engineering has a half-life of about five years, <b>reading</b> remains <b>an excellent way</b> to replenish this vanishing resource for the diligent software engineer.",
    "title": "You Are What You Read",
    "year": 2009,
    "number": 2,
    "page": 10,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.55",
    "selected": false,
    "authors": [
      {
        "name": "Philippe Kruchten",
        "link": ""
      }
    ],
    "authorsList": "Philippe Kruchten",
    "citation": "Philippe Kruchten, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.55\">You Are What You Read</a>, IEEE Software 2009, no. 2, p. 10",
    "searchText": ""
  },
  {
    "quote": "<b>Successful</b> software-intensive systems are generally quite <b>innovative</b>, as evidenced by their success. Although their architectures will, over time, converge to a stable point, this does not mean that innovation stops. Rather, for any such system to remain vibrant and relevant, <b>innovation must proceed</b> simultaneously at many levels.",
    "title": "The Resting Place of Innovation",
    "year": 2009,
    "number": 2,
    "page": 12,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.53",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.53\">The Resting Place of Innovation</a>, IEEE Software 2009, no. 2, p. 12",
    "searchText": ""
  },
  {
    "quote": "<b>Capturing</b> software <b>design knowledge</b> is important because it tends to evaporate as software systems evolve. This has severe consequences for many software projects. To counteract this phenomenon, effective, systematic <b>documentation</b> of design knowledge is important.",
    "title": "Guest Editor's Introduction: Capturing Design Knowledge",
    "year": 2009,
    "number": 2,
    "page": 25,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.37",
    "selected": false,
    "authors": [
      {
        "name": "Uwe Zdun",
        "link": ""
      }
    ],
    "authorsList": "Uwe Zdun",
    "citation": "Uwe Zdun, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.37\">Guest Editor's Introduction: Capturing Design Knowledge</a>, IEEE Software 2009, no. 2, p. 25",
    "searchText": ""
  },
  {
    "quote": "<b>Large software systems</b>, developed over several years, are the backbone of industries such as banking, retail, transportation, and telecommunications. With multiple bug fixes and feature enhancements, these systems gradually deviate from the intended architecture and deteriorate into <b>unmanageable monoliths</b>.",
    "title": "Modularization of a Large-Scale Business Application: A Case Study",
    "year": 2009,
    "number": 2,
    "page": 28,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.42",
    "selected": false,
    "authors": [
      {
        "name": "Madhu K. Iyengar",
        "link": ""
      },
      {
        "name": "Saravanan Sivagnanam",
        "link": ""
      },
      {
        "name": "K. Rangarajan",
        "link": ""
      },
      {
        "name": "Shubha Ramachandran",
        "link": ""
      },
      {
        "name": "G. Sathish Kumar",
        "link": ""
      },
      {
        "name": "Santonu Sarkar",
        "link": ""
      }
    ],
    "authorsList": "Madhu K. Iyengar, Saravanan Sivagnanam, K. Rangarajan, Shubha Ramachandran, G. Sathish Kumar, Santonu Sarkar",
    "citation": "Madhu K. Iyengar, Saravanan Sivagnanam, K. Rangarajan, Shubha Ramachandran, G. Sathish Kumar, Santonu Sarkar, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.42\">Modularization of a Large-Scale Business Application: A Case Study</a>, IEEE Software 2009, no. 2, p. 28",
    "searchText": ""
  },
  {
    "quote": "<b>A decision view</b> provides a useful complement to the traditional sets of architectural views and viewpoints. It gives an explanatory perspective that illuminates the <b>reasoning process</b> itself and not solely its results. The decision view documents <b>aspects</b> of the architecture that are <b>hard to reverse-engineer</b> from the software itself and that are often left tacit.",
    "title": "The Decision View's Role in Software Architecture Practice",
    "year": 2009,
    "number": 2,
    "page": 36,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.52",
    "selected": false,
    "authors": [
      {
        "name": "Philippe Kruchten",
        "link": ""
      },
      {
        "name": "Juan Carlos Due&#x00F1;as",
        "link": ""
      },
      {
        "name": "Rafael Capilla",
        "link": ""
      }
    ],
    "authorsList": "Philippe Kruchten, Juan Carlos Due&#x00F1;as, Rafael Capilla",
    "citation": "Philippe Kruchten, Juan Carlos Due&#x00F1;as, Rafael Capilla, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.52\">The Decision View's Role in Software Architecture Practice</a>, IEEE Software 2009, no. 2, p. 36",
    "searchText": ""
  },
  {
    "quote": "We rarely see the <b>traditional way</b> of software development in which one company handles design, production, sales, delivery, and service. Business models, engineering life cycles, distribution channels, and services have changed dramatically. A key driver in these new value networks is <b>open source software</b> (OSS). Worldwide companies in various industries have invested in open source. Market leaders such as Google, IBM, Microsoft, SAP, and Siemens as well as many small companies turn to OSS for multiple reasons.",
    "title": "Guest Editor's Introduction: How Open Source Tools Can Benefit Industry",
    "year": 2009,
    "number": 2,
    "page": 50,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.38",
    "selected": false,
    "authors": [
      {
        "name": "Christof Ebert",
        "link": ""
      }
    ],
    "authorsList": "Christof Ebert",
    "citation": "Christof Ebert, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.38\">Guest Editor's Introduction: How Open Source Tools Can Benefit Industry</a>, IEEE Software 2009, no. 2, p. 50",
    "searchText": ""
  },
  {
    "quote": "A <b>software forge</b> is a tool platform for <b>collaborative software development</b>, similar to integrated CASE environments. Unlike CASE tools, however, software forges have been designed for the software development practices of the <b>open source community</b>.",
    "title": "Open Collaboration within Corporations Using Software Forges",
    "year": 2009,
    "number": 2,
    "page": 52,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.44",
    "selected": false,
    "authors": [
      {
        "name": "Dirk Riehle",
        "link": ""
      },
      {
        "name": "Tamir Menahem",
        "link": ""
      },
      {
        "name": "Barak Naveh",
        "link": ""
      },
      {
        "name": "John Ellenberger",
        "link": ""
      },
      {
        "name": "Boris Mikhailovski",
        "link": ""
      },
      {
        "name": "Yuri Natchetoi",
        "link": ""
      },
      {
        "name": "Thomas Odenwald",
        "link": ""
      }
    ],
    "authorsList": "Dirk Riehle, Tamir Menahem, Barak Naveh, John Ellenberger, Boris Mikhailovski, Yuri Natchetoi, Thomas Odenwald",
    "citation": "Dirk Riehle, Tamir Menahem, Barak Naveh, John Ellenberger, Boris Mikhailovski, Yuri Natchetoi, Thomas Odenwald, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.44\">Open Collaboration within Corporations Using Software Forges</a>, IEEE Software 2009, no. 2, p. 52",
    "searchText": ""
  },
  {
    "quote": "Developing <b>complex software</b> can be difficult no matter how good designers get at architecture, tooling, or technology. Although agile techniques and practices vary, successful agile designers I know are <b>passionate about</b> producing <b>high-quality</b> incremental design solutions. ",
    "title": "Designing with an Agile Attitude",
    "year": 2009,
    "number": 2,
    "page": 68,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.32",
    "selected": false,
    "authors": [
      {
        "name": "Rebecca J. Wirfs-Brock",
        "link": ""
      }
    ],
    "authorsList": "Rebecca J. Wirfs-Brock",
    "citation": "Rebecca J. Wirfs-Brock, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.32\">Designing with an Agile Attitude</a>, IEEE Software 2009, no. 2, p. 68",
    "searchText": ""
  },
  {
    "quote": "One way to combine <b>rigor</b> and <b>relevance</b> in research might be to perform applicability checks, in which focus groups provide feedback on research projects.",
    "title": "Making Research More Relevant While Not Diminishing Its Rigor",
    "year": 2009,
    "number": 2,
    "page": 95,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.40",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.40\">Making Research More Relevant While Not Diminishing Its Rigor</a>, IEEE Software 2009, no. 2, p. 95",
    "searchText": ""
  },
  {
    "quote": "Few software practices are as important as testing, and <b>testing techniques</b> are amenable to measurement and reasoning about their effectiveness. Because they're aimed at <b>removing faults</b>, measuring the number and type of such removed faults seems like a natural part of applying these techniques.",
    "title": "A Look at 25 Years of Data",
    "year": 2009,
    "number": 1,
    "page": 15,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.2",
    "selected": false,
    "authors": [
      {
        "name": "Ana Moreno",
        "link": ""
      },
      {
        "name": "Sira Vegas",
        "link": ""
      },
      {
        "name": "Natalia Juristo",
        "link": ""
      },
      {
        "name": "Forrest Shull",
        "link": ""
      }
    ],
    "authorsList": "Ana Moreno, Sira Vegas, Natalia Juristo, Forrest Shull",
    "citation": "Ana Moreno, Sira Vegas, Natalia Juristo, Forrest Shull, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.2\">A Look at 25 Years of Data</a>, IEEE Software 2009, no. 1, p. 15",
    "searchText": ""
  },
  {
    "quote": "Becoming a <b>better designer</b> means getting better at what we do now while not getting lulled into accepting the status quo. To stay effective as designers, we need to <b>continue</b> to <b>learn</b>, <b>adapt</b>, keep an <b>open mind</b>, and work to <b>perfect our craft</b>.",
    "title": "Designing in the Future",
    "year": 2009,
    "number": 1,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.7",
    "selected": false,
    "authors": [
      {
        "name": "Rebecca J. Wirfs-Brock",
        "link": ""
      }
    ],
    "authorsList": "Rebecca J. Wirfs-Brock",
    "citation": "Rebecca J. Wirfs-Brock, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.7\">Designing in the Future</a>, IEEE Software 2009, no. 1, p. 18",
    "searchText": ""
  },
  {
    "quote": "Modern programming environments automatically collect lots of data on software development, notably changes and defects. The field of <b>mining software archives</b> is concerned with the <b>automated extraction</b>, <b>collection</b>, and <b>abstraction</b> of information from this data.",
    "title": "Guest Editors' Introduction: Mining Software Archives",
    "year": 2009,
    "number": 1,
    "page": 24,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.14",
    "selected": false,
    "authors": [
      {
        "name": "Andreas Zeller",
        "link": ""
      },
      {
        "name": "Nachiappan Nagappan",
        "link": ""
      },
      {
        "name": "Thomas Zimmermann",
        "link": ""
      }
    ],
    "authorsList": "Andreas Zeller, Nachiappan Nagappan, Thomas Zimmermann",
    "citation": "Andreas Zeller, Nachiappan Nagappan, Thomas Zimmermann, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.14\">Guest Editors' Introduction: Mining Software Archives</a>, IEEE Software 2009, no. 1, p. 24",
    "searchText": ""
  },
  {
    "quote": "<b>Software archives</b> such as source code <b>version-control systems</b> and <b>issue-tracking systems</b> (for bugs and change requests) are rich sources to examine what changes have what impact on the software.",
    "title": "Change Analysis with Evolizer and ChangeDistiller",
    "year": 2009,
    "number": 1,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.6",
    "selected": false,
    "authors": [
      {
        "name": "Harald C. Gall",
        "link": ""
      },
      {
        "name": "Martin Pinzger",
        "link": ""
      },
      {
        "name": "Beat Fluri",
        "link": ""
      }
    ],
    "authorsList": "Harald C. Gall, Martin Pinzger, Beat Fluri",
    "citation": "Harald C. Gall, Martin Pinzger, Beat Fluri, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.6\">Change Analysis with Evolizer and ChangeDistiller</a>, IEEE Software 2009, no. 1, p. 26",
    "searchText": ""
  },
  {
    "quote": "Mining software repositories using <b>analytics-driven dashboards</b> provides a <b>unifying mechanism</b> for <b>understanding</b>, <b>evaluating</b>, and <b>predicting</b> the development, management, and economics of large-scale systems and processes. Dashboards enable <b>measurement</b> and <b>interactive graphical displays</b> of complex information and support flexible analytic capabilities for user customizability and extensibility.",
    "title": "Analytics-Driven Dashboards Enable Leading Indicators for Requirements and Designs of Large-Scale Systems",
    "year": 2009,
    "number": 1,
    "page": 41,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.4",
    "selected": false,
    "authors": [
      {
        "name": "Richard W. Selby",
        "link": ""
      }
    ],
    "authorsList": "Richard W. Selby",
    "citation": "Richard W. Selby, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.4\">Analytics-Driven Dashboards Enable Leading Indicators for Requirements and Designs of Large-Scale Systems</a>, IEEE Software 2009, no. 1, p. 41",
    "searchText": ""
  },
  {
    "quote": "<b>Software-intensive systems</b>, like bridges and societies, are subject to <b>collapse</b>. Collapse isn't necessarily inevitable, however, but avoiding it requires active, vigorous, and intentional intervention by the system's architects.",
    "title": "Not with a Bang",
    "year": 2009,
    "number": 1,
    "page": 74,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.18",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.18\">Not with a Bang</a>, IEEE Software 2009, no. 1, p. 74",
    "searchText": ""
  },
  {
    "quote": "<b>Usability</b> is a growing issue for developers of <b>scientific software</b>. Scientists seeking software to support scientific discovery and funding bodies seeking better <b>return on investment</b> increase the pressure to produce scientific software that has an impact beyond a limited set of users (that is, scientists in a single lab).",
    "title": "Usability and User-Centered Design in Scientific Software Development",
    "year": 2009,
    "number": 1,
    "page": 96,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2009.27",
    "selected": false,
    "authors": [
      {
        "name": "Jason R. Swedlow",
        "link": ""
      },
      {
        "name": "David Sloan",
        "link": ""
      },
      {
        "name": "Peter Gregor",
        "link": ""
      },
      {
        "name": "Xinyi Jiang",
        "link": ""
      },
      {
        "name": "Catriona Macaulay",
        "link": ""
      },
      {
        "name": "Paula Forbes",
        "link": ""
      },
      {
        "name": "Scott Loynton",
        "link": ""
      }
    ],
    "authorsList": "Jason R. Swedlow, David Sloan, Peter Gregor, Xinyi Jiang, Catriona Macaulay, Paula Forbes, Scott Loynton",
    "citation": "Jason R. Swedlow, David Sloan, Peter Gregor, Xinyi Jiang, Catriona Macaulay, Paula Forbes, Scott Loynton, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2009.27\">Usability and User-Centered Design in Scientific Software Development</a>, IEEE Software 2009, no. 1, p. 96",
    "searchText": ""
  },
  {
    "quote": "In the world of <b>user-centered design</b> thinking, <b>Alan Cooper</b> is responsible for many of the tenets used in <b>interaction design practice</b> today. Most notably, he introduced the use of <b>personas</b> to distill and make relevant information about a system's users, information we subsequently use to drive interaction design.",
    "title": "A Conversation with Alan Cooper: The Origin of Interaction Design",
    "year": 2008,
    "number": 6,
    "page": 15,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.142",
    "selected": false,
    "authors": [
      {
        "name": "Jeff Patton",
        "link": ""
      }
    ],
    "authorsList": "Jeff Patton",
    "citation": "Jeff Patton, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.142\">A Conversation with Alan Cooper: The Origin of Interaction Design</a>, IEEE Software 2008, no. 6, p. 15",
    "searchText": ""
  },
  {
    "quote": "Over the <b>past 25 years</b>, we've made <b>great advances</b> in tooling, technologies, and techniques that make software <b>design</b> more concrete. But <b>design</b> still <b>requires careful thought</b>.",
    "title": "Back to the Future",
    "year": 2008,
    "number": 6,
    "page": 20,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.144",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.144\">Back to the Future</a>, IEEE Software 2008, no. 6, p. 20",
    "searchText": ""
  },
  {
    "quote": "[M]any major <b>technology breakthroughs</b> happened <b>before 1984</b>: Milestones such as the <b>IBM OS/360</b> and <b>the microprocessor</b>, and even many still-relevant software engineering practices, had been developed much earlier. So what makes the recent 25 years unique? First, software <b>moved</b> from a few company desks to the lives of practically <b>everyone on the planet</b>. The <b>PC</b>, the <b>Internet</b>, and <b>mobile phones</b> showcase this tremendous evolution. Second, empirical evaluations overcame opinions. Mary Shaw described the eighties by stating, 'Software engineering is not yet a true discipline, but it has the potential to become one.' In those early days, a lot of technologies were just assembled and delivered, but from the '80s onward, engineers evaluated and empirically assessed new technologies to <b>judge their impact</b>.",
    "title": "A Brief History of Software Technology",
    "year": 2008,
    "number": 6,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.141",
    "selected": false,
    "authors": [
      {
        "name": "Christof Ebert",
        "link": ""
      }
    ],
    "authorsList": "Christof Ebert",
    "citation": "Christof Ebert, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.141\">A Brief History of Software Technology</a>, IEEE Software 2008, no. 6, p. 22",
    "searchText": ""
  },
  {
    "quote": "Today's <b>power tools</b> enable us to <b>cut code</b> and <b>test</b> our <b>design ideas</b> much more quickly. This is a significant improvement. Yet the <b>more code</b> we create, the more opportunity we have for it to <b>grow</b> unwieldy, inconsistent, and <b>unmaintainable</b>. ",
    "title": "Designing Then and Now",
    "year": 2008,
    "number": 6,
    "page": 29,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.146",
    "selected": false,
    "authors": [
      {
        "name": "Rebecca J. Wirfs-Brock",
        "link": ""
      }
    ],
    "authorsList": "Rebecca J. Wirfs-Brock",
    "citation": "Rebecca J. Wirfs-Brock, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.146\">Designing Then and Now</a>, IEEE Software 2008, no. 6, p. 29",
    "searchText": ""
  },
  {
    "quote": "[T]he increasing sophistication and use of <b>software measurement</b> over the past 25 years ... highlights <b>four obstacles</b> to more effective use of measurement: dealing with <b>uncertainty</b>, anticipating <b>change</b>, measuring '<b>soft</b>' characteristics, and developing <b>heuristics</b>.",
    "title": "Software Metrics: Progress after 25 Years?",
    "year": 2008,
    "number": 6,
    "page": 32,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.160",
    "selected": false,
    "authors": [
      {
        "name": "Shari Lawrence Pfleeger",
        "link": ""
      }
    ],
    "authorsList": "Shari Lawrence Pfleeger",
    "citation": "Shari Lawrence Pfleeger, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.160\">Software Metrics: Progress after 25 Years?</a>, IEEE Software 2008, no. 6, p. 32",
    "searchText": ""
  },
  {
    "quote": "<b>Opportunistic software systems development</b> (OSSD) is an approach in which developers <b>meld together</b> software pieces that they have found. Most often they find unrelated software <b>components</b> and systems that <b>weren't designed to work together</b> but that provide functionality they want to include in a new system. Typically, in opportunistic development, developers spend less effort developing software functionality to meet particular requirements and more time developing '<b>glue code</b>' and using other techniques for integrating the various software pieces.",
    "title": "Opportunistic Software Systems Development: Making Systems from What's Available",
    "year": 2008,
    "number": 6,
    "page": 38,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.153",
    "selected": false,
    "authors": [
      {
        "name": "Anatol W. Kark",
        "link": ""
      },
      {
        "name": "Cornelius Ncube",
        "link": ""
      },
      {
        "name": "Patricia Oberndorf",
        "link": ""
      }
    ],
    "authorsList": "Anatol W. Kark, Cornelius Ncube, Patricia Oberndorf",
    "citation": "Anatol W. Kark, Cornelius Ncube, Patricia Oberndorf, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.153\">Opportunistic Software Systems Development: Making Systems from What's Available</a>, IEEE Software 2008, no. 6, p. 38",
    "searchText": ""
  },
  {
    "quote": "Developing products and services pragmatically places requirements on the <b>relationship</b> between the software <b>developer</b> and the <b>third-party functionality</b> provider.",
    "title": "Pragmatic and Opportunistic Reuse in Innovative Start-up Companies",
    "year": 2008,
    "number": 6,
    "page": 42,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.155",
    "selected": false,
    "authors": [
      {
        "name": "Sjaak Brinkkemper",
        "link": ""
      },
      {
        "name": "Slinger Jansen",
        "link": ""
      },
      {
        "name": "Cetin Demir",
        "link": ""
      },
      {
        "name": "Ivo Hunink",
        "link": ""
      }
    ],
    "authorsList": "Sjaak Brinkkemper, Slinger Jansen, Cetin Demir, Ivo Hunink",
    "citation": "Sjaak Brinkkemper, Slinger Jansen, Cetin Demir, Ivo Hunink, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.155\">Pragmatic and Opportunistic Reuse in Innovative Start-up Companies</a>, IEEE Software 2008, no. 6, p. 42",
    "searchText": ""
  },
  {
    "quote": "<b>Situated software</b>, a type of opportunistic software, is created by a small subset of users to fulfill a specific purpose. For example, business users have been creating situated software through mashups, which combine data from multiple sources on internal systems or the Internet.",
    "title": "Situated Software: Concepts, Motivation, Technology, and the Future",
    "year": 2008,
    "number": 6,
    "page": 50,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.159",
    "selected": false,
    "authors": [
      {
        "name": "Grace A. Lewis",
        "link": ""
      },
      {
        "name": "Soumya Simanta",
        "link": ""
      },
      {
        "name": "Dennis B. Smith",
        "link": ""
      },
      {
        "name": "Sriram Balasubramaniam",
        "link": ""
      }
    ],
    "authorsList": "Grace A. Lewis, Soumya Simanta, Dennis B. Smith, Sriram Balasubramaniam",
    "citation": "Grace A. Lewis, Soumya Simanta, Dennis B. Smith, Sriram Balasubramaniam, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.159\">Situated Software: Concepts, Motivation, Technology, and the Future</a>, IEEE Software 2008, no. 6, p. 50",
    "searchText": ""
  },
  {
    "quote": "Using <b>opportunistic software development principles</b> in <b>computer engineering education</b> encourages students to be creative and to develop solutions that cross the boundaries of diverse technologies.",
    "title": "Stimulating Creativity through Opportunistic Software Development",
    "year": 2008,
    "number": 6,
    "page": 64,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.162",
    "selected": false,
    "authors": [
      {
        "name": "Dragan Ga&#x0161;evic",
        "link": ""
      },
      {
        "name": "&#x017D;eljko Obrenovic",
        "link": ""
      },
      {
        "name": "Anton Eli&#x00EB;ns",
        "link": ""
      }
    ],
    "authorsList": "Dragan Ga&#x0161;evic, &#x017D;eljko Obrenovic, Anton Eli&#x00EB;ns",
    "citation": "Dragan Ga&#x0161;evic, &#x017D;eljko Obrenovic, Anton Eli&#x00EB;ns, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.162\">Stimulating Creativity through Opportunistic Software Development</a>, IEEE Software 2008, no. 6, p. 64",
    "searchText": ""
  },
  {
    "quote": "A <b>not-so-subtle divide</b> separates <b>empirical</b> and <b>constructionist</b> <b>software research</b>. <b>Constructionists</b> maintain that software research should be about creating technologies, devising <b>new methods</b>. <b>Empiricists</b> are interested in studying and <b>understanding existing approaches</b>. The antagonism between the two camps does not serve our industry well - it needs both modes of research.",
    "title": "Must Software Research Stand Divided?",
    "year": 2008,
    "number": 5,
    "page": 4,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.120",
    "selected": false,
    "authors": [
      {
        "name": "Hakan Erdogmus",
        "link": ""
      }
    ],
    "authorsList": "Hakan Erdogmus",
    "citation": "Hakan Erdogmus, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.120\">Must Software Research Stand Divided?</a>, IEEE Software 2008, no. 5, p. 4",
    "searchText": ""
  },
  {
    "quote": "<b>Trust</b> is a <b>subjective</b>, <b>user-centric</b>, <b>context-dependent</b> concept, and is thus difficult to define universally. <b>On the Internet</b>, several factors make trust more difficult to build, explaining why some successful brick-and-mortar retail chains have been <b>unable</b> to <b>translate</b> their <b>reputation</b> to the <b>virtual platform</b> the Web offers.",
    "title": "How Do We Build Trust into E-commerce Web Sites?",
    "year": 2008,
    "number": 5,
    "page": 7,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.136",
    "selected": false,
    "authors": [
      {
        "name": "Patricia Beatty",
        "link": ""
      },
      {
        "name": "Ejike Ofuonye",
        "link": ""
      },
      {
        "name": "Scott Dick",
        "link": ""
      },
      {
        "name": "James Miller",
        "link": ""
      },
      {
        "name": "Ian Reay",
        "link": ""
      }
    ],
    "authorsList": "Patricia Beatty, Ejike Ofuonye, Scott Dick, James Miller, Ian Reay",
    "citation": "Patricia Beatty, Ejike Ofuonye, Scott Dick, James Miller, Ian Reay, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.136\">How Do We Build Trust into E-commerce Web Sites?</a>, IEEE Software 2008, no. 5, p. 7",
    "searchText": ""
  },
  {
    "quote": "[S]ome <b>software engineering ideas</b> have a <b>half-life</b>. ... this <b>half-life</b> is <b>roughly five years</b>, ... the need for software engineers to thus stay abreast of <b>new technologies</b>.",
    "title": "The Biological Half-Life of Software Engineering Ideas",
    "year": 2008,
    "number": 5,
    "page": 10,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.127",
    "selected": false,
    "authors": [
      {
        "name": "Philippe Kruchten",
        "link": ""
      }
    ],
    "authorsList": "Philippe Kruchten",
    "citation": "Philippe Kruchten, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.127\">The Biological Half-Life of Software Engineering Ideas</a>, IEEE Software 2008, no. 5, p. 10",
    "searchText": ""
  },
  {
    "quote": "A <b>software agent</b> is defined as an <b>encapsulated</b> software entity with one or more <b>specified goals</b>. To fulfill these goals, an agent shows <b>autonomous behavior</b> and <b>interacts</b> continuously with its environment and other agents.",
    "title": "Developing Flexible Software Using Agent-Oriented Software Engineering",
    "year": 2008,
    "number": 5,
    "page": 12,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.135",
    "selected": false,
    "authors": [
      {
        "name": "Hisham Mubarak",
        "link": ""
      }
    ],
    "authorsList": "Hisham Mubarak",
    "citation": "Hisham Mubarak, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.135\">Developing Flexible Software Using Agent-Oriented Software Engineering</a>, IEEE Software 2008, no. 5, p. 12",
    "searchText": ""
  },
  {
    "quote": "<b>Static analysis</b> examines code in the <b>absence of input data</b> and <b>without running the code</b>. It can detect potential <b>security violations</b> (SQL injection), <b>runtime errors</b> (dereferencing a null pointer) and <b>logical inconsistencies</b> (a conditional test that can't possibly be true). ... <b>FindBugs</b>, an open source static-analysis tool for Java ... evaluates what kinds of defects can be effectively detected with relatively simple techniques and helps developers understand how to incorporate such tools into software development.",
    "title": "Using Static Analysis to Find Bugs",
    "year": 2008,
    "number": 5,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.130",
    "selected": false,
    "authors": [
      {
        "name": "Nathaniel Ayewah",
        "link": ""
      },
      {
        "name": "John Penix",
        "link": ""
      },
      {
        "name": "J. David Morgenthaler",
        "link": ""
      },
      {
        "name": "William Pugh",
        "link": ""
      },
      {
        "name": "David Hovemeyer",
        "link": ""
      }
    ],
    "authorsList": "Nathaniel Ayewah, John Penix, J. David Morgenthaler, William Pugh, David Hovemeyer",
    "citation": "Nathaniel Ayewah, John Penix, J. David Morgenthaler, William Pugh, David Hovemeyer, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.130\">Using Static Analysis to Find Bugs</a>, IEEE Software 2008, no. 5, p. 22",
    "searchText": ""
  },
  {
    "quote": "<b>Refactoring tools</b> can <b>improve</b> the <b>speed and accuracy</b> with which developers create and maintain software - but only <b>if they are used</b>. In practice, tools are not used as much as they could be; this seems to be because sometimes they do not align with the refactoring tactic preferred by most programmers, a tactic the authors call 'floss refactoring.' They propose five principles that characterize successful floss-refactoring tools&#x2014;principles that can help programmers to choose the most appropriate refactoring tools and also help toolsmiths to design tools that fit the programmer's purpose.",
    "title": "Refactoring Tools: Fitness for Purpose",
    "year": 2008,
    "number": 5,
    "page": 38,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.123",
    "selected": false,
    "authors": [
      {
        "name": "Emerson Murphy-Hill",
        "link": ""
      },
      {
        "name": "Andrew P. Black",
        "link": ""
      }
    ],
    "authorsList": "Emerson Murphy-Hill, Andrew P. Black",
    "citation": "Emerson Murphy-Hill, Andrew P. Black, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.123\">Refactoring Tools: Fitness for Purpose</a>, IEEE Software 2008, no. 5, p. 38",
    "searchText": ""
  },
  {
    "quote": "<b>Over time</b>, software systems suffer gradual <b>quality decay</b> and therefore costs can rise if organizations fail to take <b>proactive countermeasures</b>. Quality control is the first step to avoiding this cost trap. <b>Continuous quality assessments</b> help users identify quality problems early, when their removal is still inexpensive; they also aid decision making by providing an integrated view of a software system's current status. As a <b>side effect</b>, continuous and timely feedback helps developers and maintenance personnel <b>improve</b> their <b>skills</b> and thereby decreases the likelihood of future quality defects. To make regular quality control <b>feasible</b>, it must be <b>highly automated</b>, and assessment results must be presented in an aggregated manner to <b>avoid overwhelming users</b> with data. ",
    "title": "Tool Support for Continuous Quality Control",
    "year": 2008,
    "number": 5,
    "page": 60,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.129",
    "selected": false,
    "authors": [
      {
        "name": "Florian Deissenboeck",
        "link": ""
      },
      {
        "name": "Stefan Wagner",
        "link": ""
      },
      {
        "name": "Markus Pizka",
        "link": ""
      },
      {
        "name": "Benjamin Hummel",
        "link": ""
      },
      {
        "name": "Elmar Juergens",
        "link": ""
      },
      {
        "name": "Benedikt Mas y Parareda",
        "link": ""
      }
    ],
    "authorsList": "Florian Deissenboeck, Stefan Wagner, Markus Pizka, Benjamin Hummel, Elmar Juergens, Benedikt Mas y Parareda",
    "citation": "Florian Deissenboeck, Stefan Wagner, Markus Pizka, Benjamin Hummel, Elmar Juergens, Benedikt Mas y Parareda, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.129\">Tool Support for Continuous Quality Control</a>, IEEE Software 2008, no. 5, p. 60",
    "searchText": ""
  },
  {
    "quote": "Design teams rarely <b>consider multiple solution ideas</b> before committing to one. They often forget that an even better idea could be just around the corner, and consider alternative ideas only when they don't like the current one. Using <b>sketchboarding</b>, design studio, or a combination of these two techniques can let teams quickly ideate over many solutions. They then have a chance to arrive at a solution that no one individual had thought of.",
    "title": "Consider Multiple Solutions",
    "year": 2008,
    "number": 5,
    "page": 72,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.134",
    "selected": false,
    "authors": [
      {
        "name": "Jeff Patton",
        "link": ""
      }
    ],
    "authorsList": "Jeff Patton",
    "citation": "Jeff Patton, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.134\">Consider Multiple Solutions</a>, IEEE Software 2008, no. 5, p. 72",
    "searchText": ""
  },
  {
    "quote": "<b>Software resource estimation</b> methods and models have had a major impact on successful software engineering practice. They provide milestone budgets and schedules that help projects determine when they are making <b>satisfactory progress</b> and when they need <b>corrective action</b>. They help decision makers analyze <b>software cost-schedule-value trade-offs</b> and make decisions regarding investments, outsourcing, COTS products, and legacy software phaseouts. They help organizations <b>prioritize investments</b> in improving software productivity, quality, and time to market. ",
    "title": "Achievements and Challenges in Cocomo-Based Software Resource Estimation",
    "year": 2008,
    "number": 5,
    "page": 74,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.133",
    "selected": false,
    "authors": [
      {
        "name": "Ricardo Valerdi",
        "link": ""
      },
      {
        "name": "Barry W. Boehm",
        "link": ""
      }
    ],
    "authorsList": "Ricardo Valerdi, Barry W. Boehm",
    "citation": "Ricardo Valerdi, Barry W. Boehm, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.133\">Achievements and Challenges in Cocomo-Based Software Resource Estimation</a>, IEEE Software 2008, no. 5, p. 74",
    "searchText": ""
  },
  {
    "quote": "Despite various industry reports about the <b>failure rates</b> of software projects, there's still <b>uncertainty</b> about the <b>actual figures</b>. Researchers performed a global Web survey of IT departments in 2005 and 2007. The results suggest that the software <b>crisis is perhaps exaggerated</b> and that most software projects deliver. However, the overall project failure rate, including cancelled and completed but poorly performing projects, remains arguably high for an applied discipline.",
    "title": "A Replicated Survey of IT Software Project Failures",
    "year": 2008,
    "number": 5,
    "page": 84,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.107",
    "selected": false,
    "authors": [
      {
        "name": "Khaled El Emam",
        "link": ""
      },
      {
        "name": "A. G&#x00FC;nes Koru",
        "link": ""
      }
    ],
    "authorsList": "Khaled El Emam, A. G&#x00FC;nes Koru",
    "citation": "Khaled El Emam, A. G&#x00FC;nes Koru, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.107\">A Replicated Survey of IT Software Project Failures</a>, IEEE Software 2008, no. 5, p. 84",
    "searchText": ""
  },
  {
    "quote": "Software developers often need to understand a large body of <b>unfamiliar code</b> with little or <b>no documentation</b>, <b>no experts</b> to consult, and <b>little time</b> to do it. ... The most common suggestions were to use a <b>code navigation tool</b>, use a <b>design recovery</b> tool, use a <b>debugger</b> to step through the code, create a <b>runtime trace</b>, use problem-based learning, ask people for help, study the code from top down, and <b>print out all</b> the code.",
    "title": "Inventive Tool Use to Comprehend Big Code",
    "year": 2008,
    "number": 5,
    "page": 91,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.118",
    "selected": false,
    "authors": [
      {
        "name": "Sukanya Ratanotayanon",
        "link": ""
      },
      {
        "name": "Susan Elliott Sim",
        "link": ""
      }
    ],
    "authorsList": "Sukanya Ratanotayanon, Susan Elliott Sim",
    "citation": "Sukanya Ratanotayanon, Susan Elliott Sim, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.118\">Inventive Tool Use to Comprehend Big Code</a>, IEEE Software 2008, no. 5, p. 91",
    "searchText": ""
  },
  {
    "quote": "Every new line of code quickly becomes <b>legacy</b>. When that <b>legacy</b> mounts, it forms a significantly massive pile of software, which cannot be ignored. ... what we can do intentionally with such piles, from <b>abandonment</b> to <b>evolution</b> and many <b>things in between</b>.",
    "title": "Nine Things You Can Do with Old Software",
    "year": 2008,
    "number": 5,
    "page": 93,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.139",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.139\">Nine Things You Can Do with Old Software</a>, IEEE Software 2008, no. 5, p. 93",
    "searchText": ""
  },
  {
    "quote": "<b>One member</b> of a work team can <b>decrease</b> the whole <b>team's productivity</b>.",
    "title": "Negative Productivity and What to Do about It",
    "year": 2008,
    "number": 5,
    "page": 95,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.121",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.121\">Negative Productivity and What to Do about It</a>, IEEE Software 2008, no. 5, p. 95",
    "searchText": ""
  },
  {
    "quote": "<b>Process trends</b> can be placed inside a triangular map according to their emphasis on three aspects, represented by the vertices: <b>people</b>, <b>technology</b>, and <b>rigor</b>. <b>Plan-oriented</b>, engineering, and research-based approaches tend to view software as a rigid artifact, so they <b>stress</b> <b>technology</b> and <b>rigor</b> over <b>people</b>. <b>Evolutionary approaches</b> tend to view software development as an organic, skills-driven technical activity, so they <b>stress</b> <b>people</b> and <b>technology</b> over <b>rigor</b>. ... A more complete scheme requires dissection in terms of seven essential, mutually reinforcing characteristics: <b>human-centricity</b>, <b>technical orientation</b>, <b>discipline</b>, <b>pragmatism</b>, <b>empiricism</b>, <b>experimentation</b>, and <b>value orientation</b>.",
    "title": "Essentials of Software Process",
    "year": 2008,
    "number": 4,
    "page": 4,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.87",
    "selected": false,
    "authors": [
      {
        "name": "Hakan Erdogmus",
        "link": ""
      }
    ],
    "authorsList": "Hakan Erdogmus",
    "citation": "Hakan Erdogmus, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.87\">Essentials of Software Process</a>, IEEE Software 2008, no. 4, p. 4",
    "searchText": ""
  },
  {
    "quote": "There can be significant benefits in thinking through a design until you get it 'right enough' before launching into a major development effort. For such <b>up-front design</b> to be effective, you must develop <b>a design rhythm</b> that balances <b>thinking</b>, <b>learning</b>, <b>and</b> doing.",
    "title": "Up-front Design",
    "year": 2008,
    "number": 4,
    "page": 12,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.104",
    "selected": false,
    "authors": [
      {
        "name": "Rebecca J. Wirfs-Brock",
        "link": ""
      }
    ],
    "authorsList": "Rebecca J. Wirfs-Brock",
    "citation": "Rebecca J. Wirfs-Brock, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.104\">Up-front Design</a>, IEEE Software 2008, no. 4, p. 12",
    "searchText": ""
  },
  {
    "quote": "<b>Without refactoring</b>, complex software-intensive <b>systems</b> become <b>increasingly irregular</b> and thus increasingly chaotic over time. We can <b>understand</b> complex software systems only when they're <b>nearly decomposable</b> and <b>hierarchic</b>. One measure ... is <b>lines of source code</b>: the greater the SLOC, the <b>more inertia</b> to change the system will have, the more people it will take to keep it fed, the more stakeholders who will be crawling all over it. ... the more complex measures ... are tuned to Philippe Kruchten's 4+1 view model of architecture.",
    "title": "Measuring Architectural Complexity",
    "year": 2008,
    "number": 4,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.91",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.91\">Measuring Architectural Complexity</a>, IEEE Software 2008, no. 4, p. 14",
    "searchText": ""
  },
  {
    "quote": "Not all <b>scientific computing</b> is high-performance computing - <b>the variety</b> of scientific software is huge. Such software might be complex <b>simulation</b> software developed and running on a <b>high-performance computer</b>, or software developed on a <b>PC</b> for embedding into <b>instruments</b>; for manipulating, analyzing or <b>visualizing</b> data or for orchestrating <b>workflows</b>.",
    "title": "Developing Scientific Software",
    "year": 2008,
    "number": 4,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.85",
    "selected": false,
    "authors": [
      {
        "name": "Judith Segal",
        "link": ""
      },
      {
        "name": "Chris Morris",
        "link": ""
      }
    ],
    "authorsList": "Judith Segal, Chris Morris",
    "citation": "Judith Segal, Chris Morris, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.85\">Developing Scientific Software</a>, IEEE Software 2008, no. 4, p. 18",
    "searchText": ""
  },
  {
    "quote": "The development of <b>scientific software</b> involves <b>risk</b> in the <b>underlying theory</b>, its implementation, and its use. ... If the software's purpose <b>shifts away</b> from just <b>showing the theory's viability</b>, risk shifts to <b>the implementation</b>. At this point, testing must assess <b>the implementation</b>, not the theory. Most <b>scientists miss</b> this shift.",
    "title": "Dealing with Risk in Scientific Software Development",
    "year": 2008,
    "number": 4,
    "page": 21,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.84",
    "selected": false,
    "authors": [
      {
        "name": "Rebecca Sanders",
        "link": ""
      },
      {
        "name": "Diane Kelly",
        "link": ""
      }
    ],
    "authorsList": "Rebecca Sanders, Diane Kelly",
    "citation": "Rebecca Sanders, Diane Kelly, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.84\">Dealing with Risk in Scientific Software Development</a>, IEEE Software 2008, no. 4, p. 21",
    "searchText": ""
  },
  {
    "quote": "Studies of computational <b>scientists</b> developing software for <b>high-performance computing systems</b> indicate that these scientists face <b>unique</b> software engineering <b>issues</b>. Previous failed attempts to transfer SE technologies to this domain haven't always taken these issues into account. To <b>support scientific-software development</b>, the SE community can disseminate appropriate practices and processes, develop educational materials specifically for computational scientists, and investigate the large-scale reuse of development frameworks.",
    "title": "Understanding the High-Performance-Computing Community: A Software Engineer's Perspective",
    "year": 2008,
    "number": 4,
    "page": 29,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.103",
    "selected": false,
    "authors": [
      {
        "name": "Jeffrey C. Carver",
        "link": ""
      },
      {
        "name": "Lorin M. Hochstein",
        "link": ""
      },
      {
        "name": "Daniela Cruzes",
        "link": ""
      },
      {
        "name": "Victor R. Basili",
        "link": ""
      },
      {
        "name": "Jeffrey K. Hollingsworth",
        "link": ""
      },
      {
        "name": "Marvin V. Zelkowitz",
        "link": ""
      },
      {
        "name": "Forrest Shull",
        "link": ""
      }
    ],
    "authorsList": "Jeffrey C. Carver, Lorin M. Hochstein, Daniela Cruzes, Victor R. Basili, Jeffrey K. Hollingsworth, Marvin V. Zelkowitz, Forrest Shull",
    "citation": "Jeffrey C. Carver, Lorin M. Hochstein, Daniela Cruzes, Victor R. Basili, Jeffrey K. Hollingsworth, Marvin V. Zelkowitz, Forrest Shull, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.103\">Understanding the High-Performance-Computing Community: A Software Engineer's Perspective</a>, IEEE Software 2008, no. 4, p. 29",
    "searchText": ""
  },
  {
    "quote": "<b>Scientific workflows</b> - models of computation that capture the <b>orchestration</b> of scientific codes to conduct in silico research - are gaining recognition as an attractive <b>alternative</b> to <b>script-based orchestration</b>. Even so, researchers developing scientific workflow technologies still face fundamental challenges, including developing the <b>underlying science of scientific workflows</b>. You can classify scientific-workflow environments according to three major phases of in silico research: <b>discovery</b>, <b>production</b>, and <b>distribution</b>.",
    "title": "Scientific Software as Workflows: From Discovery to Distribution",
    "year": 2008,
    "number": 4,
    "page": 37,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.92",
    "selected": false,
    "authors": [
      {
        "name": "David Woollard",
        "link": ""
      },
      {
        "name": "Nenad Medvidovic",
        "link": ""
      },
      {
        "name": "Yolanda Gil",
        "link": ""
      },
      {
        "name": "Chris A. Mattmann",
        "link": ""
      }
    ],
    "authorsList": "David Woollard, Nenad Medvidovic, Yolanda Gil, Chris A. Mattmann",
    "citation": "David Woollard, Nenad Medvidovic, Yolanda Gil, Chris A. Mattmann, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.92\">Scientific Software as Workflows: From Discovery to Distribution</a>, IEEE Software 2008, no. 4, p. 37",
    "searchText": ""
  },
  {
    "quote": "<b>Reactive systems</b> that service <b>multiple clients</b> or users are often <b>highly configurable</b> to provide <b>customized</b>, value-added services to individual users. A large <b>configuration space</b> is characteristic of such systems, resulting in a <b>large test state space</b>.",
    "title": "Testing Feature-Rich Reactive Systems",
    "year": 2008,
    "number": 4,
    "page": 74,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.99",
    "selected": false,
    "authors": [
      {
        "name": "Tony Savor",
        "link": ""
      }
    ],
    "authorsList": "Tony Savor",
    "citation": "Tony Savor, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.99\">Testing Feature-Rich Reactive Systems</a>, IEEE Software 2008, no. 4, p. 74",
    "searchText": ""
  },
  {
    "quote": "<b>Checklists</b> are an important part of <b>code</b> and <b>design inspections</b>. Ideally, they aim to increase the number of faults found per inspection hour by highlighting known areas of previous failure. ... The author subjects checklists' effectiveness to <b>formal statistical testing</b>, using data from <b>308 inspections</b> by industrial engineers over a three-year period. The results showed <b>no evidence</b> that checklists <b>significantly improved</b> these inspections.",
    "title": "Testing the Value of Checklists in Code Inspections",
    "year": 2008,
    "number": 4,
    "page": 82,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.100",
    "selected": false,
    "authors": [
      {
        "name": "Les Hatton",
        "link": ""
      }
    ],
    "authorsList": "Les Hatton",
    "citation": "Les Hatton, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.100\">Testing the Value of Checklists in Code Inspections</a>, IEEE Software 2008, no. 4, p. 82",
    "searchText": ""
  },
  {
    "quote": "<b>Software engineers</b> will do <b>better work and stay with a company</b> if they are <b>motivated</b> - as a result the success of software projects is likely to improve. ... in-depth review of the <b>92 studies</b> published in the last <b>25 years</b> on software engineer motivation ... give an overview of what <b>managers need to know</b> to improve motivation among their employees.",
    "title": "What Do We Know about Developer Motivation?",
    "year": 2008,
    "number": 4,
    "page": 92,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.105",
    "selected": false,
    "authors": [
      {
        "name": "Nathan Baddoo",
        "link": ""
      },
      {
        "name": "Tracy Hall",
        "link": ""
      },
      {
        "name": "Sarah Beecham",
        "link": ""
      },
      {
        "name": "Helen Sharp",
        "link": ""
      },
      {
        "name": "Hugh Robinson",
        "link": ""
      }
    ],
    "authorsList": "Nathan Baddoo, Tracy Hall, Sarah Beecham, Helen Sharp, Hugh Robinson",
    "citation": "Nathan Baddoo, Tracy Hall, Sarah Beecham, Helen Sharp, Hugh Robinson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.105\">What Do We Know about Developer Motivation?</a>, IEEE Software 2008, no. 4, p. 92",
    "searchText": ""
  },
  {
    "quote": "The software development process and the resulting product are so complex that no <b>error-detecting approach</b> will ever be able to produce <b>error-free software</b>.",
    "title": "Two Mistakes and Error-Free Software: A Confession",
    "year": 2008,
    "number": 4,
    "page": 95,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.102",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.102\">Two Mistakes and Error-Free Software: A Confession</a>, IEEE Software 2008, no. 4, p. 95",
    "searchText": ""
  },
  {
    "quote": "<b>Model-based testing (MBT)</b> approaches help automatically <b>generate test cases</b> using models extracted from software artifacts, ... certain <b>specialized domains</b> are applying MBT, but it does not yet seem to be a mainstream approach.",
    "title": "Improving Evidence about Software Technologies: A Look at Model-Based Testing",
    "year": 2008,
    "number": 3,
    "page": 10,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.64",
    "selected": false,
    "authors": [
      {
        "name": "Arilo Dias Neto",
        "link": ""
      },
      {
        "name": "Rajesh Subramanyan",
        "link": ""
      },
      {
        "name": "Forrest Shull",
        "link": ""
      },
      {
        "name": "Guilherme Horta Travassos",
        "link": ""
      },
      {
        "name": "Marlon Vieira",
        "link": ""
      }
    ],
    "authorsList": "Arilo Dias Neto, Rajesh Subramanyan, Forrest Shull, Guilherme Horta Travassos, Marlon Vieira",
    "citation": "Arilo Dias Neto, Rajesh Subramanyan, Forrest Shull, Guilherme Horta Travassos, Marlon Vieira, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.64\">Improving Evidence about Software Technologies: A Look at Model-Based Testing</a>, IEEE Software 2008, no. 3, p. 10",
    "searchText": ""
  },
  {
    "quote": "Designers need to sharpen their <b>focus</b> and apply <b>design energy</b> where it will have the most impact. So, identifying <b>what's core</b> to our system's success is one of the most critical things we must do.",
    "title": "Design Strategy",
    "year": 2008,
    "number": 3,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.58",
    "selected": false,
    "authors": [
      {
        "name": "Rebecca J. Wirfs-Brock",
        "link": ""
      }
    ],
    "authorsList": "Rebecca J. Wirfs-Brock",
    "citation": "Rebecca J. Wirfs-Brock, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.58\">Design Strategy</a>, IEEE Software 2008, no. 3, p. 14",
    "searchText": ""
  },
  {
    "quote": "How to apply <b>user-centered design</b> methods to design interactive systems for the <b>elderly</b>. A case study (with its successes and weaknesses) showed that a need exists for more <b>creative and participatory</b> design approaches for this population.",
    "title": "Requirements Elicitation with and for Older Adults",
    "year": 2008,
    "number": 3,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.69",
    "selected": false,
    "authors": [
      {
        "name": "Ulrike Pfeil",
        "link": ""
      },
      {
        "name": "Helena Sustar",
        "link": ""
      },
      {
        "name": "Panayiotis Zaphiris",
        "link": ""
      }
    ],
    "authorsList": "Ulrike Pfeil, Helena Sustar, Panayiotis Zaphiris",
    "citation": "Ulrike Pfeil, Helena Sustar, Panayiotis Zaphiris, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.69\">Requirements Elicitation with and for Older Adults</a>, IEEE Software 2008, no. 3, p. 16",
    "searchText": ""
  },
  {
    "quote": "What is the <b>optimal design</b> for a given system, a design that reasonably <b>balances all the forces</b> that weigh in on the problem? In turn, what is the <b>optimal organizational structure</b> for developing, deploying, and evolving that system? The challenge for every organization is to find the sweet spot that provides the <b>right balance</b> of <b>innovation</b>, <b>predictability</b>, <b>repeatability</b>, and <b>risk confrontation</b> for that project at every given moment.",
    "title": "Architectural Organizational Patterns",
    "year": 2008,
    "number": 3,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.56",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.56\">Architectural Organizational Patterns</a>, IEEE Software 2008, no. 3, p. 18",
    "searchText": ""
  },
  {
    "quote": "<b>Salesforce.com</b> has used the RITE (<b>Rapid Iterative Testing and Evaluation</b>) method to quickly and iteratively improve its software design. RITE has helped the company retain high quality while increasing its rate of delivery using an agile development approach.",
    "title": "Getting Software RITE",
    "year": 2008,
    "number": 3,
    "page": 20,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.62",
    "selected": false,
    "authors": [
      {
        "name": "Jeff Patton",
        "link": ""
      }
    ],
    "authorsList": "Jeff Patton",
    "citation": "Jeff Patton, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.62\">Getting Software RITE</a>, IEEE Software 2008, no. 3, p. 20",
    "searchText": ""
  },
  {
    "quote": "Software building's golden rule is that you should <b>automate all build tasks</b>. The most popular tool options for doing this are the facilities that your integrated development environment (IDE) provides, the various implementations of <b>Make</b>, and <b>Apache Ant</b> and <b>Maven</b>.",
    "title": "Software Builders",
    "year": 2008,
    "number": 3,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.74",
    "selected": false,
    "authors": [
      {
        "name": "Diomidis Spinellis",
        "link": ""
      }
    ],
    "authorsList": "Diomidis Spinellis",
    "citation": "Diomidis Spinellis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.74\">Software Builders</a>, IEEE Software 2008, no. 3, p. 22",
    "searchText": ""
  },
  {
    "quote": "A successful project effectively manages four cornerstones - <b>schedule</b>, <b>cost</b>, <b>scope</b>, and <b>quality</b> - to achieve its goals. Every project activity influences these four cornerstones. <b>Stochastic optimization modeling</b> factors in the uncertainties associated with project activities and provides insight into the expected project outputs as probability distributions rather than as deterministic approximations.",
    "title": "Stochastic Optimization Modeling and Quantitative Project Management",
    "year": 2008,
    "number": 3,
    "page": 29,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.77",
    "selected": false,
    "authors": [
      {
        "name": "Uma Sudhakar Rao",
        "link": ""
      },
      {
        "name": "Chinmay Pradhan",
        "link": ""
      },
      {
        "name": "Srikanth Kestur",
        "link": ""
      }
    ],
    "authorsList": "Uma Sudhakar Rao, Chinmay Pradhan, Srikanth Kestur",
    "citation": "Uma Sudhakar Rao, Chinmay Pradhan, Srikanth Kestur, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.77\">Stochastic Optimization Modeling and Quantitative Project Management</a>, IEEE Software 2008, no. 3, p. 29",
    "searchText": ""
  },
  {
    "quote": "<b>Open source</b> refers to software that you may freely use, modify, or distribute provided you observe certain restrictions with respect to copyright and protection of its open source status. A major difference between free and open source software (FOSS) and freeware or public-domain software is that FOSS generally has a copyright. FOSS isn't free software and often <b>requires substantial investment</b> before you can deploy it in the marketplace. ",
    "title": "Open Source Software in Industry",
    "year": 2008,
    "number": 3,
    "page": 52,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.67",
    "selected": false,
    "authors": [
      {
        "name": "Christof Ebert",
        "link": ""
      }
    ],
    "authorsList": "Christof Ebert",
    "citation": "Christof Ebert, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.67\">Open Source Software in Industry</a>, IEEE Software 2008, no. 3, p. 52",
    "searchText": ""
  },
  {
    "quote": "Software development <b>effort estimates</b> are reported to be highly <b>inaccurate</b> and systematically <b>overly optimistic</b>. Empirical evidence suggests that this problem is caused to some extent by the influence of <b>irrelevant and misleading information</b> - for example, information about the client's budget. The only effective way to eliminate this influence is to <b>avoid exposure</b> to such information.",
    "title": "Avoiding Irrelevant and Misleading Information When Estimating Development Effort",
    "year": 2008,
    "number": 3,
    "page": 78,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.57",
    "selected": false,
    "authors": [
      {
        "name": "Stein Grimstad",
        "link": ""
      },
      {
        "name": "Magne J?rgensen",
        "link": ""
      }
    ],
    "authorsList": "Stein Grimstad, Magne J?rgensen",
    "citation": "Stein Grimstad, Magne J?rgensen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.57\">Avoiding Irrelevant and Misleading Information When Estimating Development Effort</a>, IEEE Software 2008, no. 3, p. 78",
    "searchText": ""
  },
  {
    "quote": "People might love to support <b>underdogs</b>, but they also <b>love to kick them</b> when they're down. And, at this point in time at least, software is the world's technological underdog!",
    "title": "Software: Hero or Zero?",
    "year": 2008,
    "number": 3,
    "page": 95,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.75",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.75\">Software: Hero or Zero?</a>, IEEE Software 2008, no. 3, p. 95",
    "searchText": ""
  },
  {
    "quote": "<b>Measuring</b> software development <b>productivity</b> is difficult, but it's not impossible. It's prone to misuse and misinterpretation, and highly portable, precise measures are elusive. But we can still implement meaningful measures, provided we understand why we're doing it and provided we're aware of their limitations.",
    "title": "Measurement Acquiescence",
    "year": 2008,
    "number": 2,
    "page": 4,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.40",
    "selected": false,
    "authors": [
      {
        "name": "Hakan Erdogmus",
        "link": ""
      }
    ],
    "authorsList": "Hakan Erdogmus",
    "citation": "Hakan Erdogmus, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.40\">Measurement Acquiescence</a>, IEEE Software 2008, no. 2, p. 4",
    "searchText": ""
  },
  {
    "quote": "As the code written today becomes part of tomorrow's inexorably <b>growing legacy</b>, preserving these stories becomes increasingly important. It's costly to rely upon informal <b>storytelling</b> to <b>preserve</b> and <b>communicate important decisions</b>; it's incredibly costly to try to recreate those decisions and their rationale when the storytellers themselves are gone. Insofar as a software development organization can <b>preserve</b> its stories in a system's written architecture, it can make evolving that system materially easier.",
    "title": "Tribal Memory",
    "year": 2008,
    "number": 2,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.52",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.52\">Tribal Memory</a>, IEEE Software 2008, no. 2, p. 16",
    "searchText": ""
  },
  {
    "quote": "When dealing with <b>quality requirements</b>, you often end up in difficult <b>trade-off analysis</b>. You must take into account aspects such as <b>release</b> targets, <b>end-user experience</b>, and <b>business opportunities</b>. At the same time, you must consider what is <b>feasible</b> with the evolving system architecture and the available development resources. Our experience from the mobile-phone domain shows that much can be gained if development team members <b>share</b> a common <b>framework of quality indicators</b> and have a <b>simple</b>, easy-to-use model for reasoning about quality targets.",
    "title": "Supporting Roadmapping of Quality Requirements",
    "year": 2008,
    "number": 2,
    "page": 42,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.48",
    "selected": false,
    "authors": [
      {
        "name": "Richard Berntsson Svensson",
        "link": ""
      },
      {
        "name": "Bj&#246;rn Regnell",
        "link": ""
      },
      {
        "name": "Thomas Olsson",
        "link": ""
      }
    ],
    "authorsList": "Richard Berntsson Svensson, Bj&#246;rn Regnell, Thomas Olsson",
    "citation": "Richard Berntsson Svensson, Bj&#246;rn Regnell, Thomas Olsson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.48\">Supporting Roadmapping of Quality Requirements</a>, IEEE Software 2008, no. 2, p. 42",
    "searchText": ""
  },
  {
    "quote": "<b>Test-driven development</b> (TDD) is first and foremost a design practice. The question is, 'How good are the resulting designs?' ... TDD programmers tend to write software modules that are <b>smaller</b>, <b>less complex</b>, and more <b>highly tested</b> than modules produced by their test-last counterparts. However, the results didn't support claims for lower coupling and increased cohesion with TDD.",
    "title": "Does Test-Driven Development Really Improve Software Design Quality?",
    "year": 2008,
    "number": 2,
    "page": 77,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.34",
    "selected": false,
    "authors": [
      {
        "name": "David Janzen",
        "link": ""
      },
      {
        "name": "Hossein Saiedian",
        "link": ""
      }
    ],
    "authorsList": "David Janzen, Hossein Saiedian",
    "citation": "David Janzen, Hossein Saiedian, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.34\">Does Test-Driven Development Really Improve Software Design Quality?</a>, IEEE Software 2008, no. 2, p. 77",
    "searchText": ""
  },
  {
    "quote": "The <b>Business Process Execution Language</b> specifies Web services that work together to perform a business process. BPEL is an <b>orchestrating language</b>: it sets down exactly how the Web services will cooperate to carry out the overall business process. BPEL is an <b>XML-based programming language</b> - that is, you write BPEL programs in XML. Because XML wasn't designed with programmers in mind, the programming results aren't prime examples of elegance. Fortunately, you rarely need to write in BPEL by hand. Most BPEL programs are written using <b>special graphical editors</b> that let you describe the business process diagrammatically and then automatically generate the corresponding BPEL code.",
    "title": "Orchestrating Web Services with BPEL",
    "year": 2008,
    "number": 2,
    "page": 85,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.42",
    "selected": false,
    "authors": [
      {
        "name": "Panagiotis Louridas",
        "link": ""
      }
    ],
    "authorsList": "Panagiotis Louridas",
    "citation": "Panagiotis Louridas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.42\">Orchestrating Web Services with BPEL</a>, IEEE Software 2008, no. 2, p. 85",
    "searchText": ""
  },
  {
    "quote": "<b>Google</b>'s position as a leading Web-based applications platform and its embrace of <b>rigorous incremental testing</b> might be the vanguard of a new definition of what software testing encompasses.",
    "title": "'Googling' Test Practices? Web Giant's Culture Encourages Process Improvement",
    "year": 2008,
    "number": 2,
    "page": 92,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2008.28",
    "selected": false,
    "authors": [
      {
        "name": "Greg Goth",
        "link": ""
      }
    ],
    "authorsList": "Greg Goth",
    "citation": "Greg Goth, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2008.28\">'Googling' Test Practices? Web Giant's Culture Encourages Process Improvement</a>, IEEE Software 2008, no. 2, p. 92",
    "searchText": ""
  },
  {
    "quote": "Software development teams need to <b>make decisions</b> effectively <b>as a team</b>, but most groups spend more time in <b>meetings and discussions</b> than they need. Sometimes, to <b>evaluate an idea</b>, we have to <b>try it</b> for a while. If you see your team bogged down in meetings, it's time to <b>run an experiment</b> and replace <b>opinions</b> with <b>facts</b>.",
    "title": "Just Try It",
    "year": 2007,
    "number": 6,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.171",
    "selected": false,
    "authors": [
      {
        "name": "J.B. Rainsberger",
        "link": ""
      }
    ],
    "authorsList": "J.B. Rainsberger",
    "citation": "J.B. Rainsberger, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.171\">Just Try It</a>, IEEE Software 2007, no. 6, p. 16",
    "searchText": ""
  },
  {
    "quote": "<b>Yukijiro Matsumoto</b>, chief designer of the <b>Ruby</b> programming language, claims brevity is one of the most important contributors to <b>beautiful code</b>. Although brevity can contribute to code beauty, clarity of purpose, expressive use of the programming language, and design elegance also play a part. But is there more to <b>good design</b> than <b>beautiful code</b>?",
    "title": "Does Beautiful Code Imply Beautiful Design?",
    "year": 2007,
    "number": 6,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.163",
    "selected": false,
    "authors": [
      {
        "name": "Rebecca J. Wirfs-Brock",
        "link": ""
      }
    ],
    "authorsList": "Rebecca J. Wirfs-Brock",
    "citation": "Rebecca J. Wirfs-Brock, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.163\">Does Beautiful Code Imply Beautiful Design?</a>, IEEE Software 2007, no. 6, p. 18",
    "searchText": ""
  },
  {
    "quote": "<b>Paper as a tool</b> for <b>expressing our thoughts</b> offers superb usability and versatility, letting us mix various notations and multiple levels of abstraction. This makes it easier to pour out our thoughts on it. In contrast to software tools, paper doesn't provide feedback and <b>won't interrupt us</b> with various notifications. This gives us a <b>chance to meditate</b> on our design in a state of flow.",
    "title": "On Paper",
    "year": 2007,
    "number": 6,
    "page": 24,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.173",
    "selected": false,
    "authors": [
      {
        "name": "Diomidis Spinellis",
        "link": ""
      }
    ],
    "authorsList": "Diomidis Spinellis",
    "citation": "Diomidis Spinellis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.173\">On Paper</a>, IEEE Software 2007, no. 6, p. 24",
    "searchText": ""
  },
  {
    "quote": "A comparison of <b>building architecture</b> and <b>software architecture</b> reveals the differences, congruences, and commonalities between the two. There are differences in cost estimation, but there are similarities in divisions of labor or knowledge, degrees of formality, and the use of different viewpoints, use cases, an incremental design, and a particular style.",
    "title": "Artifacts and Process",
    "year": 2007,
    "number": 6,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.159",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.159\">Artifacts and Process</a>, IEEE Software 2007, no. 6, p. 26",
    "searchText": ""
  },
  {
    "quote": "<b>Service-centric software system</b> is a multidisciplinary paradigm concerned with software systems that are constructed as <b>compositions of autonomous services</b>. These systems extend the service-oriented architecture paradigm by focusing on the design, development, and maintenance of software built under SOAs.",
    "title": "Guest Editors' Introduction: Realizing Service-Centric Software Systems",
    "year": 2007,
    "number": 6,
    "page": 28,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.166",
    "selected": false,
    "authors": [
      {
        "name": "Olivier Nano",
        "link": ""
      },
      {
        "name": "Andrea Zisman",
        "link": ""
      }
    ],
    "authorsList": "Olivier Nano, Andrea Zisman",
    "citation": "Olivier Nano, Andrea Zisman, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.166\">Guest Editors' Introduction: Realizing Service-Centric Software Systems</a>, IEEE Software 2007, no. 6, p. 28",
    "searchText": ""
  },
  {
    "quote": "<b>Composing software services</b> requires solving both <b>low-level technical problems</b> and <b>high-level semantic issues</b>.",
    "title": "A Domain-Configurable Development Environment for Service-Oriented Applications",
    "year": 2007,
    "number": 6,
    "page": 31,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.154",
    "selected": false,
    "authors": [
      {
        "name": "Philippe Lalanda",
        "link": ""
      },
      {
        "name": "Cristina Marin",
        "link": ""
      }
    ],
    "authorsList": "Philippe Lalanda, Cristina Marin",
    "citation": "Philippe Lalanda, Cristina Marin, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.154\">A Domain-Configurable Development Environment for Service-Oriented Applications</a>, IEEE Software 2007, no. 6, p. 31",
    "searchText": ""
  },
  {
    "quote": "Development of today's information systems must take a <b>service-centric</b> approach. The drive is toward designing <b>service-centric</b> systems involving <b>well-defined</b>, <b>loosely coupled</b> services that are <b>reusable</b>, <b>discoverable</b>, and <b>composable</b>.",
    "title": "SESA: Emerging Technology for Service-Centric Environments",
    "year": 2007,
    "number": 6,
    "page": 56,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.178",
    "selected": false,
    "authors": [
      {
        "name": "Dieter Fensel",
        "link": ""
      },
      {
        "name": "Maciej Zaremba",
        "link": ""
      },
      {
        "name": "Michal Zaremba",
        "link": ""
      },
      {
        "name": "Tomas Vitvar",
        "link": ""
      },
      {
        "name": "Matthew Moran",
        "link": ""
      }
    ],
    "authorsList": "Dieter Fensel, Maciej Zaremba, Michal Zaremba, Tomas Vitvar, Matthew Moran",
    "citation": "Dieter Fensel, Maciej Zaremba, Michal Zaremba, Tomas Vitvar, Matthew Moran, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.178\">SESA: Emerging Technology for Service-Centric Environments</a>, IEEE Software 2007, no. 6, p. 56",
    "searchText": ""
  },
  {
    "quote": "Open source development is often regarded as a chaotic environment where new initiatives' success or failure just happens by chance. However, <b>successful open source communities</b> are applying <b>incubation processes</b> for <b>managing the risks</b> associated with creating new projects. ... [e.g.] <b>Apache</b> and <b>Eclipse</b> communities.",
    "title": "Apache and Eclipse: Comparing Open Source Project Incubators",
    "year": 2007,
    "number": 6,
    "page": 90,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.157",
    "selected": false,
    "authors": [
      {
        "name": "Jos&#x00E9; L. Ruiz",
        "link": ""
      },
      {
        "name": "Manuel Santill&#x00E1;n",
        "link": ""
      },
      {
        "name": "Hugo A. Parada G.",
        "link": ""
      },
      {
        "name": "F&#x00E9;lix Cuadrado",
        "link": ""
      },
      {
        "name": "Juan C. Due&#x00F1;as",
        "link": ""
      }
    ],
    "authorsList": "Jos&#x00E9; L. Ruiz, Manuel Santill&#x00E1;n, Hugo A. Parada G., F&#x00E9;lix Cuadrado, Juan C. Due&#x00F1;as",
    "citation": "Jos&#x00E9; L. Ruiz, Manuel Santill&#x00E1;n, Hugo A. Parada G., F&#x00E9;lix Cuadrado, Juan C. Due&#x00F1;as, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.157\">Apache and Eclipse: Comparing Open Source Project Incubators</a>, IEEE Software 2007, no. 6, p. 90",
    "searchText": ""
  },
  {
    "quote": "<b>Ruby on Rails</b> is a novel Web 2.0 application development framework that attempts to combine <b>PHP</b>'s simple immediacy with <b>Java</b>'s architecture, purity, and quality.",
    "title": "Ruby on Rails",
    "year": 2007,
    "number": 6,
    "page": 105,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.176",
    "selected": false,
    "authors": [
      {
        "name": "Paul Kirchberg",
        "link": ""
      },
      {
        "name": "Michael B&#x00E4;chle",
        "link": ""
      }
    ],
    "authorsList": "Paul Kirchberg, Michael B&#x00E4;chle",
    "citation": "Paul Kirchberg, Michael B&#x00E4;chle, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.176\">Ruby on Rails</a>, IEEE Software 2007, no. 6, p. 105",
    "searchText": ""
  },
  {
    "quote": "Building and acquiring software requires making <b>many decisions</b> and choosing between numerous solutions, yet the infrastructure to help people make decisions <b>based on good evidence</b> isn't well developed. The software engineering community needs better communication between researchers and practitioners to help make <b>useful bodies of evidence</b> available that can impact practice.",
    "title": "Who Needs Evidence, Anyway?",
    "year": 2007,
    "number": 5,
    "page": 10,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.152",
    "selected": false,
    "authors": [
      {
        "name": "Forrest Shull",
        "link": ""
      }
    ],
    "authorsList": "Forrest Shull",
    "citation": "Forrest Shull, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.152\">Who Needs Evidence, Anyway?</a>, IEEE Software 2007, no. 5, p. 10",
    "searchText": ""
  },
  {
    "quote": "Since 2005, developers have used <b>Ajax</b> to let users interact with Web applications much as they do with desktop applications. But the <b>Ajax</b> features represented in applications such as <b>Google Maps</b>, <b>Netvibes</b>, and Zimbra Collaboration Suite demand detailed coding. <b>Ajax frameworks</b> are utility sets that make it easier to develop and maintain these applications.",
    "title": "Ajax Frameworks in Interactive Web Apps",
    "year": 2007,
    "number": 5,
    "page": 12,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.132",
    "selected": false,
    "authors": [
      {
        "name": "Juan Pablo Aroztegi",
        "link": ""
      },
      {
        "name": "Nicol&#x00E1;s Serrano",
        "link": ""
      }
    ],
    "authorsList": "Juan Pablo Aroztegi, Nicol&#x00E1;s Serrano",
    "citation": "Juan Pablo Aroztegi, Nicol&#x00E1;s Serrano, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.132\">Ajax Frameworks in Interactive Web Apps</a>, IEEE Software 2007, no. 5, p. 12",
    "searchText": ""
  },
  {
    "quote": "Building <b>clean abstractions</b> with <b>clearly defined extension points</b> is satisfying, but the best design choice isn't always obvious. How much access should you give a subclass to a class's inner workings? How much freedom should you give a subclass designer to 'bend' inherited behaviors to make a new abstraction fit in or to extend an existing one? These decisions involve nuanced reasoning. The contract between a class and its subclasses requires <b>thoughtful design</b>, <b>experimentation</b>, and <b>careful specification</b>.",
    "title": "Designing Extensible Classes",
    "year": 2007,
    "number": 5,
    "page": 15,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.137",
    "selected": false,
    "authors": [
      {
        "name": "Rebecca J. Wirfs-Brock",
        "link": ""
      }
    ],
    "authorsList": "Rebecca J. Wirfs-Brock",
    "citation": "Rebecca J. Wirfs-Brock, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.137\">Designing Extensible Classes</a>, IEEE Software 2007, no. 5, p. 15",
    "searchText": ""
  },
  {
    "quote": "<b>The architect</b>, either as an individual, a role, or a team, lovingly crafts, grows, and governs that architecture as it emerges from the <b>thousands of individual design decisions</b> of which it's composed. In this sense, an <b>architecture-first approach</b> appears to be a reflection of sound development practices.",
    "title": "The Economics of Architecture-First",
    "year": 2007,
    "number": 5,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.146",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.146\">The Economics of Architecture-First</a>, IEEE Software 2007, no. 5, p. 18",
    "searchText": ""
  },
  {
    "quote": "<b>Copy-pasting</b> code is a source of bugs. By employing in our programs <b>abstraction mechanisms</b> such as <b>functions</b>, <b>classes</b>, <b>types</b>, <b>decision tables</b>, <b>domain-specific languages</b>, and databases, we can abstract common elements into <b>parameterized reusable functionality</b>. However, <b>abstraction has its cost</b>. Its early gains are large, but eventually the benefits turn negative and the code becomes less comprehensible and maintainable. Deciding when abstracting is appropriate is what makes programming an art.",
    "title": "Abstraction and Variation",
    "year": 2007,
    "number": 5,
    "page": 24,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.127",
    "selected": false,
    "authors": [
      {
        "name": "Diomidis Spinellis",
        "link": ""
      }
    ],
    "authorsList": "Diomidis Spinellis",
    "citation": "Diomidis Spinellis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.127\">Abstraction and Variation</a>, IEEE Software 2007, no. 5, p. 24",
    "searchText": ""
  },
  {
    "quote": "<b>The languages</b> discussed ... have a long history, which is perhaps why some have had <b>several different names</b> over the years. One such language is <b>Lisp</b>, the second-oldest programming language. For years, many somewhat dismissively described languages such as Lisp as '<b>scripting languages</b>.' Today, we more commonly refer to them as <b>dynamically typed languages</b>, typified by <b>Python</b> <b>and</b> Ruby, <b>and</b> their impact is arguably greater than ever.",
    "title": "Guest Editors' Introduction: Dynamically Typed Languages",
    "year": 2007,
    "number": 5,
    "page": 28,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.140",
    "selected": false,
    "authors": [
      {
        "name": "Roel Wuyts",
        "link": ""
      },
      {
        "name": "Laurence Tratt",
        "link": ""
      }
    ],
    "authorsList": "Roel Wuyts, Laurence Tratt",
    "citation": "Roel Wuyts, Laurence Tratt, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.140\">Guest Editors' Introduction: Dynamically Typed Languages</a>, IEEE Software 2007, no. 5, p. 28",
    "searchText": ""
  },
  {
    "quote": "Five years ago, the team at Reflexis ran into <b>a little language from Brazil</b>. Lua (pronounced loo-ah) changed the way they work profoundly. It lets them create hybrid solutions that combine the strengths of <b>statically typed software</b> with the flexibility of a <b>dynamically typed environment</b>. In short, with Lua, they get the best of both worlds. Lua can help you become more productive by extending your <b>C/C++</b> creations with the expressive power and flexibility of a dynamically typed language.",
    "title": "Traveling Light, the Lua Way",
    "year": 2007,
    "number": 5,
    "page": 31,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.150",
    "selected": false,
    "authors": [],
    "authorsList": "Ashwin Hirschi",
    "citation": "Ashwin Hirschi, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.150\">Traveling Light, the Lua Way</a>, IEEE Software 2007, no. 5, p. 31",
    "searchText": ""
  },
  {
    "quote": "<b>Python</b>, a dynamically typed language, can implement these software frameworks for major OR [operational research] methodologies (mathematical programming and simulation) in the same programming environment. By doing so, <b>Python</b>, in effect, <b>glues software environments</b> that have been independent, thus improving the software development cycle for sophisticated applications requiring different model types.",
    "title": "A Common Medium for Programming Operations-Research Models",
    "year": 2007,
    "number": 5,
    "page": 39,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.125",
    "selected": false,
    "authors": [
      {
        "name": "F. Hank Grant",
        "link": ""
      },
      {
        "name": "Suleyman Karabuk",
        "link": ""
      }
    ],
    "authorsList": "F. Hank Grant, Suleyman Karabuk",
    "citation": "F. Hank Grant, Suleyman Karabuk, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.125\">A Common Medium for Programming Operations-Research Models</a>, IEEE Software 2007, no. 5, p. 39",
    "searchText": ""
  },
  {
    "quote": "The emergence of the <b>model-driven development</b> paradigm has revitalized interest in <b>domain-specific languages</b>. <b>Embedding a DSL</b> in a dynamic language facilitates rapid development.",
    "title": "Building Domain-Specific Languages for Model-Driven Development",
    "year": 2007,
    "number": 5,
    "page": 48,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.135",
    "selected": false,
    "authors": [
      {
        "name": "Jes&#x00FA;s Garc&#x00ED;a Molina",
        "link": ""
      },
      {
        "name": "Jes&#x00FA;s S&#x00E1;nchez Cuadrado",
        "link": ""
      }
    ],
    "authorsList": "Jes&#x00FA;s Garc&#x00ED;a Molina, Jes&#x00FA;s S&#x00E1;nchez Cuadrado",
    "citation": "Jes&#x00FA;s Garc&#x00ED;a Molina, Jes&#x00FA;s S&#x00E1;nchez Cuadrado, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.135\">Building Domain-Specific Languages for Model-Driven Development</a>, IEEE Software 2007, no. 5, p. 48",
    "searchText": ""
  },
  {
    "quote": "By harnessing <b>Smalltalk's dynamic nature</b> and reflective capabilities, Seaside is able to incorporate key features such as a component architecture that supports multiple, simultaneously active control flows; programmatical <b>XHTML</b> generation; and on-the-fly debugging, code editing, and recompilation.",
    "title": "Seaside: A Flexible Environment for Building Dynamic Web Applications",
    "year": 2007,
    "number": 5,
    "page": 56,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.144",
    "selected": false,
    "authors": [
      {
        "name": "St&#x00E9;phane Ducasse",
        "link": ""
      },
      {
        "name": "Lukas Renggli",
        "link": ""
      },
      {
        "name": "Adrian Lienhard",
        "link": ""
      }
    ],
    "authorsList": "St&#x00E9;phane Ducasse, Lukas Renggli, Adrian Lienhard",
    "citation": "St&#x00E9;phane Ducasse, Lukas Renggli, Adrian Lienhard, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.144\">Seaside: A Flexible Environment for Building Dynamic Web Applications</a>, IEEE Software 2007, no. 5, p. 56",
    "searchText": ""
  },
  {
    "quote": "Although the <b>Semantic Web</b> is <b>data oriented</b> and the <b>World Wide Web</b> is <b>document oriented</b>, both are fundamentally <b>decentralized</b>, <b>heterogeneous</b>, and <b>open</b>. The Semantic Web isn’t a global database, centralized in one location with one agreed-upon schema and one meaning. Instead, anyone can make any statement at any location, using any vocabulary or structure.",
    "title": "A Flexible Integration Framework for Semantic Web 2.0 Applications",
    "year": 2007,
    "number": 5,
    "page": 64,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.126",
    "selected": false,
    "authors": [],
    "authorsList": "Eyal Oren, Armin Haller, Manfred Hauswirth, Benjamin Heitmann, Stefan Decker, Cédric Mesnage",
    "citation": "<a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.126\">A Flexible Integration Framework for Semantic Web 2.0 Applications</a>, IEEE Software 2007, no. 5, p. 64",
    "searchText": ""
  },
  {
    "quote": "Cognitive biases exist, and designers are remiss if we ignore them. By becoming aware of some common <b>cognitive biases in design discussions</b>, you can learn when it's worthwhile to tweak your message to increase the likelihood of it being accepted.",
    "title": "Giving Design Advice",
    "year": 2007,
    "number": 4,
    "page": 13,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.108",
    "selected": false,
    "authors": [
      {
        "name": "Rebecca J. Wirfs-Brock",
        "link": ""
      }
    ],
    "authorsList": "Rebecca J. Wirfs-Brock",
    "citation": "Rebecca J. Wirfs-Brock, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.108\">Giving Design Advice</a>, IEEE Software 2007, no. 4, p. 13",
    "searchText": ""
  },
  {
    "quote": "<b>A domain-specific language</b> for building user interfaces offers a transparent way for programmers to specify interface elements. <b>Microsoft's Extensible Application Markup Language</b> is an XML dialect for this purpose. However, <b>XAML</b> isn't the only choice for programmers who wish to try a declarative approach, and some options are even open source.",
    "title": "Declarative GUI Programming in Microsoft Windows",
    "year": 2007,
    "number": 4,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.105",
    "selected": false,
    "authors": [
      {
        "name": "Panagiotis Louridas",
        "link": ""
      }
    ],
    "authorsList": "Panagiotis Louridas",
    "citation": "Panagiotis Louridas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.105\">Declarative GUI Programming in Microsoft Windows</a>, IEEE Software 2007, no. 4, p. 16",
    "searchText": ""
  },
  {
    "quote": "Virtually all <b>well-structured music</b>, music that pleases the ear and moves the spirit, is <b>full of patterns</b>. By comparing musical and software patterns, the author helps clarify the purposes and forms of patterns. Architectural and design patterns make software-intensive systems easier to understand and adapt to because of their <b>regularity and simplicity</b>.",
    "title": "The Well-Tempered Architecture",
    "year": 2007,
    "number": 4,
    "page": 24,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.122",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.122\">The Well-Tempered Architecture</a>, IEEE Software 2007, no. 4, p. 24",
    "searchText": ""
  },
  {
    "quote": "<b>Patterns</b> have become part of the <b>software development mainstream</b>. They're available for all phases of the development process, including analysis, documentation, design, testing, and configuration management, to name a few.",
    "title": "Guest Editors' Introduction: Software Patterns",
    "year": 2007,
    "number": 4,
    "page": 28,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.109",
    "selected": false,
    "authors": [
      {
        "name": "Michael Kircher",
        "link": ""
      },
      {
        "name": "Markus V&#x00F6;lter",
        "link": ""
      }
    ],
    "authorsList": "Michael Kircher, Markus V&#x00F6;lter",
    "citation": "Michael Kircher, Markus V&#x00F6;lter, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.109\">Guest Editors' Introduction: Software Patterns</a>, IEEE Software 2007, no. 4, p. 28",
    "searchText": ""
  },
  {
    "quote": "For the past two decades, <b>software patterns</b> have significantly influenced how developers design and implement computing systems, well above and <b>beyond the most popular research</b> in the software field. ",
    "title": "Past, Present, and Future Trends in Software Patterns",
    "year": 2007,
    "number": 4,
    "page": 31,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.115",
    "selected": false,
    "authors": [
      {
        "name": "Douglas C. Schmidt",
        "link": ""
      },
      {
        "name": "Kevlin Henney",
        "link": ""
      },
      {
        "name": "Frank Buschmann",
        "link": ""
      }
    ],
    "authorsList": "Douglas C. Schmidt, Kevlin Henney, Frank Buschmann",
    "citation": "Douglas C. Schmidt, Kevlin Henney, Frank Buschmann, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.115\">Past, Present, and Future Trends in Software Patterns</a>, IEEE Software 2007, no. 4, p. 31",
    "searchText": ""
  },
  {
    "quote": "All of software design involves developers <b>making decisions</b> and reifying those decisions in code. ... However, architects often <b>fail to document</b> their decisions well. This leads to <b>architectural erosion</b>: decisions made during later development might conflict with the original architectural decisions and thus cause significant system disruptions. ",
    "title": "Using Patterns to Capture Architectural Decisions",
    "year": 2007,
    "number": 4,
    "page": 38,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.124",
    "selected": false,
    "authors": [
      {
        "name": "Neil B. Harrison",
        "link": ""
      },
      {
        "name": "Uwe Zdun",
        "link": ""
      },
      {
        "name": "Paris Avgeriou",
        "link": ""
      }
    ],
    "authorsList": "Neil B. Harrison, Uwe Zdun, Paris Avgeriou",
    "citation": "Neil B. Harrison, Uwe Zdun, Paris Avgeriou, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.124\">Using Patterns to Capture Architectural Decisions</a>, IEEE Software 2007, no. 4, p. 38",
    "searchText": ""
  },
  {
    "quote": "<b>Microsoft's patterns & practices</b> group conducted a survey that indicates a <b>significant gap</b> between the patterns <b>expert community</b> and the <b>software practitioners</b> attempting to use and leverage patterns in their daily work.",
    "title": "The Growing Divide in the Patterns World",
    "year": 2007,
    "number": 4,
    "page": 61,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.120",
    "selected": false,
    "authors": [
      {
        "name": "Jason Hogg",
        "link": ""
      },
      {
        "name": "Dragos Manolescu",
        "link": ""
      },
      {
        "name": "Wojtek Kozaczynski",
        "link": ""
      },
      {
        "name": "Ade Miller",
        "link": ""
      }
    ],
    "authorsList": "Jason Hogg, Dragos Manolescu, Wojtek Kozaczynski, Ade Miller",
    "citation": "Jason Hogg, Dragos Manolescu, Wojtek Kozaczynski, Ade Miller, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.120\">The Growing Divide in the Patterns World</a>, IEEE Software 2007, no. 4, p. 61",
    "searchText": ""
  },
  {
    "quote": "<b>Researchers</b> have studied and created a wide range of techniques to <b>support software engineers</b> during development. ... there's a high demand and acceptance for <b>unobtrusive</b>, <b>quickly</b> executable, and reactive <b>assistance</b> in core software engineering phases to help solve the problems at hand.",
    "title": "Intelligent Assistance in German Software Development: A Survey",
    "year": 2007,
    "number": 4,
    "page": 72,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.110",
    "selected": false,
    "authors": [
      {
        "name": "Eric Ras",
        "link": ""
      },
      {
        "name": "J&#x00F6;rg Rech",
        "link": ""
      },
      {
        "name": "Bj&#x00F6;rn Decker",
        "link": ""
      }
    ],
    "authorsList": "Eric Ras, J&#x00F6;rg Rech, Bj&#x00F6;rn Decker",
    "citation": "Eric Ras, J&#x00F6;rg Rech, Bj&#x00F6;rn Decker, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.110\">Intelligent Assistance in German Software Development: A Survey</a>, IEEE Software 2007, no. 4, p. 72",
    "searchText": ""
  },
  {
    "quote": "<b>Asimov's Laws of Robotics</b> constrain robots to serve their human masters. Minor rewording shows that similar principles are very <b>relevant to software too</b>. These <b>laws of software</b> encompass a host of desiderata and trade-offs that software developers need to keep in mind. They also demonstrate that issues that are typically treated in a fragmented manner are actually strongly intertwined.",
    "title": "Asimov's Laws of Robotics Applied to Software",
    "year": 2007,
    "number": 4,
    "page": 111,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.100",
    "selected": false,
    "authors": [
      {
        "name": "Dror G. Feitelson",
        "link": ""
      }
    ],
    "authorsList": "Dror G. Feitelson",
    "citation": "Dror G. Feitelson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.100\">Asimov's Laws of Robotics Applied to Software</a>, IEEE Software 2007, no. 4, p. 111",
    "searchText": ""
  },
  {
    "quote": "The <b>architecture</b> of a software-intensive system is largely <b>irrelevant to its end users</b>. Far more important to these  stakeholders is the <b>system's behavior</b>, exhibited by raw, working source code. As long as a system provides the right answers  at the right time with all the right other '-ilities' (maintainability, dependability, changeability, and so on), end users couldn't care less about what's behind the curtain making things work. To stakeholders other than end users, however, a system's architecture is intensely interesting. Moreover, software architecture has had a hand in <b>better project management</b>, greater use of <b>iterative development</b>, and leverage from the <b>Web's infrastructure</b>.",
    "title": "The Irrelevance of Architecture",
    "year": 2007,
    "number": 3,
    "page": 10,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.93",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.93\">The Irrelevance of Architecture</a>, IEEE Software 2007, no. 3, p. 10",
    "searchText": ""
  },
  {
    "quote": "Knowing what tactic to take when someone <b>criticizes your design</b> is important. Designers need to recognize, accept, and <b>seek out valid criticism</b>, while <b>deflecting false criticisms</b> and <b>defusing aesthetic arguments</b>.",
    "title": "Handling Design Criticism",
    "year": 2007,
    "number": 3,
    "page": 12,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.76",
    "selected": false,
    "authors": [
      {
        "name": "Rebecca J. Wirfs-Brock",
        "link": ""
      }
    ],
    "authorsList": "Rebecca J. Wirfs-Brock",
    "citation": "Rebecca J. Wirfs-Brock, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.76\">Handling Design Criticism</a>, IEEE Software 2007, no. 3, p. 12",
    "searchText": ""
  },
  {
    "quote": "<b>Test-driven development</b> is a discipline of design and programming where every line of new <b>code is written in response to a test</b> the programmer writes just before coding. ... [T]he ways TDD is being used in nontrivial situations (database development, embedded software development, GUI development, performance tuning), signifying an adoption level for the practice beyond the visionary phase and into the early mainstream.",
    "title": "Guest Editors' Introduction: TDD--The Art of Fearless Programming",
    "year": 2007,
    "number": 3,
    "page": 24,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.75",
    "selected": false,
    "authors": [
      {
        "name": "Grigori Melnik",
        "link": ""
      },
      {
        "name": "Ron Jeffries",
        "link": ""
      }
    ],
    "authorsList": "Grigori Melnik, Ron Jeffries",
    "citation": "Grigori Melnik, Ron Jeffries, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.75\">Guest Editors' Introduction: TDD--The Art of Fearless Programming</a>, IEEE Software 2007, no. 3, p. 24",
    "searchText": ""
  },
  {
    "quote": "A professional software developer ships <b>clean</b>, <b>flexible</b> code that <b>works</b>-<b>on time</b>. ... <b>Test-driven development</b> is a discipline that helps developers behave in a more professional manner.",
    "title": "Professionalism and Test-Driven Development",
    "year": 2007,
    "number": 3,
    "page": 32,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.85",
    "selected": false,
    "authors": [
      {
        "name": "Robert C. Martin",
        "link": ""
      }
    ],
    "authorsList": "Robert C. Martin",
    "citation": "Robert C. Martin, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.85\">Professionalism and Test-Driven Development</a>, IEEE Software 2007, no. 3, p. 32",
    "searchText": ""
  },
  {
    "quote": "Developers can use a <b>test-driven development</b> with <b>database schema</b> just as they use it with application code. Implementing test-driven database development (TDDD) involves three relatively simple steps: database <b>refactoring</b>, database <b>regression testing</b>, and <b>continuous</b> database <b>integration</b>.",
    "title": "Test-Driven Development of Relational Databases",
    "year": 2007,
    "number": 3,
    "page": 37,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.91",
    "selected": false,
    "authors": [
      {
        "name": "Scott W. Ambler",
        "link": ""
      }
    ],
    "authorsList": "Scott W. Ambler",
    "citation": "Scott W. Ambler, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.91\">Test-Driven Development of Relational Databases</a>, IEEE Software 2007, no. 3, p. 37",
    "searchText": ""
  },
  {
    "quote": "An explanation of test-driven development often begins by describing the <b>red-green-refactor</b> cycle. This slogan is so catchy and the description so simple that practitioners and tool developers tend to focus only on this <b>localized cycle</b>. Experience has shown that a successful functional test-driven development strategy must <b>span the entire application life cycle</b> and must be supported by effective tools. ",
    "title": "Envisioning the Next Generation of Functional Testing Tools",
    "year": 2007,
    "number": 3,
    "page": 58,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.73",
    "selected": false,
    "authors": [
      {
        "name": "Jennitta Andrea",
        "link": ""
      }
    ],
    "authorsList": "Jennitta Andrea",
    "citation": "Jennitta Andrea, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.73\">Envisioning the Next Generation of Functional Testing Tools</a>, IEEE Software 2007, no. 3, p. 58",
    "searchText": ""
  },
  {
    "quote": "Designing <b>incrementally</b>, keeping it <b>clean</b> as you go, can help you <b>avoid accidental complexity</b>. But doing this takes <b>discipline</b> and design <b>familiarity</b>.",
    "title": "Toward Design Simplicity",
    "year": 2007,
    "number": 2,
    "page": 9,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.57",
    "selected": false,
    "authors": [
      {
        "name": "Rebecca J. Wirfs-Brock",
        "link": ""
      }
    ],
    "authorsList": "Rebecca J. Wirfs-Brock",
    "citation": "Rebecca J. Wirfs-Brock, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.57\">Toward Design Simplicity</a>, IEEE Software 2007, no. 2, p. 9",
    "searchText": ""
  },
  {
    "quote": "During an <b>architectural assessmen</b> ... it's important to be <b>truthful</b> as well as <b>gentle</b>. ... [T]he development organization's unique task is to address all the essential concerns of all the important stakeholders and <b>avoid being blindsided</b> by unexpected problems and stakeholders.",
    "title": "Speaking Truth to Power",
    "year": 2007,
    "number": 2,
    "page": 12,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.53",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.53\">Speaking Truth to Power</a>, IEEE Software 2007, no. 2, p. 12",
    "searchText": ""
  },
  {
    "quote": "Accepting some of the testing team's responsibility by <b>writing your own tests</b> lets you trade the time you spend fixing defects for less time spent avoiding them in the first place.",
    "title": "Avoiding Defects",
    "year": 2007,
    "number": 2,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.34",
    "selected": false,
    "authors": [
      {
        "name": "J.B. Rainsberger",
        "link": ""
      }
    ],
    "authorsList": "J.B. Rainsberger",
    "citation": "J.B. Rainsberger, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.34\">Avoiding Defects</a>, IEEE Software 2007, no. 2, p. 14",
    "searchText": ""
  },
  {
    "quote": "The growing attention being paid to <b>stakeholders' needs and desires</b> reflects the growing importance of requirements engineering (RE) in software and systems development. ... : identifying the stakeholders in a project, determining who and how important they are, prioritizing the <b>identified</b> stakeholder roles, and <b>selecting representative individuals</b> or groups from the identified and <b>prioritized</b> stakeholder roles with whom the development team can elicit and validate system requirements.",
    "title": "Guest Editors' Introduction: Stakeholders in Requirements Engineering",
    "year": 2007,
    "number": 2,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.42",
    "selected": false,
    "authors": [
      {
        "name": "Roel J. Wieringa",
        "link": ""
      },
      {
        "name": "Martin Glinz",
        "link": ""
      }
    ],
    "authorsList": "Roel J. Wieringa, Martin Glinz",
    "citation": "Roel J. Wieringa, Martin Glinz, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.42\">Guest Editors' Introduction: Stakeholders in Requirements Engineering</a>, IEEE Software 2007, no. 2, p. 18",
    "searchText": ""
  },
  {
    "quote": "<b>Requirements engineering</b> must manage the risks arising from project stakeholders. The <b>Outcome-Based Stakeholder Risk Assessment Model</b> (Obsram) provides guidance in stakeholder identification, identification of <b>stakeholder impacts and perceptions</b>, identification of potentially negative responses that pose risks to the project, and assessment and prioritization of those risks.",
    "title": "Stakeholder Risk Assessment: An Outcome-Based Approach",
    "year": 2007,
    "number": 2,
    "page": 36,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.54",
    "selected": false,
    "authors": [
      {
        "name": "Richard W. Woolridge",
        "link": ""
      },
      {
        "name": "Joanne E. Hale",
        "link": ""
      },
      {
        "name": "Denise J. McManus",
        "link": ""
      }
    ],
    "authorsList": "Richard W. Woolridge, Joanne E. Hale, Denise J. McManus",
    "citation": "Richard W. Woolridge, Joanne E. Hale, Denise J. McManus, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.54\">Stakeholder Risk Assessment: An Outcome-Based Approach</a>, IEEE Software 2007, no. 2, p. 36",
    "searchText": ""
  },
  {
    "quote": "<b>Terminological interference</b> occurs in requirements engineering when stakeholders have <b>different interpretations</b> of the terms they use to describe their problem domain.",
    "title": "So, You Think You Know Others' Goals? A Repertory Grid Study",
    "year": 2007,
    "number": 2,
    "page": 53,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.52",
    "selected": false,
    "authors": [
      {
        "name": "Nan Niu",
        "link": ""
      },
      {
        "name": "Steve Easterbrook",
        "link": ""
      }
    ],
    "authorsList": "Nan Niu, Steve Easterbrook",
    "citation": "Nan Niu, Steve Easterbrook, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.52\">So, You Think You Know Others' Goals? A Repertory Grid Study</a>, IEEE Software 2007, no. 2, p. 53",
    "searchText": ""
  },
  {
    "quote": "[T]he recommendations for <b>analyzing productivity</b> in the appendix to the ISO/IEC 15939 standard are inappropriate. ... [P]roblems with the ISO/IEC advice can be compounded if software engineers attempt to apply <b>statistical process-control</b> techniques to software productivity metrics.",
    "title": "Misleading Metrics and Unsound Analyses",
    "year": 2007,
    "number": 2,
    "page": 73,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.49",
    "selected": false,
    "authors": [
      {
        "name": "Colin Connaughton",
        "link": ""
      },
      {
        "name": "David Ross Jeffery",
        "link": ""
      },
      {
        "name": "Barbara Kitchenham",
        "link": ""
      }
    ],
    "authorsList": "Colin Connaughton, David Ross Jeffery, Barbara Kitchenham",
    "citation": "Colin Connaughton, David Ross Jeffery, Barbara Kitchenham, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.49\">Misleading Metrics and Unsound Analyses</a>, IEEE Software 2007, no. 2, p. 73",
    "searchText": ""
  },
  {
    "quote": "<b>Eclipse</b> is an <b>open source</b> software project dedicated to providing a robust, full-featured, <b>and commercial-quality platform</b> for developing and supporting highly <b>integrated</b> software engineering <b>tools</b>.",
    "title": "Using Eclipse as a Tool-Integration Platform for Software Development",
    "year": 2007,
    "number": 2,
    "page": 87,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.58",
    "selected": false,
    "authors": [
      {
        "name": "Michael Jiang",
        "link": ""
      },
      {
        "name": "Zhihui Yang",
        "link": ""
      }
    ],
    "authorsList": "Michael Jiang, Zhihui Yang",
    "citation": "Michael Jiang, Zhihui Yang, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.58\">Using Eclipse as a Tool-Integration Platform for Software Development</a>, IEEE Software 2007, no. 2, p. 87",
    "searchText": ""
  },
  {
    "quote": "Software systems usually have the <b>same basic architectural pattern</b> as their earlier incarnations, manifesting in decreasingly refined forms as we move back in time. Similarly, when a new problem confronts us, we try many different approaches, but over time, for the same kind of problem, <b>solutions tend to converge</b> to the same, more constrained, solution space.",
    "title": "It Is What It Is Because It Was What It Was",
    "year": 2007,
    "number": 1,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.19",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.19\">It Is What It Is Because It Was What It Was</a>, IEEE Software 2007, no. 1, p. 14",
    "searchText": ""
  },
  {
    "quote": "<b>Experienced programmers plan</b>, while <b>junior programmers jump</b> into their work. Some simpler <b>personal planning techniques</b> can help you eliminate waste when you work, write less code, design more simply, inject fewer defects, and generally <b>deliver sooner</b>.  ... [T]he best way I know to <b>deliver sooner</b> is to <b>do less</b>.",
    "title": "Personal Planning",
    "year": 2007,
    "number": 1,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.23",
    "selected": false,
    "authors": [
      {
        "name": "J.B. Rainsberger",
        "link": ""
      }
    ],
    "authorsList": "J.B. Rainsberger",
    "citation": "J.B. Rainsberger, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.23\">Personal Planning</a>, IEEE Software 2007, no. 1, p. 16",
    "searchText": ""
  },
  {
    "quote": "<b>Small software organizations</b>--independently financed and organized companies with <b>fewer than 50 employees</b>--are fundamental to many national economies' growth. In the US, Brazil, Canada, China, India, Finland, Ireland, Hungary, and many other countries, small companies represent up to 85 percent of all software organizations. However, to persist and grow, small software companies need <b>efficient, effective software</b> engineering solutions.",
    "title": "Guest Editors' Introduction: Why are Small Software Organizations Different?",
    "year": 2007,
    "number": 1,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.12",
    "selected": false,
    "authors": [
      {
        "name": "Christiane Gresse von Wangenheim",
        "link": ""
      },
      {
        "name": "Ita Richardson",
        "link": ""
      }
    ],
    "authorsList": "Christiane Gresse von Wangenheim, Ita Richardson",
    "citation": "Christiane Gresse von Wangenheim, Ita Richardson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.12\">Guest Editors' Introduction: Why are Small Software Organizations Different?</a>, IEEE Software 2007, no. 1, p. 18",
    "searchText": ""
  },
  {
    "quote": "<b>Software process assessments</b> are typically the first step to commencing software process improvement. Small software companies find that many assessment methods are linked to <b>plan-driven improvement</b> models and can be <b>expensive</b> in terms of the resources required. ",
    "title": "Adept: A Unified Assessment Method for Small Software Companies",
    "year": 2007,
    "number": 1,
    "page": 24,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.3",
    "selected": false,
    "authors": [
      {
        "name": "Fergal Mc Caffery",
        "link": ""
      },
      {
        "name": "Philip S. Taylor",
        "link": ""
      },
      {
        "name": "Gerry Coleman",
        "link": ""
      }
    ],
    "authorsList": "Fergal Mc Caffery, Philip S. Taylor, Gerry Coleman",
    "citation": "Fergal Mc Caffery, Philip S. Taylor, Gerry Coleman, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.3\">Adept: A Unified Assessment Method for Small Software Companies</a>, IEEE Software 2007, no. 1, p. 24",
    "searchText": ""
  },
  {
    "quote": "There is (or should be) <b>more fun</b> in software engineering than you might think.",
    "title": "Is Software Engineering Fun?",
    "year": 2007,
    "number": 1,
    "page": 95,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2007.18",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2007.18\">Is Software Engineering Fun?</a>, IEEE Software 2007, no. 1, p. 95",
    "searchText": ""
  },
  {
    "quote": "On behalf of the Computer History Museum and the ACM, <b>Grady Booch</b> recently interviewed <b>John Backus</b>, who led the IBM team that created Fortran in the 1950s. Backus went on to coinvent the <b>Backus-Naur Form</b> (which was first applied to the definition of ALGOL), then later pioneered important advances in <b>functional programming</b>.",
    "title": "Goodness of Fit",
    "year": 2006,
    "number": 6,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.162",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.162\">Goodness of Fit</a>, IEEE Software 2006, no. 6, p. 14",
    "searchText": ""
  },
  {
    "quote": "The first <b>software engineering programs</b> were at the graduate level, primarily as terminal master's degrees for those already developing commercial and industrial software. By the early 1990s, educators began to consider software engineering's role at the undergraduate level.",
    "title": "Guest Editors' Introduction: Software Engineering Curriculum Development",
    "year": 2006,
    "number": 6,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.164",
    "selected": false,
    "authors": [
      {
        "name": "Donald Bagert",
        "link": ""
      },
      {
        "name": "Michael J. Lutz",
        "link": ""
      }
    ],
    "authorsList": "Donald Bagert, Michael J. Lutz",
    "citation": "Donald Bagert, Michael J. Lutz, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.164\">Guest Editors' Introduction: Software Engineering Curriculum Development</a>, IEEE Software 2006, no. 6, p. 16",
    "searchText": ""
  },
  {
    "quote": "The recommendations in <b>Software Engineering 2004</b>: Curriculum Guidelines for Undergraduate Degree Programs in Software Engineering, form a volume of the larger Computing Curriculum project of the IEEE-CS and ACM. SE2004 evolved from an analysis of <b>desired student outcomes</b> for a software engineering graduate as compared to those for computer science and computer engineering graduates.",
    "title": "SE2004: Recommendations for Undergraduate Software Engineering Curricula",
    "year": 2006,
    "number": 6,
    "page": 19,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.171",
    "selected": false,
    "authors": [
      {
        "name": "Timothy C. Lethbridge",
        "link": ""
      },
      {
        "name": "Thomas B. Hilburn",
        "link": ""
      },
      {
        "name": "Jorge L. D?az-Herrera",
        "link": ""
      },
      {
        "name": "Ann E. Kelley Sobel",
        "link": ""
      },
      {
        "name": "Richard J. LeBlanc Jr",
        "link": ""
      }
    ],
    "authorsList": "Timothy C. Lethbridge, Thomas B. Hilburn, Jorge L. D?az-Herrera, Ann E. Kelley Sobel, Richard J. LeBlanc Jr",
    "citation": "Timothy C. Lethbridge, Thomas B. Hilburn, Jorge L. D?az-Herrera, Ann E. Kelley Sobel, Richard J. LeBlanc Jr, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.171\">SE2004: Recommendations for Undergraduate Software Engineering Curricula</a>, IEEE Software 2006, no. 6, p. 19",
    "searchText": ""
  },
  {
    "quote": "There are many challenges in delivering a <b>software engineering curriculum</b> by <b>distance learning</b>. ... Theses programs are characterized as part-time, open, large-scale <b>distance learning</b>, professionally accredited, and primarily aimed at practitioners in the IT industry.",
    "title": "Learning Software Engineering at a Distance",
    "year": 2006,
    "number": 6,
    "page": 36,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.169",
    "selected": false,
    "authors": [
      {
        "name": "Pete Thomas",
        "link": ""
      },
      {
        "name": "Michel Wermelinger",
        "link": ""
      },
      {
        "name": "Juan Fern?ndez-Ramil",
        "link": ""
      },
      {
        "name": "Brendan Quinn",
        "link": ""
      },
      {
        "name": "Leonor Barroca",
        "link": ""
      },
      {
        "name": "Lucia Rapanotti",
        "link": ""
      },
      {
        "name": "Bashar Nuseibeh",
        "link": ""
      }
    ],
    "authorsList": "Pete Thomas, Michel Wermelinger, Juan Fern?ndez-Ramil, Brendan Quinn, Leonor Barroca, Lucia Rapanotti, Bashar Nuseibeh",
    "citation": "Pete Thomas, Michel Wermelinger, Juan Fern?ndez-Ramil, Brendan Quinn, Leonor Barroca, Lucia Rapanotti, Bashar Nuseibeh, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.169\">Learning Software Engineering at a Distance</a>, IEEE Software 2006, no. 6, p. 36",
    "searchText": ""
  },
  {
    "quote": "<b>Open source software</b> offers a unique opportunity for <b>improving learning</b> outcomes for software engineering and computer science education.",
    "title": "Experiences with Open Source Software Engineering Tools",
    "year": 2006,
    "number": 6,
    "page": 44,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.158",
    "selected": false,
    "authors": [
      {
        "name": "Kal Toth",
        "link": ""
      }
    ],
    "authorsList": "Kal Toth",
    "citation": "Kal Toth, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.158\">Experiences with Open Source Software Engineering Tools</a>, IEEE Software 2006, no. 6, p. 44",
    "searchText": ""
  },
  {
    "quote": "In May 2000, the World Wide Web Consortium issued the specification for version 1.1 of the <b>Simple Object Access Protocol</b>. The name SOAP stuck; in version 1.2, the W3C ceased to consider <b>SOAP to be an acronym</b>. SOAP is just SOAP, a way applications can use XML to exchange structured and typed information. SOAP-based services are the foundation of the current push toward service-oriented Web architecture. Unfortunately, getting from the foundation to the complete edifice still involves a lot of work.",
    "title": "SOAP and Web Services",
    "year": 2006,
    "number": 6,
    "page": 62,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.172",
    "selected": false,
    "authors": [
      {
        "name": "Panagiotis Louridas",
        "link": ""
      }
    ],
    "authorsList": "Panagiotis Louridas",
    "citation": "Panagiotis Louridas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.172\">SOAP and Web Services</a>, IEEE Software 2006, no. 6, p. 62",
    "searchText": ""
  },
  {
    "quote": "<b>Quantification</b> helps you better understand your <b>requirements</b>, improving them and sometimes even revealing new <b>requirements</b> or stakeholders.",
    "title": "Improve Your Requirements: Quantify Them",
    "year": 2006,
    "number": 6,
    "page": 68,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.165",
    "selected": false,
    "authors": [
      {
        "name": "Neil Maiden",
        "link": ""
      }
    ],
    "authorsList": "Neil Maiden",
    "citation": "Neil Maiden, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.165\">Improve Your Requirements: Quantify Them</a>, IEEE Software 2006, no. 6, p. 68",
    "searchText": ""
  },
  {
    "quote": "The art of telling <b>a compelling design story</b> is understanding what your audience knows and what they need to know about your design, and then plotting your <b>storyline</b> accordingly.",
    "title": "Explaining Your Design",
    "year": 2006,
    "number": 6,
    "page": 96,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.159",
    "selected": false,
    "authors": [
      {
        "name": "Rebecca J. Wirfs-Brock",
        "link": ""
      }
    ],
    "authorsList": "Rebecca J. Wirfs-Brock",
    "citation": "Rebecca J. Wirfs-Brock, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.159\">Explaining Your Design</a>, IEEE Software 2006, no. 6, p. 96",
    "searchText": ""
  },
  {
    "quote": "Software development currently seems to take a '<b>Roman</b>' approach; that is, it focuses on the contributions of a group of programmers at an organization. Instead, it should take a '<b>Greek</b>' approach, focusing on the contributions of individual, self-motivated programmers. But don't let any unorganized <b>Barbarian</b> programmers near!",
    "title": "Greece vs. Rome: Two Very Different Software Cultures",
    "year": 2006,
    "number": 6,
    "page": 111,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.163",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.163\">Greece vs. Rome: Two Very Different Software Cultures</a>, IEEE Software 2006, no. 6, p. 111",
    "searchText": ""
  },
  {
    "quote": "Despite the challenges and <b>complexities</b> involved in organizing and managing <b>globally distributed software development</b>, this phenomenon's pace has been remarkable. Global software development seems to have become a <b>business necessity</b> for various reasons, including cost, scarcity of resources, and the need to locate development closer to the customers. In fact, it is fast becoming a <b>pervasive business phenomenon</b>.",
    "title": "Guest Editors' Introduction:  Global Software Development: How Far Have We Come?",
    "year": 2006,
    "number": 5,
    "page": 17,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.126",
    "selected": false,
    "authors": [
      {
        "name": "Deependra Moitra",
        "link": ""
      },
      {
        "name": "Daniela Damian",
        "link": ""
      }
    ],
    "authorsList": "Deependra Moitra, Daniela Damian",
    "citation": "Deependra Moitra, Daniela Damian, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.126\">Guest Editors' Introduction:  Global Software Development: How Far Have We Come?</a>, IEEE Software 2006, no. 5, p. 17",
    "searchText": ""
  },
  {
    "quote": "Three closing comments are in order. ... practices that promote <b>local knowledge</b> movement (such as informal discussions with peers) make <b>global knowledge management difficult</b>. ... a common error we've encountered is having different, <b>unconnected KMSs</b> in place. ... trying to <b>unify different cultures</b> in global organizations (except under crisis-management circumstances) might <b>not be the right approach</b>.",
    "title": "Managing Knowledge in Global Software Development Efforts: Issues and Practices",
    "year": 2006,
    "number": 5,
    "page": 30,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.135",
    "selected": false,
    "authors": [
      {
        "name": "Peter Baloh",
        "link": ""
      },
      {
        "name": "Kevin C. Desouza",
        "link": ""
      },
      {
        "name": "Yukika Awazu",
        "link": ""
      }
    ],
    "authorsList": "Peter Baloh, Kevin C. Desouza, Yukika Awazu",
    "citation": "Peter Baloh, Kevin C. Desouza, Yukika Awazu, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.135\">Managing Knowledge in Global Software Development Efforts: Issues and Practices</a>, IEEE Software 2006, no. 5, p. 30",
    "searchText": ""
  },
  {
    "quote": "The availability of <b>testing infrastructure</b> is a major factor in product development project costs. Software <b>virtualization</b> is a powerful mechanism for <b>simulating a test setup</b> on a few desktops that would otherwise require 'real' equipment.",
    "title": "Test Optimization Using Software Virtualization",
    "year": 2006,
    "number": 5,
    "page": 66,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.143",
    "selected": false,
    "authors": [
      {
        "name": "Swaminathan Seetharaman",
        "link": ""
      },
      {
        "name": "Krishna Murthy B.V.S.",
        "link": ""
      }
    ],
    "authorsList": "Swaminathan Seetharaman, Krishna Murthy B.V.S.",
    "citation": "Swaminathan Seetharaman, Krishna Murthy B.V.S., <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.143\">Test Optimization Using Software Virtualization</a>, IEEE Software 2006, no. 5, p. 66",
    "searchText": ""
  },
  {
    "quote": "<b>Participation in open source projects</b> can <b>make us better programmers</b> by exposing us to maintenance, new technologies, and different application domains, and make us better system administrators by forcing us to tinker with complex system setups. ",
    "title": "Open Source and Professional Advancement",
    "year": 2006,
    "number": 5,
    "page": 70,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.136",
    "selected": false,
    "authors": [
      {
        "name": "Diomidis Spinellis",
        "link": ""
      }
    ],
    "authorsList": "Diomidis Spinellis",
    "citation": "Diomidis Spinellis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.136\">Open Source and Professional Advancement</a>, IEEE Software 2006, no. 5, p. 70",
    "searchText": ""
  },
  {
    "quote": "The following is a <b>familiar scenario</b>: management, feeling pressure from corporate headquarters and the marketplace, <b>dictates</b> that a product will be <b>released ahead of</b> the agreed-upon <b>schedule</b>. This is an all-too-common example of a company's political climate in which influential people base their desire for success more on <b>personal agendas</b> than on quality. This scenario illustrates two key issues: the <b>frustrations</b> involved in <b>producing quality products</b> and the <b>conflicts</b> between self and team. ",
    "title": "When Politics Overshadow Software Quality",
    "year": 2006,
    "number": 5,
    "page": 72,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.145",
    "selected": false,
    "authors": [
      {
        "name": "Fran Boehme Mackin",
        "link": ""
      },
      {
        "name": "Scott Stribrny",
        "link": ""
      }
    ],
    "authorsList": "Fran Boehme Mackin, Scott Stribrny",
    "citation": "Fran Boehme Mackin, Scott Stribrny, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.145\">When Politics Overshadow Software Quality</a>, IEEE Software 2006, no. 5, p. 72",
    "searchText": ""
  },
  {
    "quote": "'Do you use <b>the same password</b> for multiple Web sites?' ... <b>41 percent</b> of the respondents said they always use <b>the same password</b>, <b>45 percent</b> said they have a <b>few different passwords</b>, and <b>14 percent</b> said they <b>never use the same password</b> on multiple Web sites. Those 14 percent probably either <b>don't have an Internet connection</b> or are '<b>security professionals</b>.' The problem is that where the 'security professional' sees prudent, responsible behavior, users <b>simply see overhead</b> that gets in the way of performing whatever task they're trying to do.",
    "title": "Passwords and Passion",
    "year": 2006,
    "number": 4,
    "page": 5,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.110",
    "selected": false,
    "authors": [
      {
        "name": "Warren Harrison",
        "link": ""
      }
    ],
    "authorsList": "Warren Harrison",
    "citation": "Warren Harrison, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.110\">Passwords and Passion</a>, IEEE Software 2006, no. 4, p. 5",
    "searchText": ""
  },
  {
    "quote": "When <b>things go right</b>, software hums along like <b>well-oiled machinery</b>--receive an event, twiddle with inputs, send a flurry of messages, change the system state, interact with the environment or users, then wait for the next chunk of work. <b>Smooth</b>. Mechanical. Predictable. But what happens when <b>something goes wrong</b>? How should you design your software to <b>detect</b>, <b>react</b>, and <b>recover</b> from <b>exceptional conditions</b>?",
    "title": "Designing for Recovery",
    "year": 2006,
    "number": 4,
    "page": 11,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.98",
    "selected": false,
    "authors": [
      {
        "name": "Rebecca Wirfs-Brock",
        "link": ""
      }
    ],
    "authorsList": "Rebecca Wirfs-Brock",
    "citation": "Rebecca Wirfs-Brock, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.98\">Designing for Recovery</a>, IEEE Software 2006, no. 4, p. 11",
    "searchText": ""
  },
  {
    "quote": "Software <b>development</b> is ultimately an <b>engineering activity</b>, whose primary activity is to <b>deliver executable artifacts</b> in a manner that <b>balances the forces</b> on that system. The forces that swirl around a software-intensive system include not only its purely <b>functional</b> requirements but also a multitude of <b>nonfunctional</b> ones, such as reliability, portability, and scalability (often called a system's -ilities).",
    "title": "From Small to Gargantuan",
    "year": 2006,
    "number": 4,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.102",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.102\">From Small to Gargantuan</a>, IEEE Software 2006, no. 4, p. 14",
    "searchText": ""
  },
  {
    "quote": "<b>[S]oftware testing</b> is still one of the more neglected practices within the software development life cycle.",
    "title": "Guest Editors' Introduction: Software Testing Practices in Industry",
    "year": 2006,
    "number": 4,
    "page": 19,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.104",
    "selected": false,
    "authors": [
      {
        "name": "Natalia Juristo",
        "link": ""
      },
      {
        "name": "Ana M. Moreno",
        "link": ""
      },
      {
        "name": "Wolfgang Strigel",
        "link": ""
      }
    ],
    "authorsList": "Natalia Juristo, Ana M. Moreno, Wolfgang Strigel",
    "citation": "Natalia Juristo, Ana M. Moreno, Wolfgang Strigel, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.104\">Guest Editors' Introduction: Software Testing Practices in Industry</a>, IEEE Software 2006, no. 4, p. 19",
    "searchText": ""
  },
  {
    "quote": "Most companies and testing books use the <b>term unit testing</b>, but its <b>semantics varies</b> widely in different organizations. ... Unit testing means <b>testing the smallest separate module</b> in the system. Some people ... stress that it's the smallest specified module, but opinions differ about the need for specifications. Regardless, unit testing is <b>technically oriented</b>, with in/out parameters.",
    "title": "A Survey of Unit Testing Practices",
    "year": 2006,
    "number": 4,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.91",
    "selected": false,
    "authors": [
      {
        "name": "Per Runeson",
        "link": ""
      }
    ],
    "authorsList": "Per Runeson",
    "citation": "Per Runeson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.91\">A Survey of Unit Testing Practices</a>, IEEE Software 2006, no. 4, p. 22",
    "searchText": ""
  },
  {
    "quote": "There's no language suitable for all tasks, and there probably won't ever be one. When <b>choosing a programming language</b>, you have to balance programmer <b>productivity</b>, <b>maintainability</b>, efficiency, portability, <b>tool support</b>, and software and hardware interfaces. ... for some tasks, adopting an existing <b>domain-specific</b> language, building a new one, or using a <b>general-purpose</b> declarative language can be the right choice.",
    "title": "Choosing a Programming Language",
    "year": 2006,
    "number": 4,
    "page": 62,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.97",
    "selected": false,
    "authors": [
      {
        "name": "Diomidis Spinellis",
        "link": ""
      }
    ],
    "authorsList": "Diomidis Spinellis",
    "citation": "Diomidis Spinellis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.97\">Choosing a Programming Language</a>, IEEE Software 2006, no. 4, p. 62",
    "searchText": ""
  },
  {
    "quote": "<b>Evidence-based reasoning</b> is becoming common in many fields. It's widely enshrined in the practice and teaching of medicine, law, and management, for example. <b>Evidence-based approaches</b> demand that, among other things, practitioners <b>systematically track</b> down the <b>best evidence</b> relating to some practice; <b>critically appraise</b> that evidence for validity, impact, and applicability; and <b>carefully document</b> it.",
    "title": "Evidence-Based Cost Estimation for Better-Quality Software",
    "year": 2006,
    "number": 4,
    "page": 64,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.99",
    "selected": false,
    "authors": [
      {
        "name": "Tim Menzies",
        "link": ""
      },
      {
        "name": "Jairus Hihn",
        "link": ""
      }
    ],
    "authorsList": "Tim Menzies, Jairus Hihn",
    "citation": "Tim Menzies, Jairus Hihn, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.99\">Evidence-Based Cost Estimation for Better-Quality Software</a>, IEEE Software 2006, no. 4, p. 64",
    "searchText": ""
  },
  {
    "quote": "Oddly enough, many software engineering issues and conflicts that were <b>relevant 20 years</b> ago are still <b>relevant today</b>.",
    "title": "How Much of the Software Engineering Old Still Remains New?",
    "year": 2006,
    "number": 4,
    "page": 103,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.106",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.106\">How Much of the Software Engineering Old Still Remains New?</a>, IEEE Software 2006, no. 4, p. 103",
    "searchText": ""
  },
  {
    "quote": "Every interesting software-intensive system has an <b>architecture</b>. While some of these architectures are intentional, most appear to be <b>accidental</b>. Philippe <b>Kruchten</b> has observed that 'the life of a software architect is a long and rapid <b>succession</b> of <b>suboptimal design</b> decisions taken partly <b>in the dark</b>.' ",
    "title": "The Accidental Architecture",
    "year": 2006,
    "number": 3,
    "page": 9,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.86",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.86\">The Accidental Architecture</a>, IEEE Software 2006, no. 3, p. 9",
    "searchText": ""
  },
  {
    "quote": "The ramifications of <b>failing</b> to completely and correctly <b>address security</b> can <b>devastate an organization</b>, not only in compromised data and financial cost but also in the time and energy spent to recover.",
    "title": "Security and Software Quality: An Interview with Frank Perry",
    "year": 2006,
    "number": 3,
    "page": 12,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.83",
    "selected": false,
    "authors": [
      {
        "name": "E. Ashlee Holbrook",
        "link": ""
      },
      {
        "name": "Jane Hayes",
        "link": ""
      },
      {
        "name": "Nancy Eickelmann",
        "link": ""
      }
    ],
    "authorsList": "E. Ashlee Holbrook, Jane Hayes, Nancy Eickelmann",
    "citation": "E. Ashlee Holbrook, Jane Hayes, Nancy Eickelmann, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.83\">Security and Software Quality: An Interview with Frank Perry</a>, IEEE Software 2006, no. 3, p. 12",
    "searchText": ""
  },
  {
    "quote": "[O]rganizations frequently commit to requirements and contracts to <b>boost short-term revenues</b> without properly aligning sales, product management, project management, and marketing. Such misalignment results in <b>insufficient capacity planning</b> or product-development resource allocation, thus delaying projects.",
    "title": "Understanding the Product Life Cycle: Four Key Requirements Engineering Techniques",
    "year": 2006,
    "number": 3,
    "page": 19,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.88",
    "selected": false,
    "authors": [
      {
        "name": "Christof Ebert",
        "link": ""
      }
    ],
    "authorsList": "Christof Ebert",
    "citation": "Christof Ebert, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.88\">Understanding the Product Life Cycle: Four Key Requirements Engineering Techniques</a>, IEEE Software 2006, no. 3, p. 19",
    "searchText": ""
  },
  {
    "quote": "<b>Ethnographies</b> - using video to <b>observe users</b> in their own work environments--can support <b>requirements elicitation</b>.",
    "title": "Supporting Requirements with Video-Based Analysis",
    "year": 2006,
    "number": 3,
    "page": 42,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.84",
    "selected": false,
    "authors": [
      {
        "name": "Paul Luff",
        "link": ""
      },
      {
        "name": "Marina Jirotka",
        "link": ""
      }
    ],
    "authorsList": "Paul Luff, Marina Jirotka",
    "citation": "Paul Luff, Marina Jirotka, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.84\">Supporting Requirements with Video-Based Analysis</a>, IEEE Software 2006, no. 3, p. 42",
    "searchText": ""
  },
  {
    "quote": "In recent years, the software engineering community has focused on <b>organizing</b> its <b>existing knowledge</b> and finding opportunities to transform that knowledge into a university curriculum. ... they've also focused largely on SE's engineering aspects, at the <b>expense of its human and social dimensions</b>.",
    "title": "Reflections on Software Engineering Education",
    "year": 2006,
    "number": 3,
    "page": 55,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.80",
    "selected": false,
    "authors": [
      {
        "name": "Hans van Vliet",
        "link": ""
      }
    ],
    "authorsList": "Hans van Vliet",
    "citation": "Hans van Vliet, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.80\">Reflections on Software Engineering Education</a>, IEEE Software 2006, no. 3, p. 55",
    "searchText": ""
  },
  {
    "quote": "<b>Debuggers</b> are cheap and effective tools. Typically we use them in a bottom-up fashion starting from the problem going to its source, but when this strategy fails, we might have to resort to a more tedious top-down breadth-first search. To locate bugs, we can also use <b>hardware-assisted data</b> and code <b>breakpoints</b>. For bugs that are difficult to reproduce, attaching a debugger to a running process as well as <b>postmortem</b> and <b>remote debugging</b> are some alternatives. Finally, we can <b>permanently embed</b> debugging knowledge in a program's source code, through <b>logging statements</b>.",
    "title": "Debuggers and Logging Frameworks",
    "year": 2006,
    "number": 3,
    "page": 98,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.70",
    "selected": false,
    "authors": [
      {
        "name": "Diomidis Spinellis",
        "link": ""
      }
    ],
    "authorsList": "Diomidis Spinellis",
    "citation": "Diomidis Spinellis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.70\">Debuggers and Logging Frameworks</a>, IEEE Software 2006, no. 3, p. 98",
    "searchText": ""
  },
  {
    "quote": "The <b>service-oriented paradigm</b> is founded on an assumption of <b>well-specified</b> and well-understood <b>contracts</b> that <b>isn't realized in practice</b>.",
    "title": "Improving the Predictable Assembly of Service-Oriented Architectures",
    "year": 2006,
    "number": 2,
    "page": 12,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.49",
    "selected": false,
    "authors": [
      {
        "name": "Brian A. Malloy",
        "link": ""
      },
      {
        "name": "Jeffrey M. Voas",
        "link": ""
      },
      {
        "name": "Jason O. Hallstrom",
        "link": ""
      },
      {
        "name": "Nicholas A. Kraft",
        "link": ""
      }
    ],
    "authorsList": "Brian A. Malloy, Jeffrey M. Voas, Jason O. Hallstrom, Nicholas A. Kraft",
    "citation": "Brian A. Malloy, Jeffrey M. Voas, Jason O. Hallstrom, Nicholas A. Kraft, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.49\">Improving the Predictable Assembly of Service-Oriented Architectures</a>, IEEE Software 2006, no. 2, p. 12",
    "searchText": ""
  },
  {
    "quote": "By studying ... architectural <b>patterns</b> and thus exposing ... systems' <b>inner beauty</b>, I hope to <b>inspire developers</b> who want to build on the experience of other well-engineered systems.",
    "title": "On Architecture",
    "year": 2006,
    "number": 2,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.52",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.52\">On Architecture</a>, IEEE Software 2006, no. 2, p. 16",
    "searchText": ""
  },
  {
    "quote": "Project teams can <b>improve requirements</b> just by making several easy steps, including defining <b>mission and scope</b>; identifying <b>stakeholders</b>, goals, and goal <b>conflicts</b>; describing <b>scenarios</b>, requirements, <b>justifications</b>, and <b>assumptions</b>; and agreeing on <b>priorities</b> and acceptance <b>criteria</b>.",
    "title": "10 Small Steps to Better Requirements",
    "year": 2006,
    "number": 2,
    "page": 19,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.34",
    "selected": false,
    "authors": [
      {
        "name": "Ian Alexander",
        "link": ""
      }
    ],
    "authorsList": "Ian Alexander",
    "citation": "Ian Alexander, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.34\">10 Small Steps to Better Requirements</a>, IEEE Software 2006, no. 2, p. 19",
    "searchText": ""
  },
  {
    "quote": "It's been 10 years since <b>David Garlan</b> and <b>Mary Shaw</b> wrote their seminal book <b>Software Architecture Perspective on an Emerging Discipline</b>, since <b>Maarten Boasson</b> edited a special issue of <b>IEEE Software on software architecture</b>, and since the first International <b>Software Architecture Workshop</b> took place. What has happened over these 10 years? What have we learned? Where do we look for information? What's the community around this discipline? And where are we going from here?",
    "title": "The Past, Present, and Future for Software Architecture",
    "year": 2006,
    "number": 2,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.59",
    "selected": false,
    "authors": [
      {
        "name": "Philippe Kruchten",
        "link": ""
      },
      {
        "name": "Henk Obbink",
        "link": ""
      },
      {
        "name": "Judith Stafford",
        "link": ""
      }
    ],
    "authorsList": "Philippe Kruchten, Henk Obbink, Judith Stafford",
    "citation": "Philippe Kruchten, Henk Obbink, Judith Stafford, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.59\">The Past, Present, and Future for Software Architecture</a>, IEEE Software 2006, no. 2, p. 22",
    "searchText": ""
  },
  {
    "quote": "In the near future, <b>software architecture</b> will attain the status of all truly successful technologies: It will be <b>taken for granted</b>.",
    "title": "The Golden Age of Software Architecture",
    "year": 2006,
    "number": 2,
    "page": 31,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.58",
    "selected": false,
    "authors": [
      {
        "name": "Paul Clements",
        "link": ""
      },
      {
        "name": "Mary Shaw",
        "link": ""
      }
    ],
    "authorsList": "Paul Clements, Mary Shaw",
    "citation": "Paul Clements, Mary Shaw, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.58\">The Golden Age of Software Architecture</a>, IEEE Software 2006, no. 2, p. 31",
    "searchText": ""
  },
  {
    "quote": "<b>UML</b> has been around since 1997. ... UML is <b>used</b> rather <b>loosely</b> and that UML models are often <b>incomplete</b>. This leads to miscommunication and other implementation and maintenance problems.",
    "title": "In Practice: UML Software Architecture and Design Description",
    "year": 2006,
    "number": 2,
    "page": 40,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.50",
    "selected": false,
    "authors": [
      {
        "name": "Michel Chaudron",
        "link": ""
      },
      {
        "name": "Johan Muskens",
        "link": ""
      },
      {
        "name": "Christian Lange",
        "link": ""
      }
    ],
    "authorsList": "Michel Chaudron, Johan Muskens, Christian Lange",
    "citation": "Michel Chaudron, Johan Muskens, Christian Lange, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.50\">In Practice: UML Software Architecture and Design Description</a>, IEEE Software 2006, no. 2, p. 40",
    "searchText": ""
  },
  {
    "quote": "Including <b>architecture-centric design</b> and analysis methods in the <b>Extreme Programming framework</b> can help software developers address quality attributes in an explicit, methodical, engineering-principled way.",
    "title": "Software Architecture-Centric Methods and Agile Development",
    "year": 2006,
    "number": 2,
    "page": 47,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.54",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Nord",
        "link": ""
      },
      {
        "name": "James E. Tomayko",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Nord, James E. Tomayko",
    "citation": "Robert L. Nord, James E. Tomayko, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.54\">Software Architecture-Centric Methods and Agile Development</a>, IEEE Software 2006, no. 2, p. 47",
    "searchText": ""
  },
  {
    "quote": "<b>Service-Oriented Architecture (SOA)</b> represents a paradigm consisting of a set of <b>architectural principles</b> for <b>building loosely coupled software systems</b>. Actually, the SOA paradigm applies not only to XML Web services but also to <b>other technologies</b> such as email clients and servers and message-oriented middleware.",
    "title": "Using Architectural Patterns and Blueprints for Service-Oriented Architecture",
    "year": 2006,
    "number": 2,
    "page": 54,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.60",
    "selected": false,
    "authors": [
      {
        "name": "Michael Stal",
        "link": ""
      }
    ],
    "authorsList": "Michael Stal",
    "citation": "Michael Stal, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.60\">Using Architectural Patterns and Blueprints for Service-Oriented Architecture</a>, IEEE Software 2006, no. 2, p. 54",
    "searchText": ""
  },
  {
    "quote": "<b>Wikis</b> have become one of the most popular tool shells. You can find them just about everywhere that demands effective <b>collaboration</b> and <b>knowledge sharing</b> at a <b>low budget</b>. Wikipedia has certainly enhanced their popularity, but they also have a place in intranet-based applications such as <b>defect</b> tracking, <b>requirements</b> management, <b>test-case</b> management, and project portals.",
    "title": "Using Wikis in Software Development",
    "year": 2006,
    "number": 2,
    "page": 88,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.62",
    "selected": false,
    "authors": [
      {
        "name": "Panagiotis Louridas",
        "link": ""
      }
    ],
    "authorsList": "Panagiotis Louridas",
    "citation": "Panagiotis Louridas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.62\">Using Wikis in Software Development</a>, IEEE Software 2006, no. 2, p. 88",
    "searchText": ""
  },
  {
    "quote": "One way to <b>deal with bugs</b> is to <b>avoid them entirely</b> through stringent quality control. To conserve our valuable resources, we can use tools to catch the bugs before they end-up in production code. We can use <b>type-safe</b> languages, pay attention to <b>compiler warnings</b>, adopt specialized <b>bug-finding tools</b>, or we can adjust our code to make it locate bugs during <b>testing</b>.",
    "title": "Bug Busters",
    "year": 2006,
    "number": 2,
    "page": 92,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.40",
    "selected": false,
    "authors": [
      {
        "name": "Diomidis Spinellis",
        "link": ""
      }
    ],
    "authorsList": "Diomidis Spinellis",
    "citation": "Diomidis Spinellis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.40\">Bug Busters</a>, IEEE Software 2006, no. 2, p. 92",
    "searchText": ""
  },
  {
    "quote": "Although design is a highly creative activity, we can still <b>learn fundamental design skills</b> - and accomplish a lot with them.",
    "title": "Looking for Powerful Abstractions",
    "year": 2006,
    "number": 1,
    "page": 13,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.22",
    "selected": false,
    "authors": [
      {
        "name": "Rebecca J. Wirfs-Brock",
        "link": ""
      }
    ],
    "authorsList": "Rebecca J. Wirfs-Brock",
    "citation": "Rebecca J. Wirfs-Brock, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.22\">Looking for Powerful Abstractions</a>, IEEE Software 2006, no. 1, p. 13",
    "searchText": ""
  },
  {
    "quote": "<b>Basili's</b> contributions cover three broad areas: research in the 1970s and early 1980s on <b>software measurement</b> and the <b>Goal Question Metric (GQM) model</b>, research in the 1980s and 1990s on these measurement ideas' maturation into a software engineering model of empirical studies, including the development of the <b>Quality Improvement Paradigm (QIP)</b> and the influence of the NASA Goddard Space Flight Center Software Engineering Laboratory, and research since 1990 in the Experience Factory as a model for creating learning organizations for continuous software process improvement.",
    "title": "Victor R. Basili's Contributions to Software Quality",
    "year": 2006,
    "number": 1,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.33",
    "selected": false,
    "authors": [
      {
        "name": "Marvin Zelkowitz",
        "link": ""
      },
      {
        "name": "Carolyn Seaman",
        "link": ""
      },
      {
        "name": "Forrest Shull",
        "link": ""
      }
    ],
    "authorsList": "Marvin Zelkowitz, Carolyn Seaman, Forrest Shull",
    "citation": "Marvin Zelkowitz, Carolyn Seaman, Forrest Shull, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.33\">Victor R. Basili's Contributions to Software Quality</a>, IEEE Software 2006, no. 1, p. 16",
    "searchText": ""
  },
  {
    "quote": "<b>Aspect-oriented programming</b> technologies aim to improve system modularity by <b>modularizing crosscutting concerns</b>. Global properties and programming and design issues can lead to crosscutting concerns--for example, error handling or transaction code, interacting features, and reliability and security. ",
    "title": "Guest Editors' Introduction: Aspect-Oriented Programming",
    "year": 2006,
    "number": 1,
    "page": 20,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.12",
    "selected": false,
    "authors": [
      {
        "name": "Christa Schwanninger",
        "link": ""
      },
      {
        "name": "Gail Murphy",
        "link": ""
      }
    ],
    "authorsList": "Christa Schwanninger, Gail Murphy",
    "citation": "Christa Schwanninger, Gail Murphy, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.12\">Guest Editors' Introduction: Aspect-Oriented Programming</a>, IEEE Software 2006, no. 1, p. 20",
    "searchText": ""
  },
  {
    "quote": "<b>Service-oriented architectures</b> are designed to support loose coupling between interacting software applications. Using Web services technology, SOAs support the creation of distributed applications in a heterogeneous environment.",
    "title": "Unraveling Crosscutting Concerns in Web Services Middleware",
    "year": 2006,
    "number": 1,
    "page": 42,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.31",
    "selected": false,
    "authors": [
      {
        "name": "Viviane Jonckers",
        "link": ""
      },
      {
        "name": "Bart Verheecke",
        "link": ""
      },
      {
        "name": "Wim Vanderperren",
        "link": ""
      }
    ],
    "authorsList": "Viviane Jonckers, Bart Verheecke, Wim Vanderperren",
    "citation": "Viviane Jonckers, Bart Verheecke, Wim Vanderperren, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.31\">Unraveling Crosscutting Concerns in Web Services Middleware</a>, IEEE Software 2006, no. 1, p. 42",
    "searchText": ""
  },
  {
    "quote": "Aspect-oriented programming languages such as AspectJ offer new mechanisms for decomposing systems into modules and composing modules into systems. Common ways of using these mechanisms <b>couple aspects</b> to complex, changeable <b>implementation details</b>, which can <b>compromise modularity</b>.\t",
    "title": "Modular Software Design with Crosscutting Interfaces",
    "year": 2006,
    "number": 1,
    "page": 51,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.24",
    "selected": false,
    "authors": [
      {
        "name": "Macneil Shonle",
        "link": ""
      },
      {
        "name": "Yuanfang Cai",
        "link": ""
      },
      {
        "name": "Hridesh Rajan",
        "link": ""
      },
      {
        "name": "Nishit Tewari",
        "link": ""
      },
      {
        "name": "William G. Griswold",
        "link": ""
      },
      {
        "name": "Yuanyuan Song",
        "link": ""
      },
      {
        "name": "Kevin Sullivan",
        "link": ""
      }
    ],
    "authorsList": "Macneil Shonle, Yuanfang Cai, Hridesh Rajan, Nishit Tewari, William G. Griswold, Yuanyuan Song, Kevin Sullivan",
    "citation": "Macneil Shonle, Yuanfang Cai, Hridesh Rajan, Nishit Tewari, William G. Griswold, Yuanyuan Song, Kevin Sullivan, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.24\">Modular Software Design with Crosscutting Interfaces</a>, IEEE Software 2006, no. 1, p. 51",
    "searchText": ""
  },
  {
    "quote": "<b>[A]spects</b> are evident <b>earlier in the life cycle</b>, such as during requirements gathering and architecture development. Identifying these early aspects ensures that you can appropriately capture <b>aspects related to the problem domain</b> (as opposed to merely the implementation).",
    "title": "Discovering Early Aspects",
    "year": 2006,
    "number": 1,
    "page": 61,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.8",
    "selected": false,
    "authors": [
      {
        "name": "Awais Rashid",
        "link": ""
      },
      {
        "name": "Joao Ara&#x00FA;jo",
        "link": ""
      },
      {
        "name": "Paul C. Clements",
        "link": ""
      },
      {
        "name": "Ana Moreira",
        "link": ""
      },
      {
        "name": "Elisa Baniassad",
        "link": ""
      },
      {
        "name": "Bedir Tekinerdogan",
        "link": ""
      }
    ],
    "authorsList": "Awais Rashid, Joao Ara&#x00FA;jo, Paul C. Clements, Ana Moreira, Elisa Baniassad, Bedir Tekinerdogan",
    "citation": "Awais Rashid, Joao Ara&#x00FA;jo, Paul C. Clements, Ana Moreira, Elisa Baniassad, Bedir Tekinerdogan, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.8\">Discovering Early Aspects</a>, IEEE Software 2006, no. 1, p. 61",
    "searchText": ""
  },
  {
    "quote": "There's a <b>subtle way to lose your integrity</b>: trying to do a task as someone else would have you do it, rather than as you believe it should be done.",
    "title": "Of Health, Trust, Money ... and Integrity",
    "year": 2006,
    "number": 1,
    "page": 119,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2006.25",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2006.25\">Of Health, Trust, Money ... and Integrity</a>, IEEE Software 2006, no. 1, p. 119",
    "searchText": ""
  },
  {
    "quote": "Software engineering is a <b>decision-intensive discipline</b>. It still struggles with basic questions regarding the <b>utility of models</b>. Can researchers help software practitioners by building models that make explicit the knowledge hidden in various software resources?",
    "title": "Guest Editor's Introduction: The Promise of Public Software Engineering Data Repositories",
    "year": 2005,
    "number": 6,
    "page": 20,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.153",
    "selected": false,
    "authors": [
      {
        "name": "Bojan Cukic",
        "link": ""
      }
    ],
    "authorsList": "Bojan Cukic",
    "citation": "Bojan Cukic, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.153\">Guest Editor's Introduction: The Promise of Public Software Engineering Data Repositories</a>, IEEE Software 2005, no. 6, p. 20",
    "searchText": ""
  },
  {
    "quote": "The '<b>art of release planning</b>' refers to relying on human intuition, communication, and capabilities to negotiate between conflicting objectives and constraints. The '<b>science of release planning</b>' refers to formalizing the problem and applying computational algorithms to generate best solutions.",
    "title": "The Art and Science of Software Release Planning",
    "year": 2005,
    "number": 6,
    "page": 47,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.164",
    "selected": false,
    "authors": [
      {
        "name": "G?nther Ruhe",
        "link": ""
      },
      {
        "name": "Moshood Omolade Saliu",
        "link": ""
      }
    ],
    "authorsList": "G?nther Ruhe, Moshood Omolade Saliu",
    "citation": "G?nther Ruhe, Moshood Omolade Saliu, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.164\">The Art and Science of Software Release Planning</a>, IEEE Software 2005, no. 6, p. 47",
    "searchText": ""
  },
  {
    "quote": "The field of software engineering would greatly benefit from detailed research on <b>why some software builders perform better than others</b>, but this isn't happening.",
    "title": "A Follow-the-Leader Story with a Strange Ending",
    "year": 2005,
    "number": 6,
    "page": 111,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.144",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.144\">A Follow-the-Leader Story with a Strange Ending</a>, IEEE Software 2005, no. 6, p. 111",
    "searchText": ""
  },
  {
    "quote": "Because we must balance the enterprise architect's goals with the needs of the agile development organization and the users driving the application's development, it helps to have <b>enterprise architects join the development team</b>. This provides opportunities to address the needs of all stakeholders: architects, developers, and business users.",
    "title": "Enterprise Architects Join the Team",
    "year": 2005,
    "number": 5,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.119",
    "selected": false,
    "authors": [
      {
        "name": "Rebecca J. Parsons",
        "link": ""
      }
    ],
    "authorsList": "Rebecca J. Parsons",
    "citation": "Rebecca J. Parsons, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.119\">Enterprise Architects Join the Team</a>, IEEE Software 2005, no. 5, p. 16",
    "searchText": ""
  },
  {
    "quote": "<b>Twenty years</b> is a very long time in the computing field. Yet, <b>SEPM's</b> [software engineering project management] progress has been <b>agonizingly slow</b> in many ways, probably because it's driven more by <b>human behavior</b> than by technology. People change their behavior much more slowly than technology advances. ",
    "title": "Guest Editors' Introduction:  Software Engineering Project Management 20 Years Later",
    "year": 2005,
    "number": 5,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.137",
    "selected": false,
    "authors": [
      {
        "name": "Arthur B. Pyster",
        "link": ""
      },
      {
        "name": "Richard H. Thayer",
        "link": ""
      }
    ],
    "authorsList": "Arthur B. Pyster, Richard H. Thayer",
    "citation": "Arthur B. Pyster, Richard H. Thayer, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.137\">Guest Editors' Introduction:  Software Engineering Project Management 20 Years Later</a>, IEEE Software 2005, no. 5, p. 18",
    "searchText": ""
  },
  {
    "quote": "Our discussions with <b>traditional developers and managers</b> concerning <b>agile software development</b> practices nearly always contain two somewhat contradictory ideas. They find that on small, stand-alone projects, agile practices are less burdensome and more in tune with the software industry's increasing needs for rapid development and coping with continuous change. However, they're frustrated with <b>the difficulty of scaling up</b> and integrating them into traditional, top-down systems development organizations.",
    "title": "Management Challenges to Implementing Agile Processes in Traditional Development Organizations",
    "year": 2005,
    "number": 5,
    "page": 30,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.129",
    "selected": false,
    "authors": [
      {
        "name": "Richard Turner",
        "link": ""
      },
      {
        "name": "Barry Boehm",
        "link": ""
      }
    ],
    "authorsList": "Richard Turner, Barry Boehm",
    "citation": "Richard Turner, Barry Boehm, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.129\">Management Challenges to Implementing Agile Processes in Traditional Development Organizations</a>, IEEE Software 2005, no. 5, p. 30",
    "searchText": ""
  },
  {
    "quote": "[U]se a <b>steering leadership</b> style rather than the detailed <b>plan-and-track</b> leadership style encouraged by conventional wisdom.",
    "title": "Successful Software Management Style: Steering and Balance",
    "year": 2005,
    "number": 5,
    "page": 40,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.138",
    "selected": false,
    "authors": [
      {
        "name": "Walker Royce",
        "link": ""
      }
    ],
    "authorsList": "Walker Royce",
    "citation": "Walker Royce, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.138\">Successful Software Management Style: Steering and Balance</a>, IEEE Software 2005, no. 5, p. 40",
    "searchText": ""
  },
  {
    "quote": "An enormous <b>intellectual distance</b> exists between the fields of <b>computer science</b> and <b>information systems</b>, which needs to be fixed soon.",
    "title": "Never the CS and IS Twain Shall Meet?",
    "year": 2005,
    "number": 5,
    "page": 119,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.130",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.130\">Never the CS and IS Twain Shall Meet?</a>, IEEE Software 2005, no. 5, p. 119",
    "searchText": ""
  },
  {
    "quote": "[W]riting <b>stand-alone</b> tools that you can <b>combine</b> efficiently with others to handle more demanding tasks appears to be becoming a <b>forgotten art</b>.",
    "title": "Tool Writing: A Forgotten Art?",
    "year": 2005,
    "number": 4,
    "page": 9,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.111",
    "selected": false,
    "authors": [
      {
        "name": "Diomidis Spinellis",
        "link": ""
      }
    ],
    "authorsList": "Diomidis Spinellis",
    "citation": "Diomidis Spinellis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.111\">Tool Writing: A Forgotten Art?</a>, IEEE Software 2005, no. 4, p. 9",
    "searchText": ""
  },
  {
    "quote": "<b>JUnit</b> is an open source Java library that purports to make <b>unit testing</b> so <b>much fun</b> that programmers will actually want to write tests for their code.",
    "title": "JUnit: Unit Testing and Coding in Tandem",
    "year": 2005,
    "number": 4,
    "page": 12,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.100",
    "selected": false,
    "authors": [
      {
        "name": "Panagiotis Louridas",
        "link": ""
      }
    ],
    "authorsList": "Panagiotis Louridas",
    "citation": "Panagiotis Louridas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.100\">JUnit: Unit Testing and Coding in Tandem</a>, IEEE Software 2005, no. 4, p. 12",
    "searchText": ""
  },
  {
    "quote": "One strategy that <b>originally</b> seemed <b>promising</b> was the notion of '<b>buy not build</b>.' Using <b>COTS</b> products is one way to implement this strategy, because software development then becomes the process of '<b>simply</b>' <b>integrating</b> COTS components. However, it turns out that dealing with COTS is a <b>high-risk</b> activity ...",
    "title": "Guest Editors' Introduction: Integrating COTS into the Development Process",
    "year": 2005,
    "number": 4,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.93",
    "selected": false,
    "authors": [
      {
        "name": "Alexander Egyed",
        "link": ""
      },
      {
        "name": "Dewayne E. Perry",
        "link": ""
      },
      {
        "name": "Hausi A. Muller",
        "link": ""
      }
    ],
    "authorsList": "Alexander Egyed, Dewayne E. Perry, Hausi A. Muller",
    "citation": "Alexander Egyed, Dewayne E. Perry, Hausi A. Muller, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.93\">Guest Editors' Introduction: Integrating COTS into the Development Process</a>, IEEE Software 2005, no. 4, p. 16",
    "searchText": ""
  },
  {
    "quote": "[T]he <b>availability</b> of the components <b>before the system</b> is built provides <b>early data</b> on their performance properties.",
    "title": "Performance Techniques for COTS Systems",
    "year": 2005,
    "number": 4,
    "page": 36,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.102",
    "selected": false,
    "authors": [
      {
        "name": "Murray Woodside",
        "link": ""
      },
      {
        "name": "Xiuping Wu",
        "link": ""
      },
      {
        "name": "Erik Putrycz",
        "link": ""
      }
    ],
    "authorsList": "Murray Woodside, Xiuping Wu, Erik Putrycz",
    "citation": "Murray Woodside, Xiuping Wu, Erik Putrycz, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.102\">Performance Techniques for COTS Systems</a>, IEEE Software 2005, no. 4, p. 36",
    "searchText": ""
  },
  {
    "quote": "What's the <b>state of the practice</b> of software engineering? If you look at current software engineering <b>books</b>, <b>journals</b>, and <b>conferences</b>, you <b>won't find much</b> of an answer.",
    "title": "A Sad SAC Story about the State of the Practice",
    "year": 2005,
    "number": 4,
    "page": 119,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.82",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.82\">A Sad SAC Story about the State of the Practice</a>, IEEE Software 2005, no. 4, p. 119",
    "searchText": ""
  },
  {
    "quote": "<b>Agile</b> programming is <b>design for change</b>, without refactoring and rebuilding.",
    "title": "Agile Programming: Design to Accommodate Change",
    "year": 2005,
    "number": 3,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.54",
    "selected": false,
    "authors": [
      {
        "name": "Dave Thomas",
        "link": ""
      }
    ],
    "authorsList": "Dave Thomas",
    "citation": "Dave Thomas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.54\">Agile Programming: Design to Accommodate Change</a>, IEEE Software 2005, no. 3, p. 14",
    "searchText": ""
  },
  {
    "quote": "<b>Kent Beck</b> wrote <b>eXtreme Programming eXplained</b> ... but the book has also caused an extraordinary degree of vitriol. ... The reasons appear to include a <b>focus on</b> writing <b>programs</b> rather than analysis or design (also known as modeling); a <b>disdain for documentation</b> as such; and the <b>Communist</b> notion of working only <b>40 hours</b> a week.",
    "title": "Editor's Introduction: Adapting Agile Approaches to Your Project Needs",
    "year": 2005,
    "number": 3,
    "page": 17,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.61",
    "selected": false,
    "authors": [
      {
        "name": "Stephen J. Mellor",
        "link": ""
      }
    ],
    "authorsList": "Stephen J. Mellor",
    "citation": "Stephen J. Mellor, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.61\">Editor's Introduction: Adapting Agile Approaches to Your Project Needs</a>, IEEE Software 2005, no. 3, p. 17",
    "searchText": ""
  },
  {
    "quote": "[P]eople have claimed that <b>plan-based</b> and <b>agile</b> companies use very different project <b>management</b> techniques. ... managers using <b>agile</b> methods <b>focus on people</b> and <b>process</b> more than other managers. ... adopting <b>agile methods</b> appears to offer a good solution for <b>improving</b> the <b>management</b> of the development <b>process</b> and <b>customer relationships</b>.",
    "title": "Project Management in Plan-Based and Agile Companies",
    "year": 2005,
    "number": 3,
    "page": 21,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.75",
    "selected": false,
    "authors": [
      {
        "name": "Stefano De Panfilis",
        "link": ""
      },
      {
        "name": "Alberto Sillitti",
        "link": ""
      },
      {
        "name": "Martina Ceschi",
        "link": ""
      },
      {
        "name": "Giancarlo Succi",
        "link": ""
      }
    ],
    "authorsList": "Stefano De Panfilis, Alberto Sillitti, Martina Ceschi, Giancarlo Succi",
    "citation": "Stefano De Panfilis, Alberto Sillitti, Martina Ceschi, Giancarlo Succi, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.75\">Project Management in Plan-Based and Agile Companies</a>, IEEE Software 2005, no. 3, p. 21",
    "searchText": ""
  },
  {
    "quote": "[We] categorize projects into <b>dogs</b> (simple projects with low uncertainty), <b>colts</b> (simple projects with high uncertainty), <b>cows</b> (complex projects with low uncertainty), or <b>bulls</b> (complex projects with high uncertainty). We adapt our agile process by adding practices according to a project's profile.",
    "title": "Context-Adaptive Agility: Managing Complexity and Uncertainty",
    "year": 2005,
    "number": 3,
    "page": 28,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.60",
    "selected": false,
    "authors": [
      {
        "name": "Todd Little",
        "link": ""
      }
    ],
    "authorsList": "Todd Little",
    "citation": "Todd Little, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.60\">Context-Adaptive Agility: Managing Complexity and Uncertainty</a>, IEEE Software 2005, no. 3, p. 28",
    "searchText": ""
  },
  {
    "quote": "Requirements engineers must ... view <b>requirements</b> as a <b>sociotechnical discipline</b> and draw skills, techniques, and knowledge from other disciplines.",
    "title": "Learning from Other Disciplines",
    "year": 2005,
    "number": 3,
    "page": 54,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.68",
    "selected": false,
    "authors": [
      {
        "name": "Suzanne Robertson",
        "link": ""
      }
    ],
    "authorsList": "Suzanne Robertson",
    "citation": "Suzanne Robertson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.68\">Learning from Other Disciplines</a>, IEEE Software 2005, no. 3, p. 54",
    "searchText": ""
  },
  {
    "quote": "One of the <b>most robust</b> <b>findings in forecasting</b>, human judgment, and software estimation studies is that '<b>combination works</b>.' Apparently it doesn't matter whether the combination involves a <b>simple average</b> of estimates from different methods or a sophisticated weighting algorithm. A <b>simple average</b> offers a robust combination method unless one estimation method or expert is obviously more reliable than another. ... [A]n expert's <b>technical skill</b> level can be a <b>poor indicator</b> of accuracy, and it's rarely obvious, in advance, which expert will be the better estimator. This is one reason a <b>simple average</b> of outputs from different estimation experts and methods frequently offers the <b>most robust</b> and accurate combination method.",
    "title": "Practical Guidelines for Expert-Judgment-Based Software Effort Estimation",
    "year": 2005,
    "number": 3,
    "page": 57,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.73",
    "selected": false,
    "authors": [
      {
        "name": "Magne J&#248;rgensen",
        "link": ""
      }
    ],
    "authorsList": "Magne J&#248;rgensen",
    "citation": "Magne J&#248;rgensen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.73\">Practical Guidelines for Expert-Judgment-Based Software Effort Estimation</a>, IEEE Software 2005, no. 3, p. 57",
    "searchText": ""
  },
  {
    "quote": "<b>Text mining</b> is a relatively new research area associated with the creation of novel information resources from electronic text repositories. An <b>expert-witness database</b> based on text from legal, medical, and news documents demonstrates the successful application of text-mining techniques.",
    "title": "Mining Text for Expert Witnesses",
    "year": 2005,
    "number": 3,
    "page": 94,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.70",
    "selected": false,
    "authors": [
      {
        "name": "Christopher Dozier",
        "link": ""
      },
      {
        "name": "Peter Jackson",
        "link": ""
      }
    ],
    "authorsList": "Christopher Dozier, Peter Jackson",
    "citation": "Christopher Dozier, Peter Jackson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.70\">Mining Text for Expert Witnesses</a>, IEEE Software 2005, no. 3, p. 94",
    "searchText": ""
  },
  {
    "quote": "It's <b>difficult to have a problem</b> with anything <b>Martin Fowler</b> writes. He's obviously a skilled designer, he practices what he preaches, and he has a forceful command of the English language without being stuffy. ",
    "title": "UML Distilled: From Difficulties to Assets",
    "year": 2005,
    "number": 3,
    "page": 106,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.81",
    "selected": false,
    "authors": [
      {
        "name": "Stephen Mellor",
        "link": ""
      },
      {
        "name": "Christof Ebert",
        "link": ""
      },
      {
        "name": "Fernando Berzal",
        "link": ""
      }
    ],
    "authorsList": "Stephen Mellor, Christof Ebert, Fernando Berzal",
    "citation": "Stephen Mellor, Christof Ebert, Fernando Berzal, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.81\">UML Distilled: From Difficulties to Assets</a>, IEEE Software 2005, no. 3, p. 106",
    "searchText": ""
  },
  {
    "quote": "I want to question the unquestionable status of that <b>Standish report</b>. That's because, you see, my own observations lead me to believe that <b>something is</b> <b>terribly wrong</b> with those Standish findings.",
    "title": "IT Failure Rates - 70% or 10-15%?",
    "year": 2005,
    "number": 3,
    "page": 110,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.66",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.66\">IT Failure Rates - 70% or 10-15%?</a>, IEEE Software 2005, no. 3, p. 110",
    "searchText": ""
  },
  {
    "quote": "<b>Bug-tracking systems</b> help us <b>identify</b> the error in our software, <b>resolve</b> it, and <b>learn</b> from it.",
    "title": "Bugzilla, ITracker, and Other Bug Trackers",
    "year": 2005,
    "number": 2,
    "page": 11,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.32",
    "selected": false,
    "authors": [
      {
        "name": "Ismael Ciordia",
        "link": ""
      },
      {
        "name": "Nicol? Serrano",
        "link": ""
      }
    ],
    "authorsList": "Ismael Ciordia, Nicol? Serrano",
    "citation": "Ismael Ciordia, Nicol? Serrano, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.32\">Bugzilla, ITracker, and Other Bug Trackers</a>, IEEE Software 2005, no. 2, p. 11",
    "searchText": ""
  },
  {
    "quote": "Any <b>bold advance</b> needs some <b>time to mature</b>—to 'cross the chasm,' as Geoffrey Moore eloquently described, to get a critical mass of practitioners across our industry beyond the eager <b>early-adopter</b> stage. Techniques, practices, and methods must be <b>taught in schools</b> and must be supported by <b>tools</b>. They must <b>prove their value</b> beyond any reasonable doubt and sometimes even be enshrined in some industry <b>standard</b>.",
    "title": "Editor's Introduction: Software Design in a Postmodern Era",
    "year": 2005,
    "number": 2,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.38",
    "selected": false,
    "authors": [
      {
        "name": "Philippe Kruchten",
        "link": ""
      }
    ],
    "authorsList": "Philippe Kruchten",
    "citation": "Philippe Kruchten, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.38\">Editor's Introduction: Software Design in a Postmodern Era</a>, IEEE Software 2005, no. 2, p. 16",
    "searchText": ""
  },
  {
    "quote": "Explicitly <b>documenting</b> major architecture <b>decisions</b> makes the architecture development process more <b>structured</b> and <b>transparent</b>. Additionally, it clarifies the architects' <b>rationale</b> for stakeholders, designers, and other architects.",
    "title": "Architecture Decisions: Demystifying Architecture",
    "year": 2005,
    "number": 2,
    "page": 19,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.27",
    "selected": false,
    "authors": [
      {
        "name": "Art Akerman",
        "link": ""
      },
      {
        "name": "Jeff Tyree",
        "link": ""
      }
    ],
    "authorsList": "Art Akerman, Jeff Tyree",
    "citation": "Art Akerman, Jeff Tyree, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.27\">Architecture Decisions: Demystifying Architecture</a>, IEEE Software 2005, no. 2, p. 19",
    "searchText": ""
  },
  {
    "quote": "[E]lements such as <b>principles</b>, <b>heuristics</b>, <b>best practices</b>, '<b>bad smells</b>,' and <b>refactorings</b> are <b>not clearly defined</b>. Many of these elements are synonymous, and others are just vague concepts.",
    "title": "An Ontology for Microarchitectural Design Knowledge",
    "year": 2005,
    "number": 2,
    "page": 28,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.26",
    "selected": false,
    "authors": [
      {
        "name": "Mario Piattini",
        "link": ""
      },
      {
        "name": "Javier Garz?",
        "link": ""
      }
    ],
    "authorsList": "Mario Piattini, Javier Garz?",
    "citation": "Mario Piattini, Javier Garz?, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.26\">An Ontology for Microarchitectural Design Knowledge</a>, IEEE Software 2005, no. 2, p. 28",
    "searchText": ""
  },
  {
    "quote": "<b>Architecture reviews</b> ... <b>identify project</b> problems <b>before</b> they become <b>costly to fix</b> and provide timely information to upper management so that they can make <b>better-informed decisions</b>.",
    "title": "Architecture Reviews: Practice and Experience",
    "year": 2005,
    "number": 2,
    "page": 34,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.28",
    "selected": false,
    "authors": [
      {
        "name": "David M. Weiss",
        "link": ""
      },
      {
        "name": "Sandra A. Rozsypal",
        "link": ""
      },
      {
        "name": "Joseph F. Maranzano",
        "link": ""
      },
      {
        "name": "Gus H. Zimmerman",
        "link": ""
      },
      {
        "name": "Guy W. Warnken",
        "link": ""
      },
      {
        "name": "Patricia E. Wirth",
        "link": ""
      }
    ],
    "authorsList": "David M. Weiss, Sandra A. Rozsypal, Joseph F. Maranzano, Gus H. Zimmerman, Guy W. Warnken, Patricia E. Wirth",
    "citation": "David M. Weiss, Sandra A. Rozsypal, Joseph F. Maranzano, Gus H. Zimmerman, Guy W. Warnken, Patricia E. Wirth, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.28\">Architecture Reviews: Practice and Experience</a>, IEEE Software 2005, no. 2, p. 34",
    "searchText": ""
  },
  {
    "quote": "One of the key issues in <b>Model Driven Architecture</b> is <b>model mapping</b>--that is, the <b>transformation</b> of models from one formalism to another.",
    "title": "Model Mapping Using Formalism Extensions",
    "year": 2005,
    "number": 2,
    "page": 44,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.45",
    "selected": false,
    "authors": [
      {
        "name": "Jean-Louis Sourrouille",
        "link": ""
      },
      {
        "name": "Guy Caplat",
        "link": ""
      }
    ],
    "authorsList": "Jean-Louis Sourrouille, Guy Caplat",
    "citation": "Jean-Louis Sourrouille, Guy Caplat, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.45\">Model Mapping Using Formalism Extensions</a>, IEEE Software 2005, no. 2, p. 44",
    "searchText": ""
  },
  {
    "quote": "<b>[S]oftware engineers</b> use certain common terms, such as <b>design</b>, analysis, and documentation, in significantly <b>different ways</b> from other engineers. ... '<b>design</b>' in <b>software engineering</b> is <b>more limited</b> in scope than in other fields.",
    "title": "Casting Software Design in the Function-Behavior-Structure Framework",
    "year": 2005,
    "number": 2,
    "page": 52,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.33",
    "selected": false,
    "authors": [
      {
        "name": "Philippe Kruchten",
        "link": ""
      }
    ],
    "authorsList": "Philippe Kruchten",
    "citation": "Philippe Kruchten, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.33\">Casting Software Design in the Function-Behavior-Structure Framework</a>, IEEE Software 2005, no. 2, p. 52",
    "searchText": ""
  },
  {
    "quote": "You <b>know</b> you're a <b>geek</b> when <b>going to the coffee shop</b> gets you thinking about interaction patterns between loosely coupled systems. ... Interestingly, the <b>optimization for throughput</b> results in a <b>concurrent and asynchronous processing model</b>: when you place your order, the cashier marks a coffee cup with your order and places it into a queue. ",
    "title": "Your Coffee Shop Doesn't Use Two-Phase Commit",
    "year": 2005,
    "number": 2,
    "page": 64,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.52",
    "selected": false,
    "authors": [
      {
        "name": "Gregor Hohpe",
        "link": ""
      }
    ],
    "authorsList": "Gregor Hohpe",
    "citation": "Gregor Hohpe, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.52\">Your Coffee Shop Doesn't Use Two-Phase Commit</a>, IEEE Software 2005, no. 2, p. 64",
    "searchText": ""
  },
  {
    "quote": "In many domains, the <b>problem space</b> is too <b>large</b> to <b>explore</b> up front. <b>Expert designers</b> often <b>explore</b> the <b>problem and solution</b> spaces <b>in parallel</b>, using the emerging solution space to decide what information to elicit next about the problem space. They also often look for chinks—that is, <b>omissions and inconsistencies</b>—in problems and requirement specifications that would enable them to discover more innovative solutions.",
    "title": "Guest Editors' Introduction: Shake, Rattle, and Requirements",
    "year": 2005,
    "number": 1,
    "page": 13,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.8",
    "selected": false,
    "authors": [
      {
        "name": "Neil Maiden",
        "link": ""
      },
      {
        "name": "Christof Ebert",
        "link": ""
      },
      {
        "name": "Suzanne Robertson",
        "link": ""
      }
    ],
    "authorsList": "Neil Maiden, Christof Ebert, Suzanne Robertson",
    "citation": "Neil Maiden, Christof Ebert, Suzanne Robertson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.8\">Guest Editors' Introduction: Shake, Rattle, and Requirements</a>, IEEE Software 2005, no. 1, p. 13",
    "searchText": ""
  },
  {
    "quote": "[S]ome <b>activities</b> are fundamental to all <b>RE</b> [requirements engineering] processes: <b>Elicitation</b>. Identify sources of information ... <b>Analysis</b>. Understand the requirements ... <b>Validation</b>. Go back to the system stakeholders and check ... <b>Negotiation</b>. ... reconcile conflicting views .... <b>Documentation</b>. Write down the requirements ... <b>Management</b>. Control the requirements changes ... ",
    "title": "Integrated Requirements Engineering: A Tutorial",
    "year": 2005,
    "number": 1,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.13",
    "selected": false,
    "authors": [
      {
        "name": "Ian Sommerville",
        "link": ""
      }
    ],
    "authorsList": "Ian Sommerville",
    "citation": "Ian Sommerville, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.13\">Integrated Requirements Engineering: A Tutorial</a>, IEEE Software 2005, no. 1, p. 16",
    "searchText": ""
  },
  {
    "quote": "<b>Patterns</b> are an established and well-known <b>format</b> for <b>capturing engineering knowledge</b>. ... practitioners use patterns to describe <b>reference solutions</b> to engineering problems and as guidelines for engineering procedures",
    "title": "Sharing Requirements Engineering Experience Using Patterns",
    "year": 2005,
    "number": 1,
    "page": 24,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.17",
    "selected": false,
    "authors": [
      {
        "name": "Lars Hagge",
        "link": ""
      },
      {
        "name": "Kathrin Lappe",
        "link": ""
      }
    ],
    "authorsList": "Lars Hagge, Kathrin Lappe",
    "citation": "Lars Hagge, Kathrin Lappe, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.17\">Sharing Requirements Engineering Experience Using Patterns</a>, IEEE Software 2005, no. 1, p. 24",
    "searchText": ""
  },
  {
    "quote": "The development of large, complex software products aimed for a broad <b>market</b> involves a continuous, massive <b>inflow</b> of <b>customers' wishes</b> (collected from the <b>market</b>) and product <b>requirements</b> (generated <b>inside</b> the developing <b>organization</b>). ",
    "title": "A Linguistic-Engineering Approach to Large-Scale Requirements Management",
    "year": 2005,
    "number": 1,
    "page": 32,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.1",
    "selected": false,
    "authors": [
      {
        "name": "Johan Natt och Dag",
        "link": ""
      },
      {
        "name": "Sjaak Brinkkemper",
        "link": ""
      },
      {
        "name": "Bj? Regnell",
        "link": ""
      },
      {
        "name": "Vincenzo Gervasi",
        "link": ""
      }
    ],
    "authorsList": "Johan Natt och Dag, Sjaak Brinkkemper, Bj? Regnell, Vincenzo Gervasi",
    "citation": "Johan Natt och Dag, Sjaak Brinkkemper, Bj? Regnell, Vincenzo Gervasi, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.1\">A Linguistic-Engineering Approach to Large-Scale Requirements Management</a>, IEEE Software 2005, no. 1, p. 32",
    "searchText": ""
  },
  {
    "quote": "Producing good systems relies on asking '<b>the right questions</b>' to discover users' real requirements. <b>Family therapy</b> provides <b>interview techniques</b> and different types of questions that can <b>generate new knowledge</b>.",
    "title": "On Systems Coaching",
    "year": 2005,
    "number": 1,
    "page": 52,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.15",
    "selected": false,
    "authors": [
      {
        "name": "Susanne Kandrup",
        "link": ""
      }
    ],
    "authorsList": "Susanne Kandrup",
    "citation": "Susanne Kandrup, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.15\">On Systems Coaching</a>, IEEE Software 2005, no. 1, p. 52",
    "searchText": ""
  },
  {
    "quote": "The word '<b>all</b>' and the plural can be <b>misused</b> in ways that create <b>ambiguities</b> and other problems in computer-based system specification documents.",
    "title": "The Syntactically Dangerous All and Plural in Specifications",
    "year": 2005,
    "number": 1,
    "page": 55,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.22",
    "selected": false,
    "authors": [
      {
        "name": "Erik Kamsties",
        "link": ""
      },
      {
        "name": "Daniel M. Berry",
        "link": ""
      }
    ],
    "authorsList": "Erik Kamsties, Daniel M. Berry",
    "citation": "Erik Kamsties, Daniel M. Berry, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.22\">The Syntactically Dangerous All and Plural in Specifications</a>, IEEE Software 2005, no. 1, p. 55",
    "searchText": ""
  },
  {
    "quote": "We like to think of <b>science</b> with certainty, where results are clear when rules are understood and followed. But <b>science</b> is <b>rife with uncertainty</b>, and we must acknowledge its role and the <b>resulting risks</b> we take, both when we <b>generate evidence</b> and when we use it to <b>build arguments</b>. <b>Lawyers</b> recognize the uncertainty associated with various types of evidence, so they look for pieces of evidence that in concert have more '<b>evidential force</b>' than when used separately. ",
    "title": "Source Code Review Systems",
    "year": 2005,
    "number": 1,
    "page": 74,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.20",
    "selected": false,
    "authors": [
      {
        "name": "Jason Remillard",
        "link": ""
      }
    ],
    "authorsList": "Jason Remillard",
    "citation": "Jason Remillard, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.20\">Source Code Review Systems</a>, IEEE Software 2005, no. 1, p. 74",
    "searchText": ""
  },
  {
    "quote": "So there you have it. I'm <b>mad as hell</b>, I don't want to take this anymore, and I suppose the truth of the matter is that I can't do anything about it!",
    "title": "Viruses Are Beginning to Get to Me!",
    "year": 2005,
    "number": 1,
    "page": 102,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2005.24",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2005.24\">Viruses Are Beginning to Get to Me!</a>, IEEE Software 2005, no. 1, p. 102",
    "searchText": ""
  },
  {
    "quote": "<b>Software changes</b> are a lot <b>like rain</b>. While a <b>few drops</b> here and there usually <b>aren't</b> that much of a <b>problem</b>, a <b>steady downpour</b> can be <b>damaging</b>—and a deluge can wipe out everything you've carefully built. ",
    "title": "Persistent Software Attributes",
    "year": 2004,
    "number": 6,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.46",
    "selected": false,
    "authors": [
      {
        "name": "Maarten Boasson",
        "link": ""
      },
      {
        "name": "Terry Bollinger",
        "link": ""
      },
      {
        "name": "Jeffrey Voas",
        "link": ""
      }
    ],
    "authorsList": "Maarten Boasson, Terry Bollinger, Jeffrey Voas",
    "citation": "Maarten Boasson, Terry Bollinger, Jeffrey Voas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.46\">Persistent Software Attributes</a>, IEEE Software 2004, no. 6, p. 16",
    "searchText": ""
  },
  {
    "quote": "In contemporary societies, <b>individuals</b> and <b>organizations</b> increasingly <b>depend on</b> services delivered by sophisticated <b>software</b>-intensive systems. <b>Dependability</b> has become a key <b>systems property</b>, which needs to be engineered and guaranteed regardless of continuous, rapid, and unpredictable technological and context changes.",
    "title": "A Unified Model of Dependability: Capturing Dependability in Context",
    "year": 2004,
    "number": 6,
    "page": 19,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.30",
    "selected": false,
    "authors": [
      {
        "name": "Paolo Donzelli",
        "link": ""
      },
      {
        "name": "Victor Basili",
        "link": ""
      },
      {
        "name": "Sima Asgari",
        "link": ""
      }
    ],
    "authorsList": "Paolo Donzelli, Victor Basili, Sima Asgari",
    "citation": "Paolo Donzelli, Victor Basili, Sima Asgari, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.30\">A Unified Model of Dependability: Capturing Dependability in Context</a>, IEEE Software 2004, no. 6, p. 19",
    "searchText": ""
  },
  {
    "quote": "[I]f you don't carefully and accurately <b>manage customizations</b> ... the result can be <b>skyrocketing development costs</b>, poor customer support, and an inability to respond quickly to new needs.",
    "title": "Automated Management of Multicustomer Code Bases",
    "year": 2004,
    "number": 6,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.35",
    "selected": false,
    "authors": [
      {
        "name": "Sonia Calzada",
        "link": ""
      },
      {
        "name": "Ismael Ciordia",
        "link": ""
      },
      {
        "name": "Fernando Alonso",
        "link": ""
      },
      {
        "name": "Nicol? Serrano",
        "link": ""
      }
    ],
    "authorsList": "Sonia Calzada, Ismael Ciordia, Fernando Alonso, Nicol? Serrano",
    "citation": "Sonia Calzada, Ismael Ciordia, Fernando Alonso, Nicol? Serrano, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.35\">Automated Management of Multicustomer Code Bases</a>, IEEE Software 2004, no. 6, p. 26",
    "searchText": ""
  },
  {
    "quote": "[I]f <b>developers</b> are willing to <b>work hard</b> and carefully <b>introduce an agile process</b> into their organization, their efforts should yield <b>positive results</b>.",
    "title": "Piloting XP on Four Mission-Critical Projects",
    "year": 2004,
    "number": 6,
    "page": 70,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.47",
    "selected": false,
    "authors": [
      {
        "name": "David Noftz",
        "link": ""
      },
      {
        "name": "Rekha Raghu",
        "link": ""
      },
      {
        "name": "Jerry Drobka",
        "link": ""
      }
    ],
    "authorsList": "David Noftz, Rekha Raghu, Jerry Drobka",
    "citation": "David Noftz, Rekha Raghu, Jerry Drobka, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.47\">Piloting XP on Four Mission-Critical Projects</a>, IEEE Software 2004, no. 6, p. 70",
    "searchText": ""
  },
  {
    "quote": "<b>Routine tasks</b> are the easiest ones for programmers to <b>avoid</b>. So, to develop a single program—even a program with only one file — it's common to have a script that compiles it with the desired options and executes it with some arguments. When your project has hundreds or thousands of files and a large team of developers, the script isn't a utility, but a necessity; it becomes even more critical when the project's structures are complicated and the dependencies are hard to remember.",
    "title": "Ant: Automating the Process of Building Applications",
    "year": 2004,
    "number": 6,
    "page": 89,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.33",
    "selected": false,
    "authors": [
      {
        "name": "Ismael Ciordia",
        "link": ""
      },
      {
        "name": "Nicol? Serrano",
        "link": ""
      }
    ],
    "authorsList": "Ismael Ciordia, Nicol? Serrano",
    "citation": "Ismael Ciordia, Nicol? Serrano, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.33\">Ant: Automating the Process of Building Applications</a>, IEEE Software 2004, no. 6, p. 89",
    "searchText": ""
  },
  {
    "quote": "Many software projects involve <b>at least one stakeholder</b> <b>who secretly wants the project to fail</b>. Finding this stakeholder can be difficult but is important to ensuring the project's success.",
    "title": "Political Reasons for Failed Software Projects",
    "year": 2004,
    "number": 6,
    "page": 102,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.48",
    "selected": false,
    "authors": [
      {
        "name": "Johann Rost",
        "link": ""
      }
    ],
    "authorsList": "Johann Rost",
    "citation": "Johann Rost, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.48\">Political Reasons for Failed Software Projects</a>, IEEE Software 2004, no. 6, p. 102",
    "searchText": ""
  },
  {
    "quote": "[T]here's a <b>simple technique</b> that will dramatically reduce the number of <b>these bugs</b> in your software. ... The technique is to build your software to '<b>fail fast</b>.'",
    "title": "Fail Fast",
    "year": 2004,
    "number": 5,
    "page": 21,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1331296",
    "selected": false,
    "authors": [
      {
        "name": "Jim Shore",
        "link": ""
      }
    ],
    "authorsList": "Jim Shore",
    "citation": "Jim Shore, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1331296\">Fail Fast</a>, IEEE Software 2004, no. 5, p. 21",
    "searchText": ""
  },
  {
    "quote": "<b>Core business principles</b> refer to those practices that a company, institution, or government agency uses to enable the <b>organization's viability</b>. Whether Web services, supply chain, payroll, timesheets, or other application, there must be a <b>relationship</b> between your organization's <b>core business principles</b> and how <b>its software's functionality</b> is defined, developed, deployed, tested, and maintained.",
    "title": "Software Engineering's Role in Business",
    "year": 2004,
    "number": 5,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1331297",
    "selected": false,
    "authors": [
      {
        "name": "Jeffrey Voas",
        "link": ""
      }
    ],
    "authorsList": "Jeffrey Voas",
    "citation": "Jeffrey Voas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1331297\">Software Engineering's Role in Business</a>, IEEE Software 2004, no. 5, p. 26",
    "searchText": ""
  },
  {
    "quote": "<b>[P]oor performers</b> cause much more <b>damage</b> than is apparent to management. ",
    "title": "Why Culling Software Colleagues Is Popular",
    "year": 2004,
    "number": 5,
    "page": 28,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1331298",
    "selected": false,
    "authors": [
      {
        "name": "Shahrukh A. Irani",
        "link": ""
      },
      {
        "name": "Ho Woo Lee",
        "link": ""
      },
      {
        "name": "Peter Middleton",
        "link": ""
      }
    ],
    "authorsList": "Shahrukh A. Irani, Ho Woo Lee, Peter Middleton",
    "citation": "Shahrukh A. Irani, Ho Woo Lee, Peter Middleton, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1331298\">Why Culling Software Colleagues Is Popular</a>, IEEE Software 2004, no. 5, p. 28",
    "searchText": ""
  },
  {
    "quote": "<b>Software systems</b> are the only major organizational asset with no real support for managing them based on information technology.  ... <b>no one keeps</b> any <b>basic information</b> concerning a vastly expensive corporate asset.",
    "title": "Inventorying Information Technology Systems: Supporting the 'Paradigm of Change'",
    "year": 2004,
    "number": 5,
    "page": 34,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1331300",
    "selected": false,
    "authors": [
      {
        "name": "Garry S. Marliss",
        "link": ""
      },
      {
        "name": "Mordechai Ben-Menachem",
        "link": ""
      }
    ],
    "authorsList": "Garry S. Marliss, Mordechai Ben-Menachem",
    "citation": "Garry S. Marliss, Mordechai Ben-Menachem, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1331300\">Inventorying Information Technology Systems: Supporting the 'Paradigm of Change'</a>, IEEE Software 2004, no. 5, p. 34",
    "searchText": ""
  },
  {
    "quote": "<b>[N]etwork effects</b> can lead to a '<b>social dilemma</b>,' in which the actions of consumers can result in serious <b>negative consequences</b> for the <b>same consumers</b> and the society as a whole in the long term. ",
    "title": "Network Effects and Social Dilemmas in Technology Industries",
    "year": 2004,
    "number": 5,
    "page": 44,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1331301",
    "selected": false,
    "authors": [
      {
        "name": "Nirup M. Menon",
        "link": ""
      },
      {
        "name": "Glenn J. Browne",
        "link": ""
      }
    ],
    "authorsList": "Nirup M. Menon, Glenn J. Browne",
    "citation": "Nirup M. Menon, Glenn J. Browne, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1331301\">Network Effects and Social Dilemmas in Technology Industries</a>, IEEE Software 2004, no. 5, p. 44",
    "searchText": ""
  },
  {
    "quote": "The well-known <b>black-box model</b> of software <b>development outsourcing</b> is typically effective. The approach assumes that the vendor can successfully solve a client organization's business problem without either organization having to deeply understand the other's domain. ... key finding is that the black-box approach usually works <b>well in routine projects</b> but <b>fails</b> in projects involving <b>novelty</b>.",
    "title": "Beyond the Black Box: Knowledge Overlaps in Software Outsourcing",
    "year": 2004,
    "number": 5,
    "page": 51,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1331302",
    "selected": false,
    "authors": [
      {
        "name": "Amrit Tiwana",
        "link": ""
      }
    ],
    "authorsList": "Amrit Tiwana",
    "citation": "Amrit Tiwana, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1331302\">Beyond the Black Box: Knowledge Overlaps in Software Outsourcing</a>, IEEE Software 2004, no. 5, p. 51",
    "searchText": ""
  },
  {
    "quote": "The international standard <b>ISO/IEC 9126</b> defines a <b>quality model</b> for <b>software products</b>. The model categorizes software product attributes into six characteristics, which are further subdivided into 27 subcharacteristics.",
    "title": "Measuring Software Product Quality: A Survey of ISO/IEC 9126",
    "year": 2004,
    "number": 5,
    "page": 88,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1331309",
    "selected": false,
    "authors": [
      {
        "name": "Ho-Won Jung",
        "link": ""
      },
      {
        "name": "Seung-Gweon Kim",
        "link": ""
      },
      {
        "name": "Chang-Shin Chung",
        "link": ""
      }
    ],
    "authorsList": "Ho-Won Jung, Seung-Gweon Kim, Chang-Shin Chung",
    "citation": "Ho-Won Jung, Seung-Gweon Kim, Chang-Shin Chung, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1331309\">Measuring Software Product Quality: A Survey of ISO/IEC 9126</a>, IEEE Software 2004, no. 5, p. 88",
    "searchText": ""
  },
  {
    "quote": "As an industry, we love to build the <b>grand frameworks</b> that can solve <b>all the world's problems</b> in one unified package. ",
    "title": "Imaginate",
    "year": 2004,
    "number": 5,
    "page": 96,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1331311",
    "selected": false,
    "authors": [
      {
        "name": "Andy Hunt",
        "link": ""
      },
      {
        "name": "Dave Thomas",
        "link": ""
      }
    ],
    "authorsList": "Andy Hunt, Dave Thomas",
    "citation": "Andy Hunt, Dave Thomas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1331311\">Imaginate</a>, IEEE Software 2004, no. 5, p. 96",
    "searchText": ""
  },
  {
    "quote": "Phillips suggests that 'when we are <b>behind schedule</b> and <b>under pressure</b>, we <b>stop breathing</b>.' And that, in turn, leads to some pretty <b>bad outcomes</b> ...",
    "title": "Anarchy and the Effects of Schedule Pressure",
    "year": 2004,
    "number": 5,
    "page": 111,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1331316",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1331316\">Anarchy and the Effects of Schedule Pressure</a>, IEEE Software 2004, no. 5, p. 111",
    "searchText": ""
  },
  {
    "quote": "Although using professional programmers doesn't guarantee <b>correctness</b>, <b>security</b>, or <b>maintainability</b>, the <b>lack of real understanding</b> about software development by <b>end-user programmers</b> poses a <b>danger</b> to stakeholders associated with mission-critical systems from the standpoints of both correctness and security.",
    "title": "From the Editor: The Dangers of End-User Programming",
    "year": 2004,
    "number": 4,
    "page": 5,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.13",
    "selected": false,
    "authors": [
      {
        "name": "Warren Harrison",
        "link": ""
      }
    ],
    "authorsList": "Warren Harrison",
    "citation": "Warren Harrison, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.13\">From the Editor: The Dangers of End-User Programming</a>, IEEE Software 2004, no. 4, p. 5",
    "searchText": ""
  },
  {
    "quote": "[E]valuating process maturity on the basis of results, or the improvement in cost structure in the four quality-cost categories: <b>prevention</b>, <b>appraisal</b>, <b>internal failures</b>, and <b>external failures</b>.",
    "title": "Measuring Maturity Goes beyond Process",
    "year": 2004,
    "number": 4,
    "page": 12,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.21",
    "selected": false,
    "authors": [
      {
        "name": "Nancy Eickelmann",
        "link": ""
      }
    ],
    "authorsList": "Nancy Eickelmann",
    "citation": "Nancy Eickelmann, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.21\">Measuring Maturity Goes beyond Process</a>, IEEE Software 2004, no. 4, p. 12",
    "searchText": ""
  },
  {
    "quote": "The activity of '<b>design</b>' includes many things, but certainly one of the most important aspects is <b>interface specification</b>. ... Make interfaces <b>easy</b> to use <b>correctly</b> and <b>hard</b> to use <b>incorrectly</b>.",
    "title": "The Most Important Design Guideline?",
    "year": 2004,
    "number": 4,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.29",
    "selected": false,
    "authors": [
      {
        "name": "Scott Meyers",
        "link": ""
      }
    ],
    "authorsList": "Scott Meyers",
    "citation": "Scott Meyers, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.29\">The Most Important Design Guideline?</a>, IEEE Software 2004, no. 4, p. 14",
    "searchText": ""
  },
  {
    "quote": "From <b>Chile</b> to <b>Sweden</b> to <b>Georgia</b> to <b>Hong Kong</b>, for very small teams to large organizations, for basic repeatability to complex technology, the question is the same: Why isn't process change easier? ... each part of an organization's staff must <b>share the values</b> of process change to succeed. Company leadership must have <b>a vision</b> of the benefit. Development teams must <b>see the value</b>. Process engineers must recognize that the change will be both <b>interactive</b> and <b>iterative</b>.",
    "title": "Introduction: Lessons Learned around the World: Key Success Factors to Enable Process Change",
    "year": 2004,
    "number": 4,
    "page": 20,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.19",
    "selected": false,
    "authors": [
      {
        "name": "Annie Combelles",
        "link": ""
      },
      {
        "name": "David Dorenbos",
        "link": ""
      }
    ],
    "authorsList": "Annie Combelles, David Dorenbos",
    "citation": "Annie Combelles, David Dorenbos, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.19\">Introduction: Lessons Learned around the World: Key Success Factors to Enable Process Change</a>, IEEE Software 2004, no. 4, p. 20",
    "searchText": ""
  },
  {
    "quote": "Traditional approaches to measuring software process improvement are typically lengthy, data intensive, and cost prohibitive. A <b>simple indicator</b>, the extent to which <b>engineering practices change</b>, can provide enough information to guide initiatives toward success.",
    "title": "Successful Process Implementation",
    "year": 2004,
    "number": 4,
    "page": 36,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.27",
    "selected": false,
    "authors": [
      {
        "name": "Lars Mathiassen",
        "link": ""
      },
      {
        "name": "Anna B?rjesson",
        "link": ""
      }
    ],
    "authorsList": "Lars Mathiassen, Anna B?rjesson",
    "citation": "Lars Mathiassen, Anna B?rjesson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.27\">Successful Process Implementation</a>, IEEE Software 2004, no. 4, p. 36",
    "searchText": ""
  },
  {
    "quote": "<b>Failures</b>, <b>faults</b>, and <b>errors</b> are often collectively referred to as <b>defects</b>, and defect handling deals with <b>recording</b>, <b>tracking</b>, and <b>resolving</b> these defects. ",
    "title": "Defect Handling in Medium and Large Open Source Projects",
    "year": 2004,
    "number": 4,
    "page": 54,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.12",
    "selected": false,
    "authors": [
      {
        "name": "A. G? Koru",
        "link": ""
      },
      {
        "name": "Jeff Tian",
        "link": ""
      }
    ],
    "authorsList": "A. G? Koru, Jeff Tian",
    "citation": "A. G? Koru, Jeff Tian, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.12\">Defect Handling in Medium and Large Open Source Projects</a>, IEEE Software 2004, no. 4, p. 54",
    "searchText": ""
  },
  {
    "quote": "<b>[I]ncremental change</b> activities [include]: change request, concept extraction, concept location, impact analysis, actualization, incorporation, change propagation, refactoring, and role splitting ...",
    "title": "Incremental Change in Object-Oriented Programming",
    "year": 2004,
    "number": 4,
    "page": 62,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.17",
    "selected": false,
    "authors": [
      {
        "name": "Prashant Gosavi",
        "link": ""
      },
      {
        "name": "V?clav Rajlich",
        "link": ""
      }
    ],
    "authorsList": "Prashant Gosavi, V?clav Rajlich",
    "citation": "Prashant Gosavi, V?clav Rajlich, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.17\">Incremental Change in Object-Oriented Programming</a>, IEEE Software 2004, no. 4, p. 62",
    "searchText": ""
  },
  {
    "quote": "[W]e software engineers have engaged in a <b>rush to standardization</b>, a rush to getting everyone to use the same set of facts and principles.",
    "title": "Some Heresy Regarding Software Engineering",
    "year": 2004,
    "number": 4,
    "page": 102,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.26",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.26\">Some Heresy Regarding Software Engineering</a>, IEEE Software 2004, no. 4, p. 102",
    "searchText": ""
  },
  {
    "quote": "Ubiquitous and reckless <b>promotion by vendors</b>, consultants, and marketing gurus has <b>diluted</b> the expression <b>return on investment</b> into an <b>umbrella term</b> that can mean anything from profits to competitive advantage to simply 'something good.' Consequently, the software community looks upon ROI with <b>increasing suspicion</b> as a vague and slippery gimmick used chiefly to make the <b>sales pitch</b> (invariably unsubstantiated) for a particular product or initiative.",
    "title": "Guest Editors' Introduction: Return on Investment",
    "year": 2004,
    "number": 3,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1293068",
    "selected": false,
    "authors": [
      {
        "name": "John Favaro",
        "link": ""
      },
      {
        "name": "Hakan Erdogmus",
        "link": ""
      },
      {
        "name": "Wolfgang Strigel",
        "link": ""
      }
    ],
    "authorsList": "John Favaro, Hakan Erdogmus, Wolfgang Strigel",
    "citation": "John Favaro, Hakan Erdogmus, Wolfgang Strigel, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1293068\">Guest Editors' Introduction: Return on Investment</a>, IEEE Software 2004, no. 3, p. 18",
    "searchText": ""
  },
  {
    "quote": "You may have to <b>reorganize</b> so that your organizational structure is set up to best <b>produce the commonality</b> and to best take advantage of it. Your people will need some <b>training</b>. You'll need to set up <b>new processes</b> to make this all work, and those processes will <b>evolve</b> as you get better at them. You'll want to <b>collect data</b> so that you can see if this new approach is meeting your goal.",
    "title": "Calculating ROI for Software Product Lines",
    "year": 2004,
    "number": 3,
    "page": 23,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1293069",
    "selected": false,
    "authors": [
      {
        "name": "Paul Clements",
        "link": ""
      },
      {
        "name": "Klaus Schmid",
        "link": ""
      },
      {
        "name": "G? B?ckle",
        "link": ""
      },
      {
        "name": "Dirk Muthig",
        "link": ""
      },
      {
        "name": "John D. McGregor",
        "link": ""
      }
    ],
    "authorsList": "Paul Clements, Klaus Schmid, G? B?ckle, Dirk Muthig, John D. McGregor",
    "citation": "Paul Clements, Klaus Schmid, G? B?ckle, Dirk Muthig, John D. McGregor, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1293069\">Calculating ROI for Software Product Lines</a>, IEEE Software 2004, no. 3, p. 23",
    "searchText": ""
  },
  {
    "quote": "Calculating <b>cost and benefits</b> is a prerequisite for <b>investment decision</b> making. This is just as true for SPI as for any other investment. ",
    "title": "Measuring the ROI of Software Process Improvement",
    "year": 2004,
    "number": 3,
    "page": 32,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1293070",
    "selected": false,
    "authors": [
      {
        "name": "Rini van Solingen",
        "link": ""
      }
    ],
    "authorsList": "Rini van Solingen",
    "citation": "Rini van Solingen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1293070\">Measuring the ROI of Software Process Improvement</a>, IEEE Software 2004, no. 3, p. 32",
    "searchText": ""
  },
  {
    "quote": "The last few years have seen intense scrutiny of the <b>flawed business premises</b> underlying the <b>dot-com bubble</b> of the late 1990s. The prevailing attitude then was that software investment could be repaid through the company's increased capital value in expectation of <b>future profits</b>. The current IT environment is greatly changed. Not only are organizations no longer willing to invest in software development without clear expectations for returns, but they also demand those <b>returns in much less time</b>.",
    "title": "The Incremental Funding Method: Data-Driven Software Development",
    "year": 2004,
    "number": 3,
    "page": 39,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1293071",
    "selected": false,
    "authors": [
      {
        "name": "Jane Cleland-Huang",
        "link": ""
      },
      {
        "name": "Mark Denne",
        "link": ""
      }
    ],
    "authorsList": "Jane Cleland-Huang, Mark Denne",
    "citation": "Jane Cleland-Huang, Mark Denne, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1293071\">The Incremental Funding Method: Data-Driven Software Development</a>, IEEE Software 2004, no. 3, p. 39",
    "searchText": ""
  },
  {
    "quote": "For commercial software sold in the <b>general marketplace</b>, many software-planning and design decisions are based not only on meeting user needs but also on various <b>marketplace issues</b>. Many of these issues fall into one of three standard ROI categories: <b>revenue</b>, <b>cost</b>, and <b>risk</b>. ",
    "title": "Marketplace Issues in Software Planning and Design",
    "year": 2004,
    "number": 3,
    "page": 62,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1293074",
    "selected": false,
    "authors": [
      {
        "name": "David G. Messerschmitt",
        "link": ""
      },
      {
        "name": "Clemens Szyperski",
        "link": ""
      }
    ],
    "authorsList": "David G. Messerschmitt, Clemens Szyperski",
    "citation": "David G. Messerschmitt, Clemens Szyperski, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1293074\">Marketplace Issues in Software Planning and Design</a>, IEEE Software 2004, no. 3, p. 62",
    "searchText": ""
  },
  {
    "quote": "The trait that I value in effective quality assurance analysts is the ability to question what others often too readily accept. This admirable characteristic manifests itself in three ways: <b>know what you know</b>, <b>ask when you don't</b>, and <b>ask when you do</b>.",
    "title": "On the Virtues of Not Knowing",
    "year": 2004,
    "number": 3,
    "page": 74,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1293076",
    "selected": false,
    "authors": [
      {
        "name": "Jane Huffman Hayes",
        "link": ""
      }
    ],
    "authorsList": "Jane Huffman Hayes",
    "citation": "Jane Huffman Hayes, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1293076\">On the Virtues of Not Knowing</a>, IEEE Software 2004, no. 3, p. 74",
    "searchText": ""
  },
  {
    "quote": "Keep it <b>DRY</b>, keep it <b>shy</b>, and <b>tell</b> the other guy.",
    "title": "OO in One Sentence: Keep It DRY, Shy, and Tell the Other Guy",
    "year": 2004,
    "number": 3,
    "page": 101,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1293081",
    "selected": false,
    "authors": [
      {
        "name": "Andy Hunt",
        "link": ""
      },
      {
        "name": "Dave Thomas",
        "link": ""
      }
    ],
    "authorsList": "Andy Hunt, Dave Thomas",
    "citation": "Andy Hunt, Dave Thomas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1293081\">OO in One Sentence: Keep It DRY, Shy, and Tell the Other Guy</a>, IEEE Software 2004, no. 3, p. 101",
    "searchText": ""
  },
  {
    "quote": "<b>Software maintenance</b> and software maintainers <b>deserve more respect</b>.",
    "title": "Learning to Distinguish a Solution from a Problem",
    "year": 2004,
    "number": 3,
    "page": 111,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1293084",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1293084\">Learning to Distinguish a Solution from a Problem</a>, IEEE Software 2004, no. 3, p. 111",
    "searchText": ""
  },
  {
    "quote": "[I]n a <b>criminal trial</b> (at least in the US), the <b>failure to follow</b> an established <b>best practice</b> in an investigation could result in an <b>acquittal</b>. ... the <b>American Society for Quality's definition</b> probably comes closest to what we in software development mean when we use the term. The ASQ defines 'best practice' as a <b>superior method</b> or innovative practice that contributes to the improved performance of an organization, usually <b>recognized</b> as 'best' <b>by other peer</b> organizations.",
    "title": "From the Editor: Best Practices--Who Says?",
    "year": 2004,
    "number": 1,
    "page": 8,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1320864",
    "selected": false,
    "authors": [
      {
        "name": "Warren Harrison",
        "link": ""
      }
    ],
    "authorsList": "Warren Harrison",
    "citation": "Warren Harrison, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1320864\">From the Editor: Best Practices--Who Says?</a>, IEEE Software 2004, no. 1, p. 8",
    "searchText": ""
  },
  {
    "quote": "'We resolve to <b>keep all</b> program design <b>documentation</b> complete, precise, and <b>up to date</b>'. - David Lorge Parnas",
    "title": "New Year's Resolutions for Software Quality",
    "year": 2004,
    "number": 1,
    "page": 12,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1259165",
    "selected": false,
    "authors": [
      {
        "name": "Nancy Leveson",
        "link": ""
      },
      {
        "name": "Barry Boehm",
        "link": ""
      },
      {
        "name": "Shari Lawrence Pfleeger",
        "link": ""
      },
      {
        "name": "Nancy R. Mead",
        "link": ""
      },
      {
        "name": "Elaine Weyuker",
        "link": ""
      },
      {
        "name": "Al Davis",
        "link": ""
      },
      {
        "name": "Watts S. Humphrey",
        "link": ""
      },
      {
        "name": "David Lorge Parnas",
        "link": ""
      },
      {
        "name": "Victor R. Basili",
        "link": ""
      },
      {
        "name": "John D. Musa",
        "link": ""
      }
    ],
    "authorsList": "Nancy Leveson, Barry Boehm, Shari Lawrence Pfleeger, Nancy R. Mead, Elaine Weyuker, Al Davis, Watts S. Humphrey, David Lorge Parnas, Victor R. Basili, John D. Musa",
    "citation": "Nancy Leveson, Barry Boehm, Shari Lawrence Pfleeger, Nancy R. Mead, Elaine Weyuker, Al Davis, Watts S. Humphrey, David Lorge Parnas, Victor R. Basili, John D. Musa, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1259165\">New Year's Resolutions for Software Quality</a>, IEEE Software 2004, no. 1, p. 12",
    "searchText": ""
  },
  {
    "quote": "When you dig into the knowledge base of experience, you find the following <b>seven best practices</b> for <b>outsourcing</b> common to reported successes in the literature ... <b>Never</b> outsource a <b>core competency</b> ... Establish <b>win-win conditions</b> with your suppliers ... <b>Nurture your relationships</b> with your suppliers ... <b>Measure</b> performance as <b>quantitatively</b> as possible ... Make <b>exceptional performance</b> financially worthwhile ... Treat outsourcing as a <b>technology transfer</b> opportunity ...",
    "title": "Seven Hot Outsourcing Practices",
    "year": 2004,
    "number": 1,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1259166",
    "selected": false,
    "authors": [
      {
        "name": "Donald J. Reifer",
        "link": ""
      }
    ],
    "authorsList": "Donald J. Reifer",
    "citation": "Donald J. Reifer, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1259166\">Seven Hot Outsourcing Practices</a>, IEEE Software 2004, no. 1, p. 14",
    "searchText": ""
  },
  {
    "quote": "This month, the column looks at how to <b>ruin a software project</b> in just <b>three easy steps</b>. ... (1) <b>Don't bother to check</b> if the code is doing what you think it's doing (2) <b>Never let go</b> of code ... (3) Whether you are compiling, testing, creating a release, or doing end-user product installation, <b>do it differently every time</b>. ... Fortunately, three simple practices can <b>save a project</b> from these and other common mishaps: <b>version control</b>, <b>unit testing</b>, and <b>automation</b>.",
    "title": "Three Legs, No Wobble",
    "year": 2004,
    "number": 1,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1259177",
    "selected": false,
    "authors": [
      {
        "name": "Dave Thomas",
        "link": ""
      },
      {
        "name": "Andy Hunt",
        "link": ""
      }
    ],
    "authorsList": "Dave Thomas, Andy Hunt",
    "citation": "Dave Thomas, Andy Hunt, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1259177\">Three Legs, No Wobble</a>, IEEE Software 2004, no. 1, p. 18",
    "searchText": ""
  },
  {
    "quote": "The open source movement is affecting software development products and processes. ... [P]rocess integration and the <b>coevolution of multiple open source and proprietary projects</b> are still open problems.",
    "title": "Guest Editors' Introduction: How Is Open Source Affecting Software Development?",
    "year": 2004,
    "number": 1,
    "page": 28,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1259204",
    "selected": false,
    "authors": [
      {
        "name": "Clemens Szyperski",
        "link": ""
      },
      {
        "name": "Diomidis Spinellis",
        "link": ""
      }
    ],
    "authorsList": "Clemens Szyperski, Diomidis Spinellis",
    "citation": "Clemens Szyperski, Diomidis Spinellis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1259204\">Guest Editors' Introduction: How Is Open Source Affecting Software Development?</a>, IEEE Software 2004, no. 1, p. 28",
    "searchText": ""
  },
  {
    "quote": "<b>Many</b> software development methodologies <b>are called 'open source.'</b> However simply stating that a project is open source <b>doesn't precisely describe</b> the approach used to support the project.",
    "title": "The Many Meanings of Open Source",
    "year": 2004,
    "number": 1,
    "page": 34,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1259206",
    "selected": false,
    "authors": [
      {
        "name": "Budi Arief",
        "link": ""
      },
      {
        "name": "Cristina Gacek",
        "link": ""
      }
    ],
    "authorsList": "Budi Arief, Cristina Gacek",
    "citation": "Budi Arief, Cristina Gacek, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1259206\">The Many Meanings of Open Source</a>, IEEE Software 2004, no. 1, p. 34",
    "searchText": ""
  },
  {
    "quote": "Mission operators at <b>NASA's Jet Propulsion Laboratory</b> use Science Activity Planners to analyze data acquired by rovers and direct their activities. In designing the SAP for the <b>Mars Exploration Rovers</b> project, developers <b>relied</b> heavily <b>on open source</b> components. They found that using open source software components not only helped keep the project within budget but also resulted in a <b>more robust and flexible</b> tool.",
    "title": "Mission-Critical Development with Open Source Software: Lessons Learned",
    "year": 2004,
    "number": 1,
    "page": 42,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1259211",
    "selected": false,
    "authors": [
      {
        "name": "Jeffrey S. Norris",
        "link": ""
      },
      {
        "name": "Poul-Henning Kamp",
        "link": ""
      }
    ],
    "authorsList": "Jeffrey S. Norris, Poul-Henning Kamp",
    "citation": "Jeffrey S. Norris, Poul-Henning Kamp, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1259211\">Mission-Critical Development with Open Source Software: Lessons Learned</a>, IEEE Software 2004, no. 1, p. 42",
    "searchText": ""
  },
  {
    "quote": "The importance of changing the mindset in relation to the new support paradigm implied by <b>open-source software</b> (OSS) is also significant. By and large, reliance on a standard maintenance contract isn't an option, and bulletin boards might be the main source of support. Thus, it is hardly surprising that support from top management is critical. Also, even though OSS may be available at little or no cost, organizations should not expect maintenance and support to be available at a lesser cost than would apply for commercial software. Indeed, OSS represents a good opportunity for small software companies all around the world to treat it as <b>an infrastructure component</b>, like the highway or telecommunications lines, and then use it as a bootstrap to build a service and support business model on top.",
    "title": "Developing an Information Systems Infrastructure with Open Source Software",
    "year": 2004,
    "number": 1,
    "page": 50,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1259216",
    "selected": false,
    "authors": [
      {
        "name": "Tony Kenny",
        "link": ""
      },
      {
        "name": "Brian Fitzgerald",
        "link": ""
      }
    ],
    "authorsList": "Tony Kenny, Brian Fitzgerald",
    "citation": "Tony Kenny, Brian Fitzgerald, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1259216\">Developing an Information Systems Infrastructure with Open Source Software</a>, IEEE Software 2004, no. 1, p. 50",
    "searchText": ""
  },
  {
    "quote": "Any company dealing with <b>OSS</b> needs a <b>few simple rules</b> for using it in product development: Control the introduction and use of OSS; it must be <b>explicitly authorized</b> on a per-version basis. Disseminate <b>technical</b>, <b>managerial</b>, and <b>legal</b> information widely in your company. Systematically qualify OSS components before integrating them.",
    "title": "Using Open Source Software in Product Development: A Primer",
    "year": 2004,
    "number": 1,
    "page": 82,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1259227",
    "selected": false,
    "authors": [
      {
        "name": "Christof Ebert",
        "link": ""
      },
      {
        "name": "Michel Ruffin",
        "link": ""
      }
    ],
    "authorsList": "Christof Ebert, Michel Ruffin",
    "citation": "Christof Ebert, Michel Ruffin, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1259227\">Using Open Source Software in Product Development: A Primer</a>, IEEE Software 2004, no. 1, p. 82",
    "searchText": ""
  },
  {
    "quote": "<b>Outsourcing</b>, overseas development, and <b>foreign workers</b> <b>displacing American ones</b>: These are all interesting issues, but in a sense they're all <b>so 'last century.'</b> Or are they?",
    "title": "Sources for Software Development: A Mugwumpish View",
    "year": 2004,
    "number": 1,
    "page": 111,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2004.1259286",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2004.1259286\">Sources for Software Development: A Mugwumpish View</a>, IEEE Software 2004, no. 1, p. 111",
    "searchText": ""
  },
  {
    "quote": "For most of software engineering's history, <b>authors</b> have eagerly <b>told practitioners</b> what they <b>ought to be doing</b>. But <b>rarely</b> have those 'oughts' been <b>predicated</b> on what practitioners <b>actually are doing</b>. ... Defining the <b>state of the art</b> (which I identify as theory + 'best' <b>practice</b>) is <b>easy</b>; conferences, journals, and books do that for us all the time. Yet defining the state of the <b>practice</b> is <b>difficult</b>. ",
    "title": "Guest Editor's Introduction: The State of the Practice of Software Engineering",
    "year": 2003,
    "number": 6,
    "page": 20,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1241361",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1241361\">Guest Editor's Introduction: The State of the Practice of Software Engineering</a>, IEEE Software 2003, no. 6, p. 20",
    "searchText": ""
  },
  {
    "quote": "[W]e <b>didn't find</b> that any specific design <b>method</b> or programming <b>language</b> guaranteed either a <b>successful</b> or <b>troubled</b> project outcome. ... <b>[G]ood quality control</b> is the <b>best</b> overall <b>indicator</b> of a successful project.",
    "title": "Variations in Software Development Practices",
    "year": 2003,
    "number": 6,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1241362",
    "selected": false,
    "authors": [
      {
        "name": "Capers Jones",
        "link": ""
      }
    ],
    "authorsList": "Capers Jones",
    "citation": "Capers Jones, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1241362\">Variations in Software Development Practices</a>, IEEE Software 2003, no. 6, p. 22",
    "searchText": ""
  },
  {
    "quote": "[N]o <b>Indian</b> or <b>Japanese</b> company has yet to make any real global mark in widely recognized software innovation, long the province of <b>US</b> and a <b>few European</b> software firms.",
    "title": "Software Development Worldwide: The State of the Practice",
    "year": 2003,
    "number": 6,
    "page": 28,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1241363",
    "selected": false,
    "authors": [
      {
        "name": "Michael Cusumano",
        "link": ""
      },
      {
        "name": "Bill Crandall",
        "link": ""
      },
      {
        "name": "Alan MacCormack",
        "link": ""
      },
      {
        "name": "Chris F. Kemerer",
        "link": ""
      }
    ],
    "authorsList": "Michael Cusumano, Bill Crandall, Alan MacCormack, Chris F. Kemerer",
    "citation": "Michael Cusumano, Bill Crandall, Alan MacCormack, Chris F. Kemerer, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1241363\">Software Development Worldwide: The State of the Practice</a>, IEEE Software 2003, no. 6, p. 28",
    "searchText": ""
  },
  {
    "quote": "The studies confirm the widely held belief that most <b>software engineers</b> <b>don't update</b> most software <b>documentation</b> in a timely manner. The only notable exception is documentation <b>types</b> that are <b>highly structured</b> and easy to maintain, such as test cases and inline comments.",
    "title": "How Software Engineers Use Documentation: The State of the Practice",
    "year": 2003,
    "number": 6,
    "page": 35,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1241364",
    "selected": false,
    "authors": [
      {
        "name": "Andrew Forward",
        "link": ""
      },
      {
        "name": "Timothy C. Lethbridge",
        "link": ""
      },
      {
        "name": "Janice Singer",
        "link": ""
      }
    ],
    "authorsList": "Andrew Forward, Timothy C. Lethbridge, Janice Singer",
    "citation": "Andrew Forward, Timothy C. Lethbridge, Janice Singer, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1241364\">How Software Engineers Use Documentation: The State of the Practice</a>, IEEE Software 2003, no. 6, p. 35",
    "searchText": ""
  },
  {
    "quote": "One of the most important things about <b>good design</b> is <b>modularity</b> — dividing a system into separate pieces so that you can <b>modify one module</b> without the <b>changes rippling</b> all over the system. Early on, David <b>Parnas</b> observed that modules should be arranged <b>around system secrets</b>, each module hiding its secret from the other modules. Then if the secret thing changes, you avoid a ripple effect. One of the <b>most common secrets</b> to hide these days is <b>data structures</b>. ",
    "title": "Data Access Routines",
    "year": 2003,
    "number": 6,
    "page": 96,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1241375",
    "selected": false,
    "authors": [
      {
        "name": "Martin Fowler",
        "link": ""
      }
    ],
    "authorsList": "Martin Fowler",
    "citation": "Martin Fowler, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1241375\">Data Access Routines</a>, IEEE Software 2003, no. 6, p. 96",
    "searchText": ""
  },
  {
    "quote": "Despite more than 30 years' effort to improve software quality, companies still release programs containing <b>numerous errors</b>. Many major products have <b>thousands of bugs</b>. It's not for lack of trying; all major software developers stress software quality assurance and try to remove bugs before release. The problem is the <b>code's complexity</b>. It's easy to review code but <b>fail to notice significant errors</b>.",
    "title": "Guest Editors' Introduction: Inspection's Role in Software Quality Assurance",
    "year": 2003,
    "number": 4,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1207449",
    "selected": false,
    "authors": [
      {
        "name": "David L. Parnas",
        "link": ""
      },
      {
        "name": "Mark Lawford",
        "link": ""
      }
    ],
    "authorsList": "David L. Parnas, Mark Lawford",
    "citation": "David L. Parnas, Mark Lawford, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1207449\">Guest Editors' Introduction: Inspection's Role in Software Quality Assurance</a>, IEEE Software 2003, no. 4, p. 16",
    "searchText": ""
  },
  {
    "quote": "<b>[R]eading techniques</b> must specifically address delocalization--the distribution of related functionality throughout an object-oriented system--and the fact that the <b>static (compile time)</b> and <b>dynamic (run time) views</b> of an object-oriented system are <b>largely distinct</b>.",
    "title": "Practical Code Inspection Techniques for Object-Oriented Systems: An Experimental Comparison",
    "year": 2003,
    "number": 4,
    "page": 21,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1207450",
    "selected": false,
    "authors": [
      {
        "name": "Marc Roper",
        "link": ""
      },
      {
        "name": "Alastair Dunsmore",
        "link": ""
      },
      {
        "name": "Murray Wood",
        "link": ""
      }
    ],
    "authorsList": "Marc Roper, Alastair Dunsmore, Murray Wood",
    "citation": "Marc Roper, Alastair Dunsmore, Murray Wood, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1207450\">Practical Code Inspection Techniques for Object-Oriented Systems: An Experimental Comparison</a>, IEEE Software 2003, no. 4, p. 21",
    "searchText": ""
  },
  {
    "quote": "Principles from <b>software inspection</b>, <b>use cases</b>, and operational profile testing are combined into the <b>usage-based reading</b> technique. The goal is to provide an efficient reading technique for software inspections, which takes the user viewpoint on the software and the faults it might contain. The user reads, for example, a design document guided by <b>prioritized use cases</b>. An experimental evaluation shows that the UBR method is <b>more effective</b> and efficient in finding <b>faults, critical to the user</b>, compared to checklist-based methods.",
    "title": "Prioritized Use Cases as a Vehicle for Software Inspections",
    "year": 2003,
    "number": 4,
    "page": 30,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1207451",
    "selected": false,
    "authors": [
      {
        "name": "Claes Wohlin",
        "link": ""
      },
      {
        "name": "Thomas Thelin",
        "link": ""
      },
      {
        "name": "Per Runeson",
        "link": ""
      }
    ],
    "authorsList": "Claes Wohlin, Thomas Thelin, Per Runeson",
    "citation": "Claes Wohlin, Thomas Thelin, Per Runeson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1207451\">Prioritized Use Cases as a Vehicle for Software Inspections</a>, IEEE Software 2003, no. 4, p. 30",
    "searchText": ""
  },
  {
    "quote": "<b>Software inspection</b> reduces the number of defects early in the software life cycle. <b>Cost savings</b> are realized because errors are significantly more expensive to eliminate with each successive development phase. An important part of the inspection process is a detailed inspection of the source code .... Recent advances in research on <b>static program analysis</b> can be used to address this aspect of <b>software inspection</b>.",
    "title": "Tool Support for Fine-Grained Software Inspection",
    "year": 2003,
    "number": 4,
    "page": 42,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1207453",
    "selected": false,
    "authors": [
      {
        "name": "Paul Anderson",
        "link": ""
      },
      {
        "name": "Tim Teitelbaum",
        "link": ""
      },
      {
        "name": "Thomas Reps",
        "link": ""
      },
      {
        "name": "Mark Zarins",
        "link": ""
      }
    ],
    "authorsList": "Paul Anderson, Tim Teitelbaum, Thomas Reps, Mark Zarins",
    "citation": "Paul Anderson, Tim Teitelbaum, Thomas Reps, Mark Zarins, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1207453\">Tool Support for Fine-Grained Software Inspection</a>, IEEE Software 2003, no. 4, p. 42",
    "searchText": ""
  },
  {
    "quote": "We can divide software systems architecturally along two broad dimensions. The first is the <b>tarchitecture</b> or '<b>technical architecture</b>' and the second is the <b>marketecture</b> or '<b>marketing architecture</b>.' I refer to the traditional software architect or chief technologist as the <b>tarchitect</b> and the product-marketing manager, business manager, or program manager responsible for the system as the <b>marketect</b>.",
    "title": "The Difference between Marketecture and Tarchitecture",
    "year": 2003,
    "number": 4,
    "page": 51,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1207454",
    "selected": false,
    "authors": [
      {
        "name": "Luke Hohmann",
        "link": ""
      }
    ],
    "authorsList": "Luke Hohmann",
    "citation": "Luke Hohmann, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1207454\">The Difference between Marketecture and Tarchitecture</a>, IEEE Software 2003, no. 4, p. 51",
    "searchText": ""
  },
  {
    "quote": "[L]et's allow SE programs to <b>hire the best-qualified candidates</b> regardless of whether they've acquired a PhD.",
    "title": "A Big Problem in Academic Software Engineering and a Potential Outside-the-Box Solution",
    "year": 2003,
    "number": 4,
    "page": 94,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1207486",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1207486\">A Big Problem in Academic Software Engineering and a Potential Outside-the-Box Solution</a>, IEEE Software 2003, no. 4, p. 94",
    "searchText": ""
  },
  {
    "quote": "[T]he <b>Extreme Programming</b> methodology exudes this same advice: <b>Be communicative with everyone</b> on the team—including <b>customers</b>, end <b>users</b>, and <b>business</b> folks. Consistently and doggedly strive to understand and deliver what your <b>customers want</b> with the highest possible quality. <b>Frequently offer feedback</b>—a one-minute manager would never hold back until a formal appraisal cycle to give feedback to employees. ",
    "title": "Guest Editor's Introduction: The XP Programmer--The Few-Minutes Programmer",
    "year": 2003,
    "number": 3,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1196315",
    "selected": false,
    "authors": [
      {
        "name": "Laurie Williams",
        "link": ""
      }
    ],
    "authorsList": "Laurie Williams",
    "citation": "Laurie Williams, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1196315\">Guest Editor's Introduction: The XP Programmer--The Few-Minutes Programmer</a>, IEEE Software 2003, no. 3, p. 16",
    "searchText": ""
  },
  {
    "quote": "<b>ThoughtWorks</b> introduced <b>Extreme Programming</b> into an organization and successfully completed a bleeding-edge technology project <b>with client staff</b> that had no previous experience using an agiledevelopment approach. ",
    "title": "Introducing XP into Greenfield Projects: Lessons Learned",
    "year": 2003,
    "number": 3,
    "page": 21,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1196316",
    "selected": false,
    "authors": [
      {
        "name": "Jonathan Rasmusson",
        "link": ""
      }
    ],
    "authorsList": "Jonathan Rasmusson",
    "citation": "Jonathan Rasmusson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1196316\">Introducing XP into Greenfield Projects: Lessons Learned</a>, IEEE Software 2003, no. 3, p. 21",
    "searchText": ""
  },
  {
    "quote": "The <b>cultural</b> environment at a <b>government research center</b> differs from the <b>customer-centric</b> business view. Consequently, eight of XP's 12 practices are seemingly <b>incompatible</b> with the existing research <b>culture</b>.  ... Despite initial awkwardness ... <b>XP can function</b> in situations for which it appears to be ill suited.",
    "title": "Exploring XP for Scientific Research",
    "year": 2003,
    "number": 3,
    "page": 30,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1196317",
    "selected": false,
    "authors": [
      {
        "name": "William L. Kleb",
        "link": ""
      },
      {
        "name": "William A. Wood",
        "link": ""
      }
    ],
    "authorsList": "William L. Kleb, William A. Wood",
    "citation": "William L. Kleb, William A. Wood, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1196317\">Exploring XP for Scientific Research</a>, IEEE Software 2003, no. 3, p. 30",
    "searchText": ""
  },
  {
    "quote": "We can trace <b>SQA's roots</b> back to the <b>1960s</b>, when <b>IBM</b> used the term in the context of <b>final product testing</b>. SQA also has deep roots in the <b>US Department of Defense</b>, which created a family of military specification standards required of all software vendors seeking DoD contracts (the most famous of which is probably MIL-STD 2167A). However, <b>not all people</b> buy into the <b>belief</b> that <b>SQA is needed</b> or is scientific ...",
    "title": "Guest Editor's Introduction: Assuring Software Quality Assurance",
    "year": 2003,
    "number": 3,
    "page": 48,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1196320",
    "selected": false,
    "authors": [
      {
        "name": "Jeffrey Voas",
        "link": ""
      }
    ],
    "authorsList": "Jeffrey Voas",
    "citation": "Jeffrey Voas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1196320\">Guest Editor's Introduction: Assuring Software Quality Assurance</a>, IEEE Software 2003, no. 3, p. 48",
    "searchText": ""
  },
  {
    "quote": "<b>Statistical process control</b> tools enable proactive software process management. One such tool, <b>the control chart</b>, can be used for managing, controlling, and improving the code review process.",
    "title": "Statistical Process Control to Improve Coding and Code Review",
    "year": 2003,
    "number": 3,
    "page": 50,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1196321",
    "selected": false,
    "authors": [
      {
        "name": "S.K. Pillai",
        "link": ""
      },
      {
        "name": "Alice Leslie Jacob",
        "link": ""
      }
    ],
    "authorsList": "S.K. Pillai, Alice Leslie Jacob",
    "citation": "S.K. Pillai, Alice Leslie Jacob, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1196321\">Statistical Process Control to Improve Coding and Code Review</a>, IEEE Software 2003, no. 3, p. 50",
    "searchText": ""
  },
  {
    "quote": "One of the most important issues in analyzing safety-critical systems is <b>code verification</b> through an <b>inspection checklist</b>, whose items must be applied to <b>the source code</b>. The attention given to this list will help ensure obedience to <b>good coding rules</b> and represents an important factor in the design of safety-critical systems.",
    "title": "Best Practices in Code Inspection for Safety-Critical Software",
    "year": 2003,
    "number": 3,
    "page": 56,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1196322",
    "selected": false,
    "authors": [
      {
        "name": "Jorge Rady de Almeida Jr.",
        "link": ""
      },
      {
        "name": "S?rgio Miranda Paz",
        "link": ""
      },
      {
        "name": "Jo?o Batista Camargo Jr.",
        "link": ""
      },
      {
        "name": "Bruno Abrantes Basseto",
        "link": ""
      }
    ],
    "authorsList": "Jorge Rady de Almeida Jr., S?rgio Miranda Paz, Jo?o Batista Camargo Jr., Bruno Abrantes Basseto",
    "citation": "Jorge Rady de Almeida Jr., S?rgio Miranda Paz, Jo?o Batista Camargo Jr., Bruno Abrantes Basseto, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1196322\">Best Practices in Code Inspection for Safety-Critical Software</a>, IEEE Software 2003, no. 3, p. 56",
    "searchText": ""
  },
  {
    "quote": ".. <b>[A]ccelerate the testing</b> of scheduled functions by triggering them through <b>automated tests</b>, either by periodically <b>advancing the system clock</b> or through a <b>programmatic event interface</b>.",
    "title": "Long-Term Testing in a Short-Term World",
    "year": 2003,
    "number": 3,
    "page": 64,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1196323",
    "selected": false,
    "authors": [
      {
        "name": "Vaughn T. Rokosz",
        "link": ""
      }
    ],
    "authorsList": "Vaughn T. Rokosz",
    "citation": "Vaughn T. Rokosz, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1196323\">Long-Term Testing in a Short-Term World</a>, IEEE Software 2003, no. 3, p. 64",
    "searchText": ""
  },
  {
    "quote": "Although <b>rigorous measurement</b> has become a necessity in the software industry, many measurement programs <b>fail to deliver</b> any real <b>benefit to software managers</b>. The required data is often missing or invalid, or it just arrives too late.",
    "title": "Measurement Modeling Technology",
    "year": 2003,
    "number": 3,
    "page": 68,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1196324",
    "selected": false,
    "authors": [
      {
        "name": "Jim Lawler",
        "link": ""
      },
      {
        "name": "Barbara Kitchenham",
        "link": ""
      }
    ],
    "authorsList": "Jim Lawler, Barbara Kitchenham",
    "citation": "Jim Lawler, Barbara Kitchenham, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1196324\">Measurement Modeling Technology</a>, IEEE Software 2003, no. 3, p. 68",
    "searchText": ""
  },
  {
    "quote": "That we question the hype spewing from the hype purveyors, especially vendors. That we question the <b>advocacy</b> spewing <b>from all too many computer science researchers</b>, who seem to feel that research papers should '<b>conceive</b> of a concept, <b>advocate</b> the concept, and <b>scold</b> practitioners who refuse to use the concept.'",
    "title": "Questioning the Software Engineering Unquestionables",
    "year": 2003,
    "number": 3,
    "page": 119,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1196338",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1196338\">Questioning the Software Engineering Unquestionables</a>, IEEE Software 2003, no. 3, p. 119",
    "searchText": ""
  },
  {
    "quote": "I consider <b>four models</b> for <b>software system ownership</b> — that is, models for assigning software systems to their human owners: 1. <b>Product specialist</b>: A single individual manages all code with occasional help from other individuals. 2. <b>Subsystem ownership</b>: Each subsystem has a specific owner, and each team member owns one or more subsystems. 3. <b>Chief architect</b>: A chief programmer (architect) has primary ownership of all code. The team takes supporting roles in fleshing out the team leader's vision. 4. <b>Collective ownership</b>: All code is collectively owned. Schedules and responsibilities are set such that every team member has a chance to contribute to every subsystem and is free to work across subsystems as needed.",
    "title": "Managing Code Ownership",
    "year": 2003,
    "number": 2,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1184163",
    "selected": false,
    "authors": [
      {
        "name": "Martin E. Nordberg III",
        "link": ""
      }
    ],
    "authorsList": "Martin E. Nordberg III",
    "citation": "Martin E. Nordberg III, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1184163\">Managing Code Ownership</a>, IEEE Software 2003, no. 2, p. 26",
    "searchText": ""
  },
  {
    "quote": "The initial <b>modeling activity</b> is a <b>structural decomposition</b> that continues toward the existing <b>components' granularity level</b>. Iteration will occur through alternate decomposition and composition activities until the specifications of <b>abstract</b> modules <b>agree with existing</b> components.",
    "title": "A Process Model for Component-Oriented Software Engineering",
    "year": 2003,
    "number": 2,
    "page": 34,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1184164",
    "selected": false,
    "authors": [
      {
        "name": "Ali H. Dogru",
        "link": ""
      },
      {
        "name": "Murat M. Tanik",
        "link": ""
      }
    ],
    "authorsList": "Ali H. Dogru, Murat M. Tanik",
    "citation": "Ali H. Dogru, Murat M. Tanik, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1184164\">A Process Model for Component-Oriented Software Engineering</a>, IEEE Software 2003, no. 2, p. 34",
    "searchText": ""
  },
  {
    "quote": "<b>Tata Consultancy Services</b> blended <b>Six Sigma</b> concepts with the various <b>SW-CMM</b> Key Process Areas into a quality management system that has helped it to improve its <b>customer focus</b> and sustain the process improvement initiatives by explicitly <b>linking</b> them to <b>business goals</b>.",
    "title": "Blending CMM and Six Sigma to Meet Business Goals",
    "year": 2003,
    "number": 2,
    "page": 42,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1184165",
    "selected": false,
    "authors": [
      {
        "name": "Mala Murugappan",
        "link": ""
      },
      {
        "name": "Gargi Keeni",
        "link": ""
      }
    ],
    "authorsList": "Mala Murugappan, Gargi Keeni",
    "citation": "Mala Murugappan, Gargi Keeni, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1184165\">Blending CMM and Six Sigma to Meet Business Goals</a>, IEEE Software 2003, no. 2, p. 42",
    "searchText": ""
  },
  {
    "quote": "In <b>manufacturing</b>, the <b>observed</b> and <b>actual number</b> of <b>defects</b> is not significantly different. In <b>software development</b>, these two numbers routinely <b>vary significantly</b>. ",
    "title": "Statistical Process Control: What You Don?t Measure Can Hurt You!",
    "year": 2003,
    "number": 2,
    "page": 49,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1184166",
    "selected": false,
    "authors": [
      {
        "name": "Nancy Eickelmann",
        "link": ""
      },
      {
        "name": "Animesh Anant",
        "link": ""
      }
    ],
    "authorsList": "Nancy Eickelmann, Animesh Anant",
    "citation": "Nancy Eickelmann, Animesh Anant, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1184166\">Statistical Process Control: What You Don?t Measure Can Hurt You!</a>, IEEE Software 2003, no. 2, p. 49",
    "searchText": ""
  },
  {
    "quote": "<b>Patterns</b> are <b>not good or bad</b>—rather, they're either <b>appropriate or not</b> for some situations. I don't think it's wrong to experiment with using a pattern when you're unsure, but you should be <b>prepared to rip it out</b> if it doesn't contribute enough.",
    "title": "Patterns",
    "year": 2003,
    "number": 2,
    "page": 56,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1184168",
    "selected": false,
    "authors": [
      {
        "name": "Martin Fowler",
        "link": ""
      }
    ],
    "authorsList": "Martin Fowler",
    "citation": "Martin Fowler, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1184168\">Patterns</a>, IEEE Software 2003, no. 2, p. 56",
    "searchText": ""
  },
  {
    "quote": "Colleagues in my research group and in collaborating institutions typically model software designs using graphical tools such as <b>Rational Rose</b>, <b>Together</b>, and <b>Visio</b>. I often witness them toiling to adjust a graph's appearance with the mouse or laboriously visiting each class to change a single field's type. This need not be so. Design models should be <b>composed textually</b>, and graphs should be <b>automatically generated</b>. ",
    "title": "On the Declarative Specification of Models",
    "year": 2003,
    "number": 2,
    "page": 94,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1184181",
    "selected": false,
    "authors": [
      {
        "name": "Diomidis Spinellis",
        "link": ""
      }
    ],
    "authorsList": "Diomidis Spinellis",
    "citation": "Diomidis Spinellis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1184181\">On the Declarative Specification of Models</a>, IEEE Software 2003, no. 2, p. 94",
    "searchText": ""
  },
  {
    "quote": "[W]hen in doubt, <b>make a new type</b>.",
    "title": "When to Make a Type",
    "year": 2003,
    "number": 1,
    "page": 12,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1159023",
    "selected": false,
    "authors": [
      {
        "name": "Martin Fowler",
        "link": ""
      }
    ],
    "authorsList": "Martin Fowler",
    "citation": "Martin Fowler, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1159023\">When to Make a Type</a>, IEEE Software 2003, no. 1, p. 12",
    "searchText": ""
  },
  {
    "quote": "Today, many organizations and companies have established <b>explicit roles for requirements engineers</b>. Adequate techniques and tools for <b>RE tasks</b> (such as <b>elicitation</b>, <b>validation</b>, <b>negotiation</b>, <b>specification</b>, and <b>documentation</b>) have emerged and continuously been improved based on industrial feedback.",
    "title": "Guest Editors' Introduction: RE 02--A Major Step toward a Mature Requirements Engineering Community",
    "year": 2003,
    "number": 1,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1159024",
    "selected": false,
    "authors": [
      {
        "name": "Eric Dubois",
        "link": ""
      },
      {
        "name": "Klaus Pohl",
        "link": ""
      }
    ],
    "authorsList": "Eric Dubois, Klaus Pohl",
    "citation": "Eric Dubois, Klaus Pohl, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1159024\">Guest Editors' Introduction: RE 02--A Major Step toward a Mature Requirements Engineering Community</a>, IEEE Software 2003, no. 1, p. 14",
    "searchText": ""
  },
  {
    "quote": "9126-1 quality standard ... we selected for the following reasons: (1) Due to its generic nature, the standard <b>fixes some high-level quality concepts</b>, and therefore quality models can be <b>tailored to specific package domains</b>. This is a crucial point, because quality models can dramatically differ from one domain to another. (2) The standard lets us <b>create hierarchies</b> of quality features, which are essential for building <b>structured quality models</b>. (3) The standard is <b>widespread</b>.",
    "title": "Using Quality Models in Software Package Selection",
    "year": 2003,
    "number": 1,
    "page": 34,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1159027",
    "selected": false,
    "authors": [
      {
        "name": "Juan Pablo Carvallo",
        "link": ""
      },
      {
        "name": "Xavier Franch",
        "link": ""
      }
    ],
    "authorsList": "Juan Pablo Carvallo, Xavier Franch",
    "citation": "Juan Pablo Carvallo, Xavier Franch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1159027\">Using Quality Models in Software Package Selection</a>, IEEE Software 2003, no. 1, p. 34",
    "searchText": ""
  },
  {
    "quote": "<b>A misuse case</b> is the <b>negative</b> form of <b>a use case</b>; it documents a <b>negative</b> scenario. Its actor is an agent with hostile intent toward the system under design. The relationships between use and misuse cases <b>document threats</b> and <b>their mitigations</b>.",
    "title": "Misuse Cases: Use Cases with Hostile Intent",
    "year": 2003,
    "number": 1,
    "page": 58,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1159030",
    "selected": false,
    "authors": [
      {
        "name": "Ian Alexander",
        "link": ""
      }
    ],
    "authorsList": "Ian Alexander",
    "citation": "Ian Alexander, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1159030\">Misuse Cases: Use Cases with Hostile Intent</a>, IEEE Software 2003, no. 1, p. 58",
    "searchText": ""
  },
  {
    "quote": "I think that one of an <b>architect's</b> most important <b>tasks</b> is to remove architecture by finding ways to <b>eliminate irreversibility</b> in software designs.",
    "title": "Who Needs an Architect?",
    "year": 2003,
    "number": 5,
    "page": 11,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1231144",
    "selected": false,
    "authors": [
      {
        "name": "Martin Fowler",
        "link": ""
      }
    ],
    "authorsList": "Martin Fowler",
    "citation": "Martin Fowler, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1231144\">Who Needs an Architect?</a>, IEEE Software 2003, no. 5, p. 11",
    "searchText": ""
  },
  {
    "quote": "<b>Model-driven development</b> is simply the notion that we can construct a <b>model of a system</b> that we can then <b>transform into the real thing</b>.",
    "title": "Guest Editors' Introduction: Model-Driven Development",
    "year": 2003,
    "number": 5,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1231145",
    "selected": false,
    "authors": [
      {
        "name": "Anthony N. Clark",
        "link": ""
      },
      {
        "name": "Takao Futagami",
        "link": ""
      },
      {
        "name": "Stephen J. Mellor",
        "link": ""
      }
    ],
    "authorsList": "Anthony N. Clark, Takao Futagami, Stephen J. Mellor",
    "citation": "Anthony N. Clark, Takao Futagami, Stephen J. Mellor, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1231145\">Guest Editors' Introduction: Model-Driven Development</a>, IEEE Software 2003, no. 5, p. 14",
    "searchText": ""
  },
  {
    "quote": "The potential benefits of <b>using models</b> are significantly greater in <b>software</b> than in <b>other engineering disciplines</b> because of the potential for a seamless link between models and the systems they represent. Unfortunately, models have <b>rarely produced anticipated benefits</b>. The key lies in <b>resolving pragmatic issues</b> related to the artifacts and culture of the previous generation of software technologies.",
    "title": "The Pragmatics of Model-Driven Development",
    "year": 2003,
    "number": 5,
    "page": 19,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1231146",
    "selected": false,
    "authors": [
      {
        "name": "Bran Selic",
        "link": ""
      }
    ],
    "authorsList": "Bran Selic",
    "citation": "Bran Selic, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1231146\">The Pragmatics of Model-Driven Development</a>, IEEE Software 2003, no. 5, p. 19",
    "searchText": ""
  },
  {
    "quote": "A <b>model</b> is a <b>set of statements</b> about some <b>system under study</b>. Here, <b>statement</b> means some expression about the SUS that can be considered <b>true or false</b> (although no truth value has to necessarily be assigned at any particular point in time). We can use a model <b>to describe</b> an SUS. In this case, we consider the model <b>correct</b> if all its statements are true for the SUS. ... Alternatively, we can use a <b>model as a specification</b> for an SUS or a class of SUS. In this case, we consider a specific SUS <b>valid</b> relative to this specification if no statement in the model is false for the SUS. ",
    "title": "What Models Mean",
    "year": 2003,
    "number": 5,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1231147",
    "selected": false,
    "authors": [
      {
        "name": "Ed Seidewitz",
        "link": ""
      }
    ],
    "authorsList": "Ed Seidewitz",
    "citation": "Ed Seidewitz, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1231147\">What Models Mean</a>, IEEE Software 2003, no. 5, p. 26",
    "searchText": ""
  },
  {
    "quote": "<b>UML</b> can be used in <b>many formats</b>, including presented as <b>text</b>, parsed into a <b>standardized repository</b>, and <b>compiled</b> to multiple programming languages.",
    "title": "UML without Pictures",
    "year": 2003,
    "number": 5,
    "page": 33,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1231148",
    "selected": false,
    "authors": [
      {
        "name": "Conrad Bock",
        "link": ""
      }
    ],
    "authorsList": "Conrad Bock",
    "citation": "Conrad Bock, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1231148\">UML without Pictures</a>, IEEE Software 2003, no. 5, p. 33",
    "searchText": ""
  },
  {
    "quote": "[I]t's helpful to identify two separate orthogonal dimensions of metamodeling, giving rise to two distinct forms of instantiation. One dimension is concerned with <b>language definition</b> and hence uses <b>linguistic instantiation</b>. The other dimension is concerned with <b>domain definition</b> and thus uses <b>ontological instantiation</b>. ",
    "title": "Model-Driven Development: A Metamodeling Foundation",
    "year": 2003,
    "number": 5,
    "page": 36,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2003.1231149",
    "selected": false,
    "authors": [
      {
        "name": "Colin Atkinson",
        "link": ""
      },
      {
        "name": "Thomas K?",
        "link": ""
      }
    ],
    "authorsList": "Colin Atkinson, Thomas K?",
    "citation": "Colin Atkinson, Thomas K?, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2003.1231149\">Model-Driven Development: A Metamodeling Foundation</a>, IEEE Software 2003, no. 5, p. 36",
    "searchText": ""
  },
  {
    "quote": "We can <b>use the metadata</b> in two ways: <b>reflective programming</b> and <b>code generation</b>. ... the obvious question is when to use each style. ... Many people find <b>reflection somewhat hard to use</b>, and it might <b>defeat some of your environment's tooling</b>, such as intelligent reference searches and automated refactorings.  .. You need <b>discipline</b> to ensure that developers don't <b>hand-edit the generated files</b>. ",
    "title": "Using Metadata",
    "year": 2002,
    "number": 6,
    "page": 13,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1049381",
    "selected": false,
    "authors": [
      {
        "name": "Martin Fowler",
        "link": ""
      }
    ],
    "authorsList": "Martin Fowler",
    "citation": "Martin Fowler, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1049381\">Using Metadata</a>, IEEE Software 2002, no. 6, p. 13",
    "searchText": ""
  },
  {
    "quote": "Not only is <b>software increasing</b> in size, complexity, and percentage of functionality, it is increasing in contribution to the <b>balance sheet</b> and <b>profit-and-loss statements</b>. ",
    "title": "Guest Editors? Introduction: Software Engineering as a Business",
    "year": 2002,
    "number": 6,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1049382",
    "selected": false,
    "authors": [
      {
        "name": "Ann Miller",
        "link": ""
      },
      {
        "name": "Christof Ebert",
        "link": ""
      }
    ],
    "authorsList": "Ann Miller, Christof Ebert",
    "citation": "Ann Miller, Christof Ebert, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1049382\">Guest Editors? Introduction: Software Engineering as a Business</a>, IEEE Software 2002, no. 6, p. 18",
    "searchText": ""
  },
  {
    "quote": "Traditional performance metrics no longer suffice to measure results and guide organizations in today's fast-changing economies. Firms need to <b>link performance metrics</b> to <b>strategic objectives</b> that will promote positive future results and accurately capture past performance.",
    "title": "A Balanced Scorecard for a Small Software Group",
    "year": 2002,
    "number": 6,
    "page": 21,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1049383",
    "selected": false,
    "authors": [
      {
        "name": "Steven Mair",
        "link": ""
      }
    ],
    "authorsList": "Steven Mair",
    "citation": "Steven Mair, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1049383\">A Balanced Scorecard for a Small Software Group</a>, IEEE Software 2002, no. 6, p. 21",
    "searchText": ""
  },
  {
    "quote": "Most companies now find that <b>retiring an existing software product</b> is <b>nearly impossible</b>. To build a replacement, you need requirements that <b>match the product's current version</b>, and they probably don't exist! They're <b>not in the documentation</b>, because it wasn't kept up to date. You won't get them from the original customers, users, or developers, because <b>those folks are long gone</b> ...",
    "title": "Predicting Future Maintenance Cost, and How We?re Doing It Wrong",
    "year": 2002,
    "number": 6,
    "page": 111,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1049400",
    "selected": false,
    "authors": [
      {
        "name": "Robert Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert Glass",
    "citation": "Robert Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1049400\">Predicting Future Maintenance Cost, and How We?re Doing It Wrong</a>, IEEE Software 2002, no. 6, p. 111",
    "searchText": ""
  },
  {
    "quote": "A <b>good article</b> says something <b>new</b> or says something <b>old in a new way.</b>",
    "title": "From the Editor: How to Write a Good Technical Article",
    "year": 2002,
    "number": 5,
    "page": 5,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.10006",
    "selected": false,
    "authors": [
      {
        "name": "Steve McConnell",
        "link": ""
      }
    ],
    "authorsList": "Steve McConnell",
    "citation": "Steve McConnell, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.10006\">From the Editor: How to Write a Good Technical Article</a>, IEEE Software 2002, no. 5, p. 5",
    "searchText": ""
  },
  {
    "quote": "The <b>steady decline in computer science and engineering enrollments</b> suggests that these more rigorous methods must be justified or student enrollments will continue to drop.",
    "title": "The Impending Changes in Software Education",
    "year": 2002,
    "number": 5,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1032848",
    "selected": false,
    "authors": [
      {
        "name": "Thomas B. Hilburn",
        "link": ""
      },
      {
        "name": "Watts S. Humphrey",
        "link": ""
      }
    ],
    "authorsList": "Thomas B. Hilburn, Watts S. Humphrey",
    "citation": "Thomas B. Hilburn, Watts S. Humphrey, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1032848\">The Impending Changes in Software Education</a>, IEEE Software 2002, no. 5, p. 22",
    "searchText": ""
  },
  {
    "quote": "We must foster <b>stronger communication</b> between diverse groups, such as various <b>faculty groups</b>, and between <b>universities</b> and <b>industry</b>. Myths tend to develop when there is little communication or when the communication that exists reflects our <b>preconceived notions</b> rather than <b>objective assessment</b>.",
    "title": "Software Engineering Programs: Dispelling the Myths and Misconceptions",
    "year": 2002,
    "number": 5,
    "page": 35,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1032852",
    "selected": false,
    "authors": [
      {
        "name": "Donald J. Bagert",
        "link": ""
      },
      {
        "name": "Hossein Saiedian",
        "link": ""
      },
      {
        "name": "Nancy R. Mead",
        "link": ""
      }
    ],
    "authorsList": "Donald J. Bagert, Hossein Saiedian, Nancy R. Mead",
    "citation": "Donald J. Bagert, Hossein Saiedian, Nancy R. Mead, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1032852\">Software Engineering Programs: Dispelling the Myths and Misconceptions</a>, IEEE Software 2002, no. 5, p. 35",
    "searchText": ""
  },
  {
    "quote": "A <b>difficult thing</b> to achieve in a curriculum <b>is realism</b> — real products signifying tangible, relevant achievements and real people signifying collaborative effort.",
    "title": "Simulating a Software Engineering Apprenticeship",
    "year": 2002,
    "number": 5,
    "page": 49,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1032854",
    "selected": false,
    "authors": [
      {
        "name": "Andrew Macfarlane",
        "link": ""
      },
      {
        "name": "Helen Hays",
        "link": ""
      },
      {
        "name": "Ken Surendran",
        "link": ""
      }
    ],
    "authorsList": "Andrew Macfarlane, Helen Hays, Ken Surendran",
    "citation": "Andrew Macfarlane, Helen Hays, Ken Surendran, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1032854\">Simulating a Software Engineering Apprenticeship</a>, IEEE Software 2002, no. 5, p. 49",
    "searchText": ""
  },
  {
    "quote": "Common sense says that, from time to time, we in the software field ought to be <b>stepping on the brakes</b>, slowing down to <b>learn the lessons</b> we have just rushed through. And <b>project retrospectives</b> would be a good thing to do while that mad, headlong pace has been slowed.",
    "title": "Project Retrospectives, and Why They Never Happen",
    "year": 2002,
    "number": 5,
    "page": 111,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1032872",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1032872\">Project Retrospectives, and Why They Never Happen</a>, IEEE Software 2002, no. 5, p. 111",
    "searchText": ""
  },
  {
    "quote": "A <b>product line</b>'s scope is specified such that the products have a <b>high degree of commonality</b>. A product line organization realizes economically significant reuse...",
    "title": "Guest Editors' Introduction: Initiating Software Product Lines",
    "year": 2002,
    "number": 4,
    "page": 24,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1020282",
    "selected": false,
    "authors": [
      {
        "name": "John D. McGregor",
        "link": ""
      },
      {
        "name": "Linda M. Northrop",
        "link": ""
      },
      {
        "name": "Salah Jarrad",
        "link": ""
      },
      {
        "name": "Klaus Pohl",
        "link": ""
      }
    ],
    "authorsList": "John D. McGregor, Linda M. Northrop, Salah Jarrad, Klaus Pohl",
    "citation": "John D. McGregor, Linda M. Northrop, Salah Jarrad, Klaus Pohl, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1020282\">Guest Editors' Introduction: Initiating Software Product Lines</a>, IEEE Software 2002, no. 4, p. 24",
    "searchText": ""
  },
  {
    "quote": "<b>Product line software engineering</b> is an emerging paradigm that guides organizations toward <b>developing products from core assets</b> instead of developing them one by one from scratch.",
    "title": "Feature-Oriented Product Line Engineering",
    "year": 2002,
    "number": 4,
    "page": 58,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1020288",
    "selected": false,
    "authors": [
      {
        "name": "Kyo C. Kang",
        "link": ""
      },
      {
        "name": "Jaejoon Lee",
        "link": ""
      },
      {
        "name": "Patrick Donohoe",
        "link": ""
      }
    ],
    "authorsList": "Kyo C. Kang, Jaejoon Lee, Patrick Donohoe",
    "citation": "Kyo C. Kang, Jaejoon Lee, Patrick Donohoe, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1020288\">Feature-Oriented Product Line Engineering</a>, IEEE Software 2002, no. 4, p. 58",
    "searchText": ""
  },
  {
    "quote": "Developers at <b>Nokia</b> recently initiated and used a product line to create and deliver <b>mobile browser products</b>. They learned that, <b>to succeed</b>, a software product line must be <b>product and application driven</b>, rather than reuse or platform driven. ",
    "title": "Developing Mobile Browsers in a Product Line",
    "year": 2002,
    "number": 4,
    "page": 73,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1020290",
    "selected": false,
    "authors": [
      {
        "name": "Ari Jaaksi",
        "link": ""
      }
    ],
    "authorsList": "Ari Jaaksi",
    "citation": "Ari Jaaksi, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1020290\">Developing Mobile Browsers in a Product Line</a>, IEEE Software 2002, no. 4, p. 73",
    "searchText": ""
  },
  {
    "quote": "<b>The discipline of completeness</b> is a willingness and ability to search for and deal not just with every <b>conceivable mode</b> of failure but with as many <b>inconceivable mode</b>s as you can find through exploration and testing.",
    "title": "Guest Editor's Introduction: Breaking Out of the Software Engineering Mind-Mold",
    "year": 2002,
    "number": 4,
    "page": 90,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1020294",
    "selected": false,
    "authors": [
      {
        "name": "Terry Bollinger",
        "link": ""
      }
    ],
    "authorsList": "Terry Bollinger",
    "citation": "Terry Bollinger, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1020294\">Guest Editor's Introduction: Breaking Out of the Software Engineering Mind-Mold</a>, IEEE Software 2002, no. 4, p. 90",
    "searchText": ""
  },
  {
    "quote": "[T]wo dichotomies characterize software process improvement efforts and approaches: <b>disciplined</b> vs. <b>creative</b> work and <b>procurer risks</b> vs. <b>user satisfaction</b>. ",
    "title": "Improving Software Process Improvement",
    "year": 2002,
    "number": 4,
    "page": 92,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1020295",
    "selected": false,
    "authors": [
      {
        "name": "Reidar Conradi",
        "link": ""
      },
      {
        "name": "Alfonso Fuggetta",
        "link": ""
      }
    ],
    "authorsList": "Reidar Conradi, Alfonso Fuggetta",
    "citation": "Reidar Conradi, Alfonso Fuggetta, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1020295\">Improving Software Process Improvement</a>, IEEE Software 2002, no. 4, p. 92",
    "searchText": ""
  },
  {
    "quote": "<b>Books</b> on the subject <b>favor the 'light' side</b> of the discipline: <b>project management</b>, software <b>process improvement</b>, schedule and cost estimation, and so forth. The real <b>technology</b> necessary to build software is often <b>described abstractly</b>, given as obvious, <b>or ignored</b> altogether. But software <b>development is a fundamentally technical problem</b> for which management solutions can only be partially effective.",
    "title": "Software Engineering is Not Enough",
    "year": 2002,
    "number": 4,
    "page": 108,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1020297",
    "selected": false,
    "authors": [
      {
        "name": "James A. Whittaker",
        "link": ""
      },
      {
        "name": "Steven Atkin",
        "link": ""
      }
    ],
    "authorsList": "James A. Whittaker, Steven Atkin",
    "citation": "James A. Whittaker, Steven Atkin, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1020297\">Software Engineering is Not Enough</a>, IEEE Software 2002, no. 4, p. 108",
    "searchText": ""
  },
  {
    "quote": "<b>Software measurement</b> has the potential to play an important role in risk management during product development. <b>Metrics</b> incorporated into <b>predictive models</b> can give <b>advanced warning</b> of potential risks.",
    "title": "Software Measurement: Uncertainty and Causal Modeling",
    "year": 2002,
    "number": 4,
    "page": 116,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1020298",
    "selected": false,
    "authors": [
      {
        "name": "Norman Fenton",
        "link": ""
      },
      {
        "name": "Paul Krause",
        "link": ""
      },
      {
        "name": "Martin Neil",
        "link": ""
      }
    ],
    "authorsList": "Norman Fenton, Paul Krause, Martin Neil",
    "citation": "Norman Fenton, Paul Krause, Martin Neil, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1020298\">Software Measurement: Uncertainty and Causal Modeling</a>, IEEE Software 2002, no. 4, p. 116",
    "searchText": ""
  },
  {
    "quote": "[I]t is difficult to make <b>decisions about performance</b> from <b>just looking at the design</b>. Rather, you have to actually <b>run</b> the code and <b>measure performance</b>.",
    "title": "Yet Another Optimization Article",
    "year": 2002,
    "number": 3,
    "page": 20,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1003448",
    "selected": false,
    "authors": [
      {
        "name": "Martin Fowler",
        "link": ""
      }
    ],
    "authorsList": "Martin Fowler",
    "citation": "Martin Fowler, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1003448\">Yet Another Optimization Article</a>, IEEE Software 2002, no. 3, p. 20",
    "searchText": ""
  },
  {
    "quote": "Using <b>mock objects</b>, you can <b>test code in splendid isolation</b>, simulating all those messy real-world things that would otherwise make automated testing impossible. And, as with many other testing practices, the discipline of using mock objects <b>can improve your code's structure</b>.",
    "title": "Mock Objects",
    "year": 2002,
    "number": 3,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1003449",
    "selected": false,
    "authors": [
      {
        "name": "Dave Thomas",
        "link": ""
      },
      {
        "name": "Andy Hunte",
        "link": ""
      }
    ],
    "authorsList": "Dave Thomas, Andy Hunte",
    "citation": "Dave Thomas, Andy Hunte, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1003449\">Mock Objects</a>, IEEE Software 2002, no. 3, p. 22",
    "searchText": ""
  },
  {
    "quote": "Software organizations' main assets are not plants, buildings, or expensive machines. A software organization's main asset is its <b>intellectual capital</b>, as it is in sectors such as consulting, law, investment banking, and advertising. The major problem with intellectual capital is that <b>it has legs</b> and walks home every day. At the same rate experience walks out the door, inexperience walks in the door. Whether or not many software organizations admit it, they face the challenge of <b>sustaining the level of competence</b> needed to win contracts and fulfill undertakings.",
    "title": "Guest Editors' Introduction: Knowledge Management in Software Engineering",
    "year": 2002,
    "number": 3,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1003450",
    "selected": false,
    "authors": [
      {
        "name": "Ioana Rus",
        "link": ""
      },
      {
        "name": "Mikael Lindvall",
        "link": ""
      }
    ],
    "authorsList": "Ioana Rus, Mikael Lindvall",
    "citation": "Ioana Rus, Mikael Lindvall, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1003450\">Guest Editors' Introduction: Knowledge Management in Software Engineering</a>, IEEE Software 2002, no. 3, p. 26",
    "searchText": ""
  },
  {
    "quote": "[A]n emerging trend is to develop <b>knowledge management</b> and <b>knowledge sharing initiatives</b> within organizations. For example, <b>NASA</b> formed a Knowledge Management Team, comprised of NASA representatives. NASA Goddard Space Flight Center (GSFC) has several knowledge management initiatives underway on the expert and knowledge retention side.",
    "title": "A Look at NASA Goddard Space Flight Center's Knowledge Management Initiatives",
    "year": 2002,
    "number": 3,
    "page": 40,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1003451",
    "selected": false,
    "authors": [
      {
        "name": "Jay Liebowitz",
        "link": ""
      }
    ],
    "authorsList": "Jay Liebowitz",
    "citation": "Jay Liebowitz, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1003451\">A Look at NASA Goddard Space Flight Center's Knowledge Management Initiatives</a>, IEEE Software 2002, no. 3, p. 40",
    "searchText": ""
  },
  {
    "quote": "<b>Postmortem analysis</b> is a practical method for initiating knowledge management by <b>capturing experience</b> and improvement suggestions from completed projects.",
    "title": "Postmortem: Never Leave a Project without It",
    "year": 2002,
    "number": 3,
    "page": 43,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1003452",
    "selected": false,
    "authors": [
      {
        "name": "Andreas Birk",
        "link": ""
      },
      {
        "name": "Torgeir Dingsøyr",
        "link": ""
      },
      {
        "name": "Tor Stålhane",
        "link": ""
      }
    ],
    "authorsList": "Andreas Birk, Torgeir Dingsøyr, Tor Stålhane",
    "citation": "Andreas Birk, Torgeir Dingsøyr, Tor Stålhane, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1003452\">Postmortem: Never Leave a Project without It</a>, IEEE Software 2002, no. 3, p. 43",
    "searchText": ""
  },
  {
    "quote": "In an effort to improve software development and acquisition processes and explicitly reuse knowledge from previous software projects, <b>DaimlerChrysler</b> created a <b>Software Experience Center</b>.",
    "title": "Experience in Implementing a Learning Software Organization",
    "year": 2002,
    "number": 3,
    "page": 46,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1003453",
    "selected": false,
    "authors": [
      {
        "name": "Kurt Schneider",
        "link": ""
      },
      {
        "name": "Jan-Peter von Hunnius",
        "link": ""
      },
      {
        "name": "Victor Basili",
        "link": ""
      }
    ],
    "authorsList": "Kurt Schneider, Jan-Peter von Hunnius, Victor Basili",
    "citation": "Kurt Schneider, Jan-Peter von Hunnius, Victor Basili, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1003453\">Experience in Implementing a Learning Software Organization</a>, IEEE Software 2002, no. 3, p. 46",
    "searchText": ""
  },
  {
    "quote": "The software field has been subjected, over the years, to <b>excessive claims of benefits</b> for almost every new technology. Fourth-generation languages were to lead to '<b>programming without programmers</b>,' CASE tools would bring about '<b>the automation of programming</b>,' and object orientation was to be a dramatic new methodological approach to systems development that would replace all the other, older, methodologies.",
    "title": "The Naturalness of Object Orientation: Beating a Dead Horse?",
    "year": 2002,
    "number": 3,
    "page": 103,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.1003467",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.1003467\">The Naturalness of Object Orientation: Beating a Dead Horse?</a>, IEEE Software 2002, no. 3, p. 103",
    "searchText": ""
  },
  {
    "quote": "In <b>real archaeology</b>, you're investigating some situation, trying to understand what you're looking at and how it all fits together. To do this, you must be careful to <b>preserve the artifacts</b> you find and <b>respect and understand</b> the cultural forces that produced them. ... <b>Code</b> becomes legacy code just about as soon as it's written, and suddenly we have exactly the <b>same issues as the archaeologists</b>: What are we looking at? How does it fit in with the rest of the world? And what were they thinking?",
    "title": "Software Archaeology",
    "year": 2002,
    "number": 2,
    "page": 20,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.991327",
    "selected": false,
    "authors": [
      {
        "name": "Dave Thomas",
        "link": ""
      },
      {
        "name": "Andy Hunt",
        "link": ""
      }
    ],
    "authorsList": "Dave Thomas, Andy Hunt",
    "citation": "Dave Thomas, Andy Hunt, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.991327\">Software Archaeology</a>, IEEE Software 2002, no. 2, p. 20",
    "searchText": ""
  },
  {
    "quote": "The real departure for <b>Web-based enterprise applications</b> is the possibility of <b>wide-ranging accessibility</b>. A system that might be deployed in-house at a manufacturing company can now be deployed to all the dealers of that manufacturer's products. Indeed, it can be deployed to all the customers.",
    "title": "The Software Engineering of Internet Software: Guest Editors' Introduction",
    "year": 2002,
    "number": 2,
    "page": 23,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.991328",
    "selected": false,
    "authors": [
      {
        "name": "Martin Fowler",
        "link": ""
      },
      {
        "name": "Elizabeth Hendrickson",
        "link": ""
      }
    ],
    "authorsList": "Martin Fowler, Elizabeth Hendrickson",
    "citation": "Martin Fowler, Elizabeth Hendrickson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.991328\">The Software Engineering of Internet Software: Guest Editors' Introduction</a>, IEEE Software 2002, no. 2, p. 23",
    "searchText": ""
  },
  {
    "quote": "In <b>only four or five years</b>, the <b>world wide web</b> has changed from a <b>static collection</b> of HTML web pages to a <b>dynamic engine</b> that powers e-commerce, collaborative work, and distribution of information and entertainment. ... Web sites that depend on <b>unreliable software</b> will <b>lose customers</b>, and the businesses could lose much money. Companies that want to do business over the Web must spend resources to ensure high reliability. Indeed, they cannot afford not to.",
    "title": "Quality Attributes of Web Software Applications",
    "year": 2002,
    "number": 2,
    "page": 25,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.991329",
    "selected": false,
    "authors": [
      {
        "name": "Jeff Offutt",
        "link": ""
      }
    ],
    "authorsList": "Jeff Offutt",
    "citation": "Jeff Offutt, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.991329\">Quality Attributes of Web Software Applications</a>, IEEE Software 2002, no. 2, p. 25",
    "searchText": ""
  },
  {
    "quote": "Relatively <b>few design principles</b> are required to <b>design scalable systems</b> ... : <b>divide and conquer</b> (D&C), <b>asynchrony</b>, <b>encapsulation</b>, <b>concurrency</b>, <b>parsimony</b>.",
    "title": "Server-Side Design Principles for Scalable Internet Systems",
    "year": 2002,
    "number": 2,
    "page": 34,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.991330",
    "selected": false,
    "authors": [
      {
        "name": "Colleen Roe",
        "link": ""
      },
      {
        "name": "Sergio Gonik",
        "link": ""
      }
    ],
    "authorsList": "Colleen Roe, Sergio Gonik",
    "citation": "Colleen Roe, Sergio Gonik, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.991330\">Server-Side Design Principles for Scalable Internet Systems</a>, IEEE Software 2002, no. 2, p. 34",
    "searchText": ""
  },
  {
    "quote": "Despite breathless declarations that the Web represents a new paradigm defined by new rules, professional developers are realizing that <b>lessons learned</b> in the <b>pre-Internet days</b> of software development <b>still apply</b>. Web pages are user interfaces, HTML programming is programming, and browser-deployed applications are software systems that can <b>benefit from basic software engineering principles</b>.",
    "title": "Usage-Centered Engineering for Web Applications",
    "year": 2002,
    "number": 2,
    "page": 42,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.991331",
    "selected": false,
    "authors": [
      {
        "name": "Larry L. Constantine",
        "link": ""
      },
      {
        "name": "Lucy A.D. Lockwood",
        "link": ""
      }
    ],
    "authorsList": "Larry L. Constantine, Lucy A.D. Lockwood",
    "citation": "Larry L. Constantine, Lucy A.D. Lockwood, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.991331\">Usage-Centered Engineering for Web Applications</a>, IEEE Software 2002, no. 2, p. 42",
    "searchText": ""
  },
  {
    "quote": "Many current <b>Web technologies</b> lend themselves to <b>bad practices</b>, including <b>cut-and-paste</b> reuse, <b>ad-hoc scripts</b>, <b>direct-to-database code</b>, and <b>fragmented business logic</b>. [G]ood design practices are increasingly important in Web development ... [a] <b>Model-View-Controller</b> ... framework lets developers focus on writing application code instead of dealing with servlets, requests, or session variables.",
    "title": "Objects and the Web",
    "year": 2002,
    "number": 2,
    "page": 51,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.991332",
    "selected": false,
    "authors": [
      {
        "name": "Alan Knight",
        "link": ""
      },
      {
        "name": "Naci Dai",
        "link": ""
      }
    ],
    "authorsList": "Alan Knight, Naci Dai",
    "citation": "Alan Knight, Naci Dai, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.991332\">Objects and the Web</a>, IEEE Software 2002, no. 2, p. 51",
    "searchText": ""
  },
  {
    "quote": "How to <b>test output from the server</b> is another classic problem because of the nature of Web applications. How do you test HTML? Certainly we don't want tests that assert that the output is some <b>long string of HTML</b>. ... Testing the Web page look is not usually the goal; <b>testing the data in the output</b> is. Any <b>slight change</b> to the output—for example, a cosmetic change such as making a word appear in red—<b>should not break an output test</b>.",
    "title": "Going Faster: Testing The Web Application",
    "year": 2002,
    "number": 2,
    "page": 60,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.991333",
    "selected": false,
    "authors": [
      {
        "name": "Robert Mee",
        "link": ""
      },
      {
        "name": "Edward Hieatt",
        "link": ""
      }
    ],
    "authorsList": "Robert Mee, Edward Hieatt",
    "citation": "Robert Mee, Edward Hieatt, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.991333\">Going Faster: Testing The Web Application</a>, IEEE Software 2002, no. 2, p. 60",
    "searchText": ""
  },
  {
    "quote": "Software designers in a <b>networked world</b> cannot pretend to work in isolation. <b>People</b> are a <b>critical part</b> of the full software security equation, and software that makes unrealistic or <b>unreasonable security-related demands</b> on users (for example, requiring them to memorize too many passwords that change too often) is software whose security will <b>inevitably be breached</b>.",
    "title": "Building Software Securely from the Ground Up",
    "year": 2002,
    "number": 1,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.976936",
    "selected": false,
    "authors": [
      {
        "name": "James A. Whittaker",
        "link": ""
      },
      {
        "name": "Chuck Howell",
        "link": ""
      },
      {
        "name": "Anup K. Ghosh",
        "link": ""
      }
    ],
    "authorsList": "James A. Whittaker, Chuck Howell, Anup K. Ghosh",
    "citation": "James A. Whittaker, Chuck Howell, Anup K. Ghosh, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.976936\">Building Software Securely from the Ground Up</a>, IEEE Software 2002, no. 1, p. 14",
    "searchText": ""
  },
  {
    "quote": "<b>Buffer overflow vulnerabilities</b> are perhaps the single most important security problem of the past decade. ",
    "title": "Improving Security Using Extensible Lightweight Static Analysis",
    "year": 2002,
    "number": 1,
    "page": 42,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.976940",
    "selected": false,
    "authors": [
      {
        "name": "David Larochelle",
        "link": ""
      },
      {
        "name": "David Evans",
        "link": ""
      }
    ],
    "authorsList": "David Larochelle, David Evans",
    "citation": "David Larochelle, David Evans, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.976940\">Improving Security Using Extensible Lightweight Static Analysis</a>, IEEE Software 2002, no. 1, p. 42",
    "searchText": ""
  },
  {
    "quote": "Shout it from the rooftops! <b>Computing and software are maturing</b> into amazing, useful, and — hooray, hooray! — dependable disciplines.",
    "title": "Failure Is Looking More like Success These Days",
    "year": 2002,
    "number": 1,
    "page": 103,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2002.976953",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2002.976953\">Failure Is Looking More like Success These Days</a>, IEEE Software 2002, no. 1, p. 103",
    "searchText": ""
  },
  {
    "quote": "Where <b>design counts</b> is often not in how the software runs but in <b>how easy it is to change</b>. When how it runs is important, <b>ease of change</b> can be the biggest factor in ensuring good performance. This drive toward changeability is why it's so important for a design to <b>clearly show</b> what the program does—and how it does it. After all, it's hard to change something when you <b>can't see</b> what it does.",
    "title": "To Be Explicit",
    "year": 2001,
    "number": 6,
    "page": 10,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.965796",
    "selected": false,
    "authors": [
      {
        "name": "Martin Fowler",
        "link": ""
      }
    ],
    "authorsList": "Martin Fowler",
    "citation": "Martin Fowler, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.965796\">To Be Explicit</a>, IEEE Software 2001, no. 6, p. 10",
    "searchText": ""
  },
  {
    "quote": "[<b>Extreme Programming</b>] XP is not the ultimate silver bullet that offers an answer to all development problems. But it has <b>gained significant momentum</b> and an increasing number of software teams are ready to give it a try.",
    "title": "Guest Editor's Introduction: Reports from the Field--Using Extreme Programming and Other Experiences",
    "year": 2001,
    "number": 6,
    "page": 17,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2001.965797",
    "selected": false,
    "authors": [
      {
        "name": "Wolfgang Strigel",
        "link": ""
      }
    ],
    "authorsList": "Wolfgang Strigel",
    "citation": "Wolfgang Strigel, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2001.965797\">Guest Editor's Introduction: Reports from the Field--Using Extreme Programming and Other Experiences</a>, IEEE Software 2001, no. 6, p. 17",
    "searchText": ""
  },
  {
    "quote": "The <b>SW-CMM</b> focuses on both the <b>management issues</b> ... <b>XP</b>, on the other hand, is a specific <b>set of practices</b>—a 'methodology'—that is effective in the context of small, colocated teams with rapidly changing requirements. <b>Taken together</b>, the two methods can create <b>synergy</b>, particularly in conjunction with other good engineering and management practices. ",
    "title": "Extreme Programming from a CMM Perspective",
    "year": 2001,
    "number": 6,
    "page": 19,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.965798",
    "selected": false,
    "authors": [
      {
        "name": "Mark C. Paulk",
        "link": ""
      }
    ],
    "authorsList": "Mark C. Paulk",
    "citation": "Mark C. Paulk, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.965798\">Extreme Programming from a CMM Perspective</a>, IEEE Software 2001, no. 6, p. 19",
    "searchText": ""
  },
  {
    "quote": "All programmers <b>learn from experience</b>. A few are rather fast at it and learn to avoid repeating mistakes after once or twice. Others are slower and repeat mistakes hundreds of times. Most programmers' behavior falls somewhere in between: They reliably <b>learn from their mistakes</b>, but the process is <b>slow and tedious</b>. The probability of making a structurally similar mistake again decreases slightly during each of some dozen repetitions. Because of this a programmer often takes years to learn a certain rule—positive or negative—about his or her behavior. ",
    "title": "Accelerating Learning from Experience: Avoiding Defects Faster",
    "year": 2001,
    "number": 6,
    "page": 56,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.965803",
    "selected": false,
    "authors": [
      {
        "name": "Lutz Prechelt",
        "link": ""
      }
    ],
    "authorsList": "Lutz Prechelt",
    "citation": "Lutz Prechelt, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.965803\">Accelerating Learning from Experience: Avoiding Defects Faster</a>, IEEE Software 2001, no. 6, p. 56",
    "searchText": ""
  },
  {
    "quote": "<b>Extreme Programming</b> is a <b>fascinating collection</b> of elements, some good and some bad.",
    "title": "Extreme Programming: The Good, the Bad, and the Bottom Line",
    "year": 2001,
    "number": 6,
    "page": 111,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2001.965816",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2001.965816\">Extreme Programming: The Good, the Bad, and the Bottom Line</a>, IEEE Software 2001, no. 6, p. 111",
    "searchText": ""
  },
  {
    "quote": "Margaret Boden ... identifies basic <b>types of creative processes</b>: <b>exploratory creativity</b> explores a possible solution space and discovers new ideas, <b>combinatorial creativity</b> combines two or more ideas that already exist to create new ideas, and <b>transformational creativity</b> changes the solution space to make impossible things possible. Most [requirements engineering] RE activities are exploratory. ",
    "title": "Where Do Requirements Come From?",
    "year": 2001,
    "number": 5,
    "page": 10,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.951486",
    "selected": false,
    "authors": [
      {
        "name": "Alexis Gizikis",
        "link": ""
      },
      {
        "name": "Neil Maiden",
        "link": ""
      }
    ],
    "authorsList": "Alexis Gizikis, Neil Maiden",
    "citation": "Alexis Gizikis, Neil Maiden, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.951486\">Where Do Requirements Come From?</a>, IEEE Software 2001, no. 5, p. 10",
    "searchText": ""
  },
  {
    "quote": "Focus on <b>building an environment</b> that will <b>keep your engineers</b> ... Give them <b>rewarding assignments</b>, build cohesive and <b>committed teams</b>, and know what each of them is doing. Then, every week if possible, show that you appreciate their efforts.",
    "title": "Engineers Will Tolerate a Lot of Abuse",
    "year": 2001,
    "number": 5,
    "page": 13,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.951487",
    "selected": false,
    "authors": [
      {
        "name": "Watts S. Humphrey",
        "link": ""
      }
    ],
    "authorsList": "Watts S. Humphrey",
    "citation": "Watts S. Humphrey, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.951487\">Engineers Will Tolerate a Lot of Abuse</a>, IEEE Software 2001, no. 5, p. 13",
    "searchText": ""
  },
  {
    "quote": "Whether you are <b>benchmarking</b> an organization or simply a project, it all boils down to <b>one thing—data</b>. Do you have the necessary data in your company, and is that data valid and comparable?",
    "title": "Collecting Data for Comparability: Benchmarking Software Development Productivity",
    "year": 2001,
    "number": 5,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.951490",
    "selected": false,
    "authors": [
      {
        "name": "Katrina D. Maxwell",
        "link": ""
      }
    ],
    "authorsList": "Katrina D. Maxwell",
    "citation": "Katrina D. Maxwell, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.951490\">Collecting Data for Comparability: Benchmarking Software Development Productivity</a>, IEEE Software 2001, no. 5, p. 22",
    "searchText": ""
  },
  {
    "quote": "In 1999, an organization contributed a large group of enhancement projects to the <b>International Software Benchmarking Standards Group's Data Repository</b>. The contributing organization received an individual benchmark report for each project, comparing it to the most relevant projects in the repository. ... The benchmarking exercise aimed to provide valuable information to the organization and to measure the benchmarking exercise's effectiveness given the <b>repository's anonymous nature</b>.",
    "title": "Organizational Benchmarking Using the ISBSG Data Repository",
    "year": 2001,
    "number": 5,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.951491",
    "selected": false,
    "authors": [
      {
        "name": "Peter R. Hill",
        "link": ""
      },
      {
        "name": "Michael Stringer",
        "link": ""
      },
      {
        "name": "Chris Lokan",
        "link": ""
      },
      {
        "name": "Terry Wright",
        "link": ""
      }
    ],
    "authorsList": "Peter R. Hill, Michael Stringer, Chris Lokan, Terry Wright",
    "citation": "Peter R. Hill, Michael Stringer, Chris Lokan, Terry Wright, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.951491\">Organizational Benchmarking Using the ISBSG Data Repository</a>, IEEE Software 2001, no. 5, p. 26",
    "searchText": ""
  },
  {
    "quote": "Most commercial software producers <b>guard access to the source code</b> of their systems, making it difficult for anyone outside their organizations to apply a variety of measures that could potentially improve system security. But since an attacker could also examine public source code to find flaws, would source code access be a net gain or loss for security? ... having <b>source code available</b> should on balance work <b>in favor of system security</b>.",
    "title": "Does Open Source Improve System Security?",
    "year": 2001,
    "number": 5,
    "page": 57,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.951496",
    "selected": false,
    "authors": [
      {
        "name": "Michael Caloyannides",
        "link": ""
      },
      {
        "name": "Carl Landwehr",
        "link": ""
      },
      {
        "name": "Brian Witten",
        "link": ""
      }
    ],
    "authorsList": "Michael Caloyannides, Carl Landwehr, Brian Witten",
    "citation": "Michael Caloyannides, Carl Landwehr, Brian Witten, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.951496\">Does Open Source Improve System Security?</a>, IEEE Software 2001, no. 5, p. 57",
    "searchText": ""
  },
  {
    "quote": "There are two widely different views on the <b>nature of software work</b>: (1) It is easy, is automatable, and <b>can be done by anyone</b>. (2) It is <b>the most complex undertaking</b> humanity has ever tried.",
    "title": "A Story about the Creativity Involved in Software Work",
    "year": 2001,
    "number": 5,
    "page": 96,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2001.951506",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2001.951506\">A Story about the Creativity Involved in Software Work</a>, IEEE Software 2001, no. 5, p. 96",
    "searchText": ""
  },
  {
    "quote": "Between the late 1960s and early 1990s, the software engineering community strove to formalize schemes that would lead to <b>perfectly correct software</b>. Although a noble undertaking at first, it soon became apparent that correct software was, in general, unobtainable. And furthermore, the costs, even if achievable, would be overwhelming. Modern software systems, even <b>if correct</b>, can still exhibit <b>undesirable behaviors</b> as they execute. ",
    "title": "Guest Editor's Introduction: Software Fault Tolerance-Making Software Behave",
    "year": 2001,
    "number": 4,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2001.936212",
    "selected": false,
    "authors": [
      {
        "name": "Jeffrey Voas",
        "link": ""
      }
    ],
    "authorsList": "Jeffrey Voas",
    "citation": "Jeffrey Voas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2001.936212\">Guest Editor's Introduction: Software Fault Tolerance-Making Software Behave</a>, IEEE Software 2001, no. 4, p. 18",
    "searchText": ""
  },
  {
    "quote": "<b>Fault tolerance</b> is generally implemented by <b>error detection</b> and subsequent <b>system recovery</b>. Recovery consists of <b>error handling</b> (to eliminate errors from the system state) and <b>fault handling</b> (to prevent located faults from being activated again). <b>Fault handling</b> involves four steps: fault <b>diagnosis</b>, fault <b>isolation</b>, system <b>reconfiguration</b>, and system <b>reinitialization</b>.",
    "title": "Fault Tolerance",
    "year": 2001,
    "number": 4,
    "page": 54,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2001.936218",
    "selected": false,
    "authors": [
      {
        "name": "Jeffrey Voas",
        "link": ""
      }
    ],
    "authorsList": "Jeffrey Voas",
    "citation": "Jeffrey Voas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2001.936218\">Fault Tolerance</a>, IEEE Software 2001, no. 4, p. 54",
    "searchText": ""
  },
  {
    "quote": "There are several ways to describe <b>coupling</b>, but it boils down to this: <b>changing one module</b> in a program <b>requires changing another module</b> ... <b>Duplication</b> always <b>implies coupling</b>, because changing one piece of duplicate code implies changing the other.",
    "title": "Reducing Coupling",
    "year": 2001,
    "number": 4,
    "page": 102,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2001.936226",
    "selected": false,
    "authors": [
      {
        "name": "Martin Fowler",
        "link": ""
      }
    ],
    "authorsList": "Martin Fowler",
    "citation": "Martin Fowler, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2001.936226\">Reducing Coupling</a>, IEEE Software 2001, no. 4, p. 102",
    "searchText": ""
  },
  {
    "quote": " In the software and information technology industry, <b>organizational change</b> has been a way of life. It is quite telling to listen to individuals discussing change in their organizations. Their words frame their philosophies: some <b>plan and lead</b> change, others <b>manage</b> it, still others <b>accommodate</b> change, and many simply try to <b>cope</b> with it. ",
    "title": "Guest Editor's Introduction: Organizational Change",
    "year": 2001,
    "number": 3,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2001.922720",
    "selected": false,
    "authors": [
      {
        "name": "Ann Miller",
        "link": ""
      }
    ],
    "authorsList": "Ann Miller",
    "citation": "Ann Miller, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2001.922720\">Guest Editor's Introduction: Organizational Change</a>, IEEE Software 2001, no. 3, p. 18",
    "searchText": ""
  },
  {
    "quote": "Software process improvement efforts will <b>fail</b> if we try to make development <b>processes completely uniform</b> across an organization.",
    "title": "Managing Process Diversity While Improving Your Practices",
    "year": 2001,
    "number": 3,
    "page": 21,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.922721",
    "selected": false,
    "authors": [
      {
        "name": "Michael Deck",
        "link": ""
      }
    ],
    "authorsList": "Michael Deck",
    "citation": "Michael Deck, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.922721\">Managing Process Diversity While Improving Your Practices</a>, IEEE Software 2001, no. 3, p. 21",
    "searchText": ""
  },
  {
    "quote": "[T]raditional <b>software measurement</b>, like traditional software process improvement, is <b>misaligned</b> with two of the three <b>basic strategies</b>, <b>customer intimacy</b> and <b>product innovativeness</b>. Measurement initiatives can succeed if you understand your organization's strategic objectives and then tailor your measurement practices to fit.",
    "title": "What Makes Measuring Software So Hard?",
    "year": 2001,
    "number": 3,
    "page": 41,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.922724",
    "selected": false,
    "authors": [
      {
        "name": "Stan Rifkin",
        "link": ""
      }
    ],
    "authorsList": "Stan Rifkin",
    "citation": "Stan Rifkin, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.922724\">What Makes Measuring Software So Hard?</a>, IEEE Software 2001, no. 3, p. 41",
    "searchText": ""
  },
  {
    "quote": "Pressure to <b>achieve estimation targets</b> is common and tends to cause programmers to skip good software process. This constitutes an <b>absurd result</b> done for an <b>absurd reason</b>.",
    "title": "Frequently Forgotten Fundamental Facts about Software Engineering",
    "year": 2001,
    "number": 3,
    "page": 110,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2001.922739",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2001.922739\">Frequently Forgotten Fundamental Facts about Software Engineering</a>, IEEE Software 2001, no. 3, p. 110",
    "searchText": ""
  },
  {
    "quote": "[<b>Global Software Development</b>] requires close cooperation of individuals with different <b>cultural backgrounds</b>. Cultures differ on many critical dimensions, such as the need for <b>structure</b>, attitudes toward <b>hierarchy</b>, sense of <b>time</b>, and <b>communication</b> styles. ",
    "title": "Guest Editors' Introduction: Global Software Development",
    "year": 2001,
    "number": 2,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.914732",
    "selected": false,
    "authors": [
      {
        "name": "Deependra Moitra",
        "link": ""
      },
      {
        "name": "James D. Herbsleb",
        "link": ""
      }
    ],
    "authorsList": "Deependra Moitra, James D. Herbsleb",
    "citation": "Deependra Moitra, James D. Herbsleb, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.914732\">Guest Editors' Introduction: Global Software Development</a>, IEEE Software 2001, no. 2, p. 16",
    "searchText": ""
  },
  {
    "quote": "Despite the considerable power of today's <b>asynchronous technologies</b> for dispersed work—email, voice mail, online discussion groups, project management tools, Software Configuration Management, and issue and defect-tracking databases—there are still <b>powerful reasons for synchronous</b>—if not <b>face-to-face</b>—communication. Synchronous communication includes telephone, audio conferencing, videoconferencing, application sharing, and sometimes synchronous online code walkthroughs.",
    "title": "Tactical Approaches for Alleviating Distance in Global Software Development",
    "year": 2001,
    "number": 2,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.914734",
    "selected": false,
    "authors": [
      {
        "name": "Ritu Agarwal",
        "link": ""
      },
      {
        "name": "Erran Carmel",
        "link": ""
      }
    ],
    "authorsList": "Ritu Agarwal, Erran Carmel",
    "citation": "Ritu Agarwal, Erran Carmel, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.914734\">Tactical Approaches for Alleviating Distance in Global Software Development</a>, IEEE Software 2001, no. 2, p. 22",
    "searchText": ""
  },
  {
    "quote": "<b>Synching</b> can be problematic because <b>distance still matters</b> in our supposedly borderless world. Distance particularly constrains the synching of <b>tacit knowledge</b>, <b>informal information</b>, and <b>cultural values</b>.",
    "title": "Synching or Sinking: Global Software Outsourcing Relationships",
    "year": 2001,
    "number": 2,
    "page": 54,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.914744",
    "selected": false,
    "authors": [
      {
        "name": "Brian Nicholson",
        "link": ""
      },
      {
        "name": "Richard Heeks",
        "link": ""
      },
      {
        "name": "Sundeep Sahay",
        "link": ""
      },
      {
        "name": "S. Krishna",
        "link": ""
      }
    ],
    "authorsList": "Brian Nicholson, Richard Heeks, Sundeep Sahay, S. Krishna",
    "citation": "Brian Nicholson, Richard Heeks, Sundeep Sahay, S. Krishna, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.914744\">Synching or Sinking: Global Software Outsourcing Relationships</a>, IEEE Software 2001, no. 2, p. 54",
    "searchText": ""
  },
  {
    "quote": "I learned for myself a design principle that's served me well in software development: <b>Keep your user interface code separate from everything else</b>. It's a simple rule, embodied into more than one application framework, but it's often not followed, which causes quite a bit of trouble.",
    "title": "Separating User Interface Code",
    "year": 2001,
    "number": 2,
    "page": 96,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.914754",
    "selected": false,
    "authors": [
      {
        "name": "Martin Fowler",
        "link": ""
      }
    ],
    "authorsList": "Martin Fowler",
    "citation": "Martin Fowler, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.914754\">Separating User Interface Code</a>, IEEE Software 2001, no. 2, p. 96",
    "searchText": ""
  },
  {
    "quote": "<b>Usability is not a luxury</b> but a basic ingredient in software systems: People's <b>productivity</b> and <b>comfort</b> relate directly to the usability of the software they use.",
    "title": "Guest Editors' Introduction: Introducing Usability",
    "year": 2001,
    "number": 1,
    "page": 20,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2001.903155",
    "selected": false,
    "authors": [
      {
        "name": "Helmut Windl",
        "link": ""
      },
      {
        "name": "Natalia Juristo",
        "link": ""
      },
      {
        "name": "Larry Constantine",
        "link": ""
      }
    ],
    "authorsList": "Helmut Windl, Natalia Juristo, Larry Constantine",
    "citation": "Helmut Windl, Natalia Juristo, Larry Constantine, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2001.903155\">Guest Editors' Introduction: Introducing Usability</a>, IEEE Software 2001, no. 1, p. 20",
    "searchText": ""
  },
  {
    "quote": "Contrary to what some might think, <b>usability</b> is not just the appearance of the user interface (UI). Usability relates to how the system interacts with the user, and it includes five basic attributes: <b>learnability</b>, <b>efficiency</b>, user <b>retention</b> over time, <b>error rate</b>, and <b>satisfaction</b>.",
    "title": "Usability Basics for Software Developers",
    "year": 2001,
    "number": 1,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.903160",
    "selected": false,
    "authors": [
      {
        "name": "Helmut Windl",
        "link": ""
      },
      {
        "name": "Natalia Juristo",
        "link": ""
      },
      {
        "name": "Xavier Ferré",
        "link": ""
      },
      {
        "name": "Larry Constantine",
        "link": ""
      }
    ],
    "authorsList": "Helmut Windl, Natalia Juristo, Xavier Ferré, Larry Constantine",
    "citation": "Helmut Windl, Natalia Juristo, Xavier Ferré, Larry Constantine, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.903160\">Usability Basics for Software Developers</a>, IEEE Software 2001, no. 1, p. 22",
    "searchText": ""
  },
  {
    "quote": "<b>A cost-benefit analysis</b> might be a necessary first step in introducing usability into your organization or a particular project. In usability cost-benefit analyses, the goal is to estimate the <b>costs and benefits</b> of specific usability activities—such as <b>prototyping</b>, usability <b>testing</b>, heuristic <b>evaluation</b>, and so on—and contrast them with the likely <b>costs of not conducting</b> the activities.",
    "title": "Usability and the Bottom Line",
    "year": 2001,
    "number": 1,
    "page": 31,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.903161",
    "selected": false,
    "authors": [
      {
        "name": "George M. Donahue",
        "link": ""
      }
    ],
    "authorsList": "George M. Donahue",
    "citation": "George M. Donahue, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.903161\">Usability and the Bottom Line</a>, IEEE Software 2001, no. 1, p. 31",
    "searchText": ""
  },
  {
    "quote": "Over the last year, I've been struck by one of the underlying principles that leads to <b>better designs</b>: <b>remove duplication</b>. ... Often, the <b>hard part</b> of eliminating duplication is <b>spotting it</b> in the first place. ",
    "title": "Avoiding Repetition",
    "year": 2001,
    "number": 1,
    "page": 97,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.903175",
    "selected": false,
    "authors": [
      {
        "name": "Martin Fowler",
        "link": ""
      }
    ],
    "authorsList": "Martin Fowler",
    "citation": "Martin Fowler, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.903175\">Avoiding Repetition</a>, IEEE Software 2001, no. 1, p. 97",
    "searchText": ""
  },
  {
    "quote": "<b>[E]stimates</b> have a number of uses, and you can often get both better and simpler estimates if you <b>keep the use</b> of your estimate <b>in mind</b>.",
    "title": "Guest Editors' Introduction: Software Estimation Perspectives",
    "year": 2000,
    "number": 6,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2000.895164",
    "selected": false,
    "authors": [
      {
        "name": "Richard E. Fairley",
        "link": ""
      },
      {
        "name": "Barry W. Boehm",
        "link": ""
      }
    ],
    "authorsList": "Richard E. Fairley, Barry W. Boehm",
    "citation": "Richard E. Fairley, Barry W. Boehm, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2000.895164\">Guest Editors' Introduction: Software Estimation Perspectives</a>, IEEE Software 2000, no. 6, p. 22",
    "searchText": ""
  },
  {
    "quote": "Several <b>estimation techniques and tools</b> are available for <b>predicting the amount of time</b> and effort needed to develop software systems. Most of these techniques require a wide variety of <b>input factors</b>, including <b>historical data</b>, system <b>complexity measures</b>, the development team's <b>level of skill</b>, any project <b>constraints</b>, and an estimate of the <b>volume of code</b> (the project's size). ",
    "title": "Improving Size Estimates Using Historical Data",
    "year": 2000,
    "number": 6,
    "page": 27,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.895165",
    "selected": false,
    "authors": [
      {
        "name": "James Bielak",
        "link": ""
      }
    ],
    "authorsList": "James Bielak",
    "citation": "James Bielak, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.895165\">Improving Size Estimates Using Historical Data</a>, IEEE Software 2000, no. 6, p. 27",
    "searchText": ""
  },
  {
    "quote": "<b>Product quality</b> directly relates to project <b>cost</b> and <b>schedule estimation</b>; for example, <b>undetected defects</b> in a key work product—such as a requirements document—might lead to time-consuming adjustments. ",
    "title": "Using Inspection Data for Defect Estimation",
    "year": 2000,
    "number": 6,
    "page": 36,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.895166",
    "selected": false,
    "authors": [
      {
        "name": "Stefan Biffl",
        "link": ""
      }
    ],
    "authorsList": "Stefan Biffl",
    "citation": "Stefan Biffl, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.895166\">Using Inspection Data for Defect Estimation</a>, IEEE Software 2000, no. 6, p. 36",
    "searchText": ""
  },
  {
    "quote": "One of the most important factors in <b>improving worker</b> performance is <b>prompt and explicit feedback</b>. ",
    "title": "Guest Editor's Introduction: The Personal Software Process-Status and Trends",
    "year": 2000,
    "number": 6,
    "page": 71,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2000.895171",
    "selected": false,
    "authors": [
      {
        "name": "Watts S. Humphrey",
        "link": ""
      }
    ],
    "authorsList": "Watts S. Humphrey",
    "citation": "Watts S. Humphrey, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2000.895171\">Guest Editor's Introduction: The Personal Software Process-Status and Trends</a>, IEEE Software 2000, no. 6, p. 71",
    "searchText": ""
  },
  {
    "quote": "'<b>How important is mathematics</b> to the software <b>practitioner</b>?' According to this research, at least, the answer is not only 'not very much,' it's '<b>not nearly as much</b> as we academics have thought.'",
    "title": "A New Answer to 'How Important is Mathematics to the Software Practitioner?'",
    "year": 2000,
    "number": 6,
    "page": 135,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2000.10052",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2000.10052\">A New Answer to 'How Important is Mathematics to the Software Practitioner?'</a>, IEEE Software 2000, no. 6, p. 135",
    "searchText": ""
  },
  {
    "quote": "[T]he Internet and public phone system (upon which the Internet sits) provide an <b>information highway</b> that also was <b>not designed to thwart</b> 'bad guys.' As a result, today we rely on an infrastructure that <b>enables</b> rogue <b>individuals and nations</b> to <b>remotely attack</b> information assets.",
    "title": "Guest Editor's Introduction: Malicious IT",
    "year": 2000,
    "number": 5,
    "page": 23,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2000.10040",
    "selected": false,
    "authors": [
      {
        "name": "Nancy Mead",
        "link": ""
      },
      {
        "name": "Jeffrey Voas",
        "link": ""
      }
    ],
    "authorsList": "Nancy Mead, Jeffrey Voas",
    "citation": "Nancy Mead, Jeffrey Voas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2000.10040\">Guest Editor's Introduction: Malicious IT</a>, IEEE Software 2000, no. 5, p. 23",
    "searchText": ""
  },
  {
    "quote": "<b>Malicious code</b> is any code added, changed, or removed from a software system to <b>intentionally cause harm</b> or subvert the system's intended function.",
    "title": "Attacking Malicious Code: A Report to the Infosec Research Council",
    "year": 2000,
    "number": 5,
    "page": 33,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.877857",
    "selected": false,
    "authors": [
      {
        "name": "Gary McGraw",
        "link": ""
      },
      {
        "name": "Greg Morrisett",
        "link": ""
      }
    ],
    "authorsList": "Gary McGraw, Greg Morrisett",
    "citation": "Gary McGraw, Greg Morrisett, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.877857\">Attacking Malicious Code: A Report to the Infosec Research Council</a>, IEEE Software 2000, no. 5, p. 33",
    "searchText": ""
  },
  {
    "quote": "<b>Attacks</b> can involve numerous attackers targeting many <b>victims</b>. Defining what constitutes an attack is difficult because multiple perspectives are involved. The <b>attacker viewpoint</b> is typically characterized by <b>intent</b> and <b>risk of exposure</b>. From a <b>victim's perspective</b>, intrusions are characterized by their <b>manifestations</b>, which might or might not include <b>damage</b>. ",
    "title": "Defending Yourself: The Role of Intrusion Detection Systems",
    "year": 2000,
    "number": 5,
    "page": 42,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.877859",
    "selected": false,
    "authors": [
      {
        "name": "Julia Allen",
        "link": ""
      },
      {
        "name": "John McHugh",
        "link": ""
      },
      {
        "name": "Alan Christie",
        "link": ""
      }
    ],
    "authorsList": "Julia Allen, John McHugh, Alan Christie",
    "citation": "Julia Allen, John McHugh, Alan Christie, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.877859\">Defending Yourself: The Role of Intrusion Detection Systems</a>, IEEE Software 2000, no. 5, p. 42",
    "searchText": ""
  },
  {
    "quote": "<b>Jslint</b> ... statically <b>scans Java source code</b> looking for potentially <b>insecure coding practices</b>. Automated source code scanning tools can help programmers easily <b>prevent some types of bugs</b>.",
    "title": "Statically Scanning Java Code: Finding Security Vulnerabilities",
    "year": 2000,
    "number": 5,
    "page": 68,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.877869",
    "selected": false,
    "authors": [
      {
        "name": "Gary McGraw",
        "link": ""
      },
      {
        "name": "Edward W. Felten",
        "link": ""
      },
      {
        "name": "John Viega",
        "link": ""
      },
      {
        "name": "Tom Mutdosch",
        "link": ""
      }
    ],
    "authorsList": "Gary McGraw, Edward W. Felten, John Viega, Tom Mutdosch",
    "citation": "Gary McGraw, Edward W. Felten, John Viega, Tom Mutdosch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.877869\">Statically Scanning Java Code: Finding Security Vulnerabilities</a>, IEEE Software 2000, no. 5, p. 68",
    "searchText": ""
  },
  {
    "quote": "We now realize that <b>small-scale software engineering</b> is <b>not</b> just a <b>degenerate case of large-scale software engineering</b> but an important subfield in its own right. ",
    "title": "Guest Editors' Introduction: Software Engineering in the Small",
    "year": 2000,
    "number": 5,
    "page": 75,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2000.10047",
    "selected": false,
    "authors": [
      {
        "name": "Robert Ward",
        "link": ""
      },
      {
        "name": "Mauri Laitinen",
        "link": ""
      },
      {
        "name": "Mohamed Fayad",
        "link": ""
      }
    ],
    "authorsList": "Robert Ward, Mauri Laitinen, Mohamed Fayad",
    "citation": "Robert Ward, Mauri Laitinen, Mohamed Fayad, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2000.10047\">Guest Editors' Introduction: Software Engineering in the Small</a>, IEEE Software 2000, no. 5, p. 75",
    "searchText": ""
  },
  {
    "quote": "<b>Computer science research</b> was where we would have expected <b>generalized solutions</b> to arise. But that is simply <b>not the case</b>. CS might have begun the domain generalization movement with its compiler-compiling work, but <b>the world of practice</b>, and especially the world of vendors, quickly took over that chore—and that dramatic success.",
    "title": "The Generalization of an Application Domain",
    "year": 2000,
    "number": 5,
    "page": 127,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2000.10043",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2000.10043\">The Generalization of an Application Domain</a>, IEEE Software 2000, no. 5, p. 127",
    "searchText": ""
  },
  {
    "quote": "A '<b>one size fits all</b>' approach <b>doesn't work</b> in software development. Processes work or are appropriate only under certain conditions.",
    "title": "Guest Editors' Introduction: Process Diversity in Software Development",
    "year": 2000,
    "number": 4,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2000.854063",
    "selected": false,
    "authors": [
      {
        "name": "Ioana Rus",
        "link": ""
      },
      {
        "name": "Mikael Lindvall",
        "link": ""
      }
    ],
    "authorsList": "Ioana Rus, Mikael Lindvall",
    "citation": "Ioana Rus, Mikael Lindvall, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2000.854063\">Guest Editors' Introduction: Process Diversity in Software Development</a>, IEEE Software 2000, no. 4, p. 14",
    "searchText": ""
  },
  {
    "quote": "The software industry has practiced <b>pair programming</b>--two programmers working side by side at one computer on the same problem--for years. But people who haven't tried it often reject the idea as a waste of resources. ... pair programming yields <b>better software products</b> in <b>less time</b>--and <b>happier</b>, <b>more confident</b> programmers.",
    "title": "Strengthening the Case for Pair Programming",
    "year": 2000,
    "number": 4,
    "page": 19,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.854064",
    "selected": false,
    "authors": [
      {
        "name": "Ward Cunningham",
        "link": ""
      },
      {
        "name": "Laurie Williams",
        "link": ""
      },
      {
        "name": "Robert R. Kessler",
        "link": ""
      },
      {
        "name": "Ron Jeffries",
        "link": ""
      }
    ],
    "authorsList": "Ward Cunningham, Laurie Williams, Robert R. Kessler, Ron Jeffries",
    "citation": "Ward Cunningham, Laurie Williams, Robert R. Kessler, Ron Jeffries, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.854064\">Strengthening the Case for Pair Programming</a>, IEEE Software 2000, no. 4, p. 19",
    "searchText": ""
  },
  {
    "quote": "<b>Scrum</b> is a process for <b>incrementally building</b> software in complex environments. Scrum provides <b>empirical controls</b> that allow the development to occur as close to the edge of chaos as the developing organization can tolerate. ... During the sprint, the team holds frequent (usually <b>daily</b>) Scrum <b>meetings</b>. These meetings address the observation made by <b>Brooks</b>: 'How does a project get to be a year late? One day at a time.' When the team comes together for a short, daily meeting, <b>any slip is immediately obvious</b> to everyone.",
    "title": "The Scrum Software Development Process for Small Teams",
    "year": 2000,
    "number": 4,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.854065",
    "selected": false,
    "authors": [
      {
        "name": "Norman S. Janoff",
        "link": ""
      },
      {
        "name": "Linda Rising",
        "link": ""
      }
    ],
    "authorsList": "Norman S. Janoff, Linda Rising",
    "citation": "Norman S. Janoff, Linda Rising, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.854065\">The Scrum Software Development Process for Small Teams</a>, IEEE Software 2000, no. 4, p. 26",
    "searchText": ""
  },
  {
    "quote": "<b>Different methodologies</b> are inevitable, stemming directly from the questions of what constitutes a methodology and what are a methodology's underlying principles. Projects differ according to <b>size</b>, <b>composition</b>, <b>priorities</b>, and <b>criticality</b>.",
    "title": "Selecting a Project's Methodology",
    "year": 2000,
    "number": 4,
    "page": 64,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.854070",
    "selected": false,
    "authors": [
      {
        "name": "Alistair Cockburn",
        "link": ""
      }
    ],
    "authorsList": "Alistair Cockburn",
    "citation": "Alistair Cockburn, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.854070\">Selecting a Project's Methodology</a>, IEEE Software 2000, no. 4, p. 64",
    "searchText": ""
  },
  {
    "quote": "Although the organizations included in this section <b>differ in continents and cultures</b>, several <b>common themes</b> emerge from these reports. All organizations had <b>quantifiable business targets</b> and managed their pursuit of these targets empirically.",
    "title": "Guest Editor's Introduction: The Global Pursuit of Process Maturity",
    "year": 2000,
    "number": 4,
    "page": 76,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2000.854072",
    "selected": false,
    "authors": [
      {
        "name": "Bill Curtis",
        "link": ""
      }
    ],
    "authorsList": "Bill Curtis",
    "citation": "Bill Curtis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2000.854072\">Guest Editor's Introduction: The Global Pursuit of Process Maturity</a>, IEEE Software 2000, no. 4, p. 76",
    "searchText": ""
  },
  {
    "quote": "By '<b>ad hoc</b>,' most computing people have meant something that is <b>chaotic and undisciplined</b>; it became a sort of computing dirty word. But a closer look at the dictionary says that '<b>ad hoc</b>' really means '<b>tailored to the problem at hand</b>.' Ad hoc approaches might or might not be chaotic, the dictionary is telling us, but what they are really about is using <b>a best approach</b> determined not by some kind of project-independent thinking, but by some very <b>project-focused thinking</b>.",
    "title": "Process Diversity and a Computing Old Wives'/Husbands' Tale",
    "year": 2000,
    "number": 4,
    "page": 127,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2000.10036",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2000.10036\">Process Diversity and a Computing Old Wives'/Husbands' Tale</a>, IEEE Software 2000, no. 4, p. 127",
    "searchText": ""
  },
  {
    "quote": "The <b>Y2K issue</b> generated an enormous flood of activity for organizations worldwide. While we <b>survived Y2K</b> with <b>minor glitches</b>, the Y2K 'exercise' forced both developers and users of software to appreciate the need for software to function correctly in expected and unexpected situations. None of us is <b>immune to the problems</b> of the software industry.",
    "title": "Guest Editors' Introduction: Requirements Engineering-Integrating Technology",
    "year": 2000,
    "number": 3,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2000.896245",
    "selected": false,
    "authors": [
      {
        "name": "David M. Weiss",
        "link": ""
      },
      {
        "name": "Betty H.C. Cheng",
        "link": ""
      }
    ],
    "authorsList": "David M. Weiss, Betty H.C. Cheng",
    "citation": "David M. Weiss, Betty H.C. Cheng, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2000.896245\">Guest Editors' Introduction: Requirements Engineering-Integrating Technology</a>, IEEE Software 2000, no. 3, p. 18",
    "searchText": ""
  },
  {
    "quote": "There's something I <b>don't understand</b> about the <b>open-source movement</b>. Oh, I understand open source <b>intellectually</b>. ... What I <b>don't understand</b> is something more <b>sociological</b>. I don't understand who those folks are who want to do all that <b>code reading and reviewing</b> for <b>no recompense</b>. It goes against the grain of everything I know about the software field.",
    "title": "The Sociology of Open Source: Of Cults and Cultures",
    "year": 2000,
    "number": 3,
    "page": 104,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2000.10027",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2000.10027\">The Sociology of Open Source: Of Cults and Cultures</a>, IEEE Software 2000, no. 3, p. 104",
    "searchText": ""
  },
  {
    "quote": "That philosophy of <b>extinction</b> has been replaced with one of <b>extension</b> and inclusion. <b>Cobol applications</b> are, by and large, <b>too critical</b> and <b>too valuable</b> to consider replacing en masse.",
    "title": "Guest Editors' Introduction: Fresh from Y2K, What's Next for Cobol?",
    "year": 2000,
    "number": 2,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.2000.841599",
    "selected": false,
    "authors": [
      {
        "name": "Edmund C. Arranga",
        "link": ""
      },
      {
        "name": "Wilson Price",
        "link": ""
      }
    ],
    "authorsList": "Edmund C. Arranga, Wilson Price",
    "citation": "Edmund C. Arranga, Wilson Price, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.2000.841599\">Guest Editors' Introduction: Fresh from Y2K, What's Next for Cobol?</a>, IEEE Software 2000, no. 2, p. 16",
    "searchText": ""
  },
  {
    "quote": "Although recent Internet, Java, and OO trends threaten <b>Cobol's dominance</b>, industry will continue to need the language and its programmers for development as well as maintenance--especially once OO Cobol becomes an official standard.",
    "title": "Cobol in an Object-Oriented World: A Learning Perspective",
    "year": 2000,
    "number": 2,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.841601",
    "selected": false,
    "authors": [
      {
        "name": "Bill C. Hardgrave",
        "link": ""
      },
      {
        "name": "E. Reed Doke",
        "link": ""
      }
    ],
    "authorsList": "Bill C. Hardgrave, E. Reed Doke",
    "citation": "Bill C. Hardgrave, E. Reed Doke, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.841601\">Cobol in an Object-Oriented World: A Learning Perspective</a>, IEEE Software 2000, no. 2, p. 26",
    "searchText": ""
  },
  {
    "quote": "Contrary to persistent myths, a <b>committee</b> initially <b>created Cobol in 1959</b>, not one person. ... This material is based on documents from the 1959 committee work...",
    "title": "The Real Creators of Cobol",
    "year": 2000,
    "number": 2,
    "page": 30,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.841602",
    "selected": false,
    "authors": [
      {
        "name": "Jean E. Sammet",
        "link": ""
      }
    ],
    "authorsList": "Jean E. Sammet",
    "citation": "Jean E. Sammet, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.841602\">The Real Creators of Cobol</a>, IEEE Software 2000, no. 2, p. 30",
    "searchText": ""
  },
  {
    "quote": "<b>Cobol 2002</b>, the <b>new Cobol standard</b>, is expected to be finalized in approximately 18 months. Cobol 2002 builds on Cobol's first-class data handling capabilities and introduces <b>object-oriented features</b>, environmental improvements, and many other modern constructs to the language.",
    "title": "Cobol for the Next Millennium",
    "year": 2000,
    "number": 2,
    "page": 48,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.841606",
    "selected": false,
    "authors": [
      {
        "name": "Don Schricker",
        "link": ""
      }
    ],
    "authorsList": "Don Schricker",
    "citation": "Don Schricker, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.841606\">Cobol for the Next Millennium</a>, IEEE Software 2000, no. 2, p. 48",
    "searchText": ""
  },
  {
    "quote": "We can learn much from the <b>business community</b> about <b>effective technology transfer</b>. In particular, understanding the <b>interests</b> of <b>different types of adopters</b> can suggest to us the different kinds of <b>evidence</b> needed to <b>convince</b> someone to try an <b>innovative technology</b>. At the same time, the <b>legal community</b> offers us advice about what kinds of <b>evidence</b> are needed to <b>build convincing cases</b> that an innovation is an <b>improvement</b> over current practice.",
    "title": "Marketing Technology to Software Practitioners",
    "year": 2000,
    "number": 1,
    "page": 27,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.819965",
    "selected": false,
    "authors": [
      {
        "name": "Shari Lawrence Pfleeger",
        "link": ""
      },
      {
        "name": "Winifred Menezes",
        "link": ""
      }
    ],
    "authorsList": "Shari Lawrence Pfleeger, Winifred Menezes",
    "citation": "Shari Lawrence Pfleeger, Winifred Menezes, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.819965\">Marketing Technology to Software Practitioners</a>, IEEE Software 2000, no. 1, p. 27",
    "searchText": ""
  },
  {
    "quote": "Rather than integrating methods from the social sciences into the systems design process as others have done, this <b>crosspollination</b> effort strives to <b>inform and improve</b> the development of software engineering itself through a <b>deeper understanding</b> of our community’s implicit <b>values and beliefs</b>.",
    "title": "Software Engineering: Community and Culture",
    "year": 2000,
    "number": 1,
    "page": 40,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.819967",
    "selected": false,
    "authors": [
      {
        "name": "Helen Sharp",
        "link": ""
      },
      {
        "name": "Hugh Robinson",
        "link": ""
      },
      {
        "name": "Mark Woodman",
        "link": ""
      }
    ],
    "authorsList": "Helen Sharp, Hugh Robinson, Mark Woodman",
    "citation": "Helen Sharp, Hugh Robinson, Mark Woodman, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.819967\">Software Engineering: Community and Culture</a>, IEEE Software 2000, no. 1, p. 40",
    "searchText": ""
  },
  {
    "quote": "For many <b>programmers</b>, software development consists of <b>hacking</b>. As we mature, it is time to follow the example of other professional disciplines, to <b>put the engineering in software engineering</b>.",
    "title": "Guest Editors' Introduction: Professional Software Engineering-Fact or Fiction?",
    "year": 1999,
    "number": 6,
    "page": 13,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1999.805468",
    "selected": false,
    "authors": [
      {
        "name": "Steve McConnell",
        "link": ""
      },
      {
        "name": "Leonard Tripp",
        "link": ""
      }
    ],
    "authorsList": "Steve McConnell, Leonard Tripp",
    "citation": "Steve McConnell, Leonard Tripp, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1999.805468\">Guest Editors' Introduction: Professional Software Engineering-Fact or Fiction?</a>, IEEE Software 1999, no. 6, p. 13",
    "searchText": ""
  },
  {
    "quote": "<b>'Software Engineering' programs</b> have become a source of contention in many <b>universities</b>. Computer Science departments, many of which have used that phrase to describe individual courses for decades, claim SE as part of their discipline. Yet some engineering faculties claim it as a new specialty among the engineering disciplines. ... [W]e need SE programs that <b>follow the traditional engineering approach</b> to professional education.",
    "title": "Software Engineering Programs Are Not Computer Science Programs",
    "year": 1999,
    "number": 6,
    "page": 19,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.805469",
    "selected": false,
    "authors": [
      {
        "name": "David Lorge Parnas",
        "link": ""
      }
    ],
    "authorsList": "David Lorge Parnas",
    "citation": "David Lorge Parnas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.805469\">Software Engineering Programs Are Not Computer Science Programs</a>, IEEE Software 1999, no. 6, p. 19",
    "searchText": ""
  },
  {
    "quote": "The <b>IEEE Computer Society</b> and the <b>Association for Computing Machinery</b> are working on a joint project to develop a guide to <b>the Software Engineering Body of Knowledge (SWEBOK)</b>. Articulating a body of knowledge is an essential step toward developing a profession because it represents a broad consensus regarding the contents of the discipline. ",
    "title": "The Guide to the Software Engineering Body of Knowledge",
    "year": 1999,
    "number": 6,
    "page": 35,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.805471",
    "selected": false,
    "authors": [
      {
        "name": "Alain Abran",
        "link": ""
      },
      {
        "name": "James W. Moore",
        "link": ""
      },
      {
        "name": "Robert Dupuis",
        "link": ""
      },
      {
        "name": "Pierre Bourque",
        "link": ""
      },
      {
        "name": "Leonard Tripp",
        "link": ""
      }
    ],
    "authorsList": "Alain Abran, James W. Moore, Robert Dupuis, Pierre Bourque, Leonard Tripp",
    "citation": "Alain Abran, James W. Moore, Robert Dupuis, Pierre Bourque, Leonard Tripp, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.805471\">The Guide to the Software Engineering Body of Knowledge</a>, IEEE Software 1999, no. 6, p. 35",
    "searchText": ""
  },
  {
    "quote": "In June <b>1998</b>, the <b>Texas Board of Professional Engineers</b> established <b>software engineering</b> as a recognized engineering discipline and established <b>licensing criteria</b> specifically suited to software engineers.",
    "title": "What Do You Mean I Can't Call Myself a Software Engineer?",
    "year": 1999,
    "number": 6,
    "page": 45,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.805472",
    "selected": false,
    "authors": [
      {
        "name": "John R. Speed",
        "link": ""
      }
    ],
    "authorsList": "John R. Speed",
    "citation": "John R. Speed, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.805472\">What Do You Mean I Can't Call Myself a Software Engineer?</a>, IEEE Software 1999, no. 6, p. 45",
    "searchText": ""
  },
  {
    "quote": "The very idea that <b>software reuse</b> is a legitimate <b>research discipline</b> is <b>a paradox</b>: in all other engineering disciplines, reuse is an <b>integral part of good engineering</b> design — so integral that it is not even noteworthy. ",
    "title": "Toward an Engineering Discipline of Software Reuse",
    "year": 1999,
    "number": 5,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.795098",
    "selected": false,
    "authors": [
      {
        "name": "Ali Mili",
        "link": ""
      },
      {
        "name": "Hafedh Mili",
        "link": ""
      },
      {
        "name": "Sherif Yacoub",
        "link": ""
      },
      {
        "name": "Edward Addy",
        "link": ""
      }
    ],
    "authorsList": "Ali Mili, Hafedh Mili, Sherif Yacoub, Edward Addy",
    "citation": "Ali Mili, Hafedh Mili, Sherif Yacoub, Edward Addy, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.795098\">Toward an Engineering Discipline of Software Reuse</a>, IEEE Software 1999, no. 5, p. 22",
    "searchText": ""
  },
  {
    "quote": "The ability to <b>use Linux in personal-computer platforms</b>, plus the ready availability of Linux source code, makes the PC-based Linux workstation an ideal platform for <b>ATM multimedia development</b>. ",
    "title": "Linux Update: An Experimental ATM Network",
    "year": 1999,
    "number": 5,
    "page": 32,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.795099",
    "selected": false,
    "authors": [
      {
        "name": "Richard L. Klevans",
        "link": ""
      },
      {
        "name": "Steven A. Wright",
        "link": ""
      },
      {
        "name": "Ze Zhang",
        "link": ""
      },
      {
        "name": "Thomas C. Jepsen",
        "link": ""
      }
    ],
    "authorsList": "Richard L. Klevans, Steven A. Wright, Ze Zhang, Thomas C. Jepsen",
    "citation": "Richard L. Klevans, Steven A. Wright, Ze Zhang, Thomas C. Jepsen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.795099\">Linux Update: An Experimental ATM Network</a>, IEEE Software 1999, no. 5, p. 32",
    "searchText": ""
  },
  {
    "quote": "<b>[A]rchitecture</b> is not so much <b>about the software</b>, but about the people who write the software. The <b>core principles</b> of architecture, such as coupling and cohesion, <b>aren't about the cod</b>e. The <b>code doesn't 'care'</b> about how cohesive or decoupled it <b>is</b>; if anything, tightly coupled software lacks some of the performance snags found in more modular systems. But <b>people do care</b> about their <b>coupling to other team members</b>. ",
    "title": "Guest Editor's Introduction: Reevaluating the Architectural Metaphor-Toward Piecemeal Growth",
    "year": 1999,
    "number": 5,
    "page": 40,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1999.795100",
    "selected": false,
    "authors": [
      {
        "name": "James O. Coplien",
        "link": ""
      }
    ],
    "authorsList": "James O. Coplien",
    "citation": "James O. Coplien, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1999.795100\">Guest Editor's Introduction: Reevaluating the Architectural Metaphor-Toward Piecemeal Growth</a>, IEEE Software 1999, no. 5, p. 40",
    "searchText": ""
  },
  {
    "quote": "Geographically <b>distributed</b> development <b>teams</b> face extraordinary communication and coordination problems. ... common but unanticipated events can stretch project communication to the breaking point. Project <b>schedules can fall apart</b>, particularly during integration.",
    "title": "Architectures, Coordination, and Distance: Conway's Law and Beyond",
    "year": 1999,
    "number": 5,
    "page": 63,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.795103",
    "selected": false,
    "authors": [
      {
        "name": "James D. Herbsleb",
        "link": ""
      },
      {
        "name": "Rebecca E. Grinter",
        "link": ""
      }
    ],
    "authorsList": "James D. Herbsleb, Rebecca E. Grinter",
    "citation": "James D. Herbsleb, Rebecca E. Grinter, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.795103\">Architectures, Coordination, and Distance: Conway's Law and Beyond</a>, IEEE Software 1999, no. 5, p. 63",
    "searchText": ""
  },
  {
    "quote": "This is a pretty <b>strange situation</b> I find myself in. I hope you sympathize with me. I'm addressing a room full of people, a whole football field full of people. I don't know hardly anything about what all of you do. So—<b>please be nice to me</b>.What is the connection between what I am doing in the field of architecture and what you are doing in computer science and trying to do in the new field of software design? ",
    "title": "The Origins of Pattern Theory: The Future of the Theory, and the Generation of a Living World",
    "year": 1999,
    "number": 5,
    "page": 71,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.795104",
    "selected": false,
    "authors": [
      {
        "name": "Christopher Alexander",
        "link": ""
      }
    ],
    "authorsList": "Christopher Alexander",
    "citation": "Christopher Alexander, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.795104\">The Origins of Pattern Theory: The Future of the Theory, and the Generation of a Living World</a>, IEEE Software 1999, no. 5, p. 71",
    "searchText": ""
  },
  {
    "quote": "What I am proposing ... is a <b>view of programming</b> as the <b>natural, genetic infrastructure</b> of a living world which you/we are capable of creating, managing, making available, and which could then have the result that a <b>living structure</b> in our <b>towns</b>, <b>houses</b>, <b>work</b> places, cities, becomes an attainable thing. That would be remarkable. It would turn the world around, and make <b>living structure</b> the norm once again, throughout society, and make the world worth living in again.",
    "title": "The Origins of Pattern Theory: The Future of the Theory, and the Generation of a Living World",
    "year": 1999,
    "number": 5,
    "page": 71,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.795104",
    "selected": false,
    "authors": [
      {
        "name": "Christopher Alexander",
        "link": ""
      }
    ],
    "authorsList": "Christopher Alexander",
    "citation": "Christopher Alexander, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.795104\">The Origins of Pattern Theory: The Future of the Theory, and the Generation of a Living World</a>, IEEE Software 1999, no. 5, p. 71",
    "searchText": ""
  },
  {
    "quote": "Software development is increasingly an 'acquire and glue' process. How do you know when you can trust a COTS component to do what you expect it to in your system? <b>Software certification</b> is one viable answer. If our industry doesn't act soon to police itself, <b>governments might step in</b> to fill that void.",
    "title": "Guest Editor's Introduction: Certification-Reducing the Hidden Costs of Poor Quality",
    "year": 1999,
    "number": 4,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1999.776944",
    "selected": false,
    "authors": [
      {
        "name": "Jeffrey Voas",
        "link": ""
      }
    ],
    "authorsList": "Jeffrey Voas",
    "citation": "Jeffrey Voas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1999.776944\">Guest Editor's Introduction: Certification-Reducing the Hidden Costs of Poor Quality</a>, IEEE Software 1999, no. 4, p. 22",
    "searchText": ""
  },
  {
    "quote": "Designers, researchers, and developers are already using <b>virtual environments</b> in many ways and in many domains. The technology has matured enough that VEs are beginning to be used to <b>certify the systems they simulate</b>.",
    "title": "Using Immersive Virtual Environments for Certification",
    "year": 1999,
    "number": 4,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.776945",
    "selected": false,
    "authors": [
      {
        "name": "Robyn R. Lutz",
        "link": ""
      },
      {
        "name": "Carolina Cruz-Neira",
        "link": ""
      }
    ],
    "authorsList": "Robyn R. Lutz, Carolina Cruz-Neira",
    "citation": "Robyn R. Lutz, Carolina Cruz-Neira, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.776945\">Using Immersive Virtual Environments for Certification</a>, IEEE Software 1999, no. 4, p. 26",
    "searchText": ""
  },
  {
    "quote": "The <b>general-purpose computing</b> environment that characterizes the PC and Internet was <b>not designed for privacy</b> or integrity.",
    "title": "System Insecurity in the Internet Age",
    "year": 1999,
    "number": 4,
    "page": 62,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.776951",
    "selected": false,
    "authors": [
      {
        "name": "John Michener",
        "link": ""
      }
    ],
    "authorsList": "John Michener",
    "citation": "John Michener, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.776951\">System Insecurity in the Internet Age</a>, IEEE Software 1999, no. 4, p. 62",
    "searchText": ""
  },
  {
    "quote": "One of the strangest stories in the software world centers around the programming language <b>Cobol</b>. Academics have <b>reviled it</b> for decades; its <b>demise</b> has been <b>predicted</b> since the 1960s; industry gurus have suggested that programmers who know only Cobol are <b>committing career suicide</b>. ... Yet <b>the giant</b> lumbers on.",
    "title": "Cobol: A Historic Past, A Vital Future?",
    "year": 1999,
    "number": 4,
    "page": 118,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.776965",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.776965\">Cobol: A Historic Past, A Vital Future?</a>, IEEE Software 1999, no. 4, p. 118",
    "searchText": ""
  },
  {
    "quote": "Everyone who ever taught project management seems to have <b>a favorite disaster story</b>, whether it's the new <b>Denver airport</b> baggage handling system, the <b>London Stock Exchange</b>, or the <b>French Railways</b>. ... we must also consider a wider viewpoint: <b>success</b> requires <b>much more than good engineering</b>.",
    "title": "Guest Editor's Introduction: Successful Software Projects and How to Achieve Them",
    "year": 1999,
    "number": 3,
    "page": 15,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1999.765781",
    "selected": false,
    "authors": [
      {
        "name": "Andrew J. Bytheway",
        "link": ""
      }
    ],
    "authorsList": "Andrew J. Bytheway",
    "citation": "Andrew J. Bytheway, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1999.765781\">Guest Editor's Introduction: Successful Software Projects and How to Achieve Them</a>, IEEE Software 1999, no. 3, p. 15",
    "searchText": ""
  },
  {
    "quote": "You <b>cannot go back</b> and <b>add quality</b>. By the time you figure out you have a quality problem, it is probably <b>too late to fix it</b>.",
    "title": "Critical Success Factors In Software Projects",
    "year": 1999,
    "number": 3,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.765782",
    "selected": false,
    "authors": [
      {
        "name": "John S. Reel",
        "link": ""
      }
    ],
    "authorsList": "John S. Reel",
    "citation": "John S. Reel, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.765782\">Critical Success Factors In Software Projects</a>, IEEE Software 1999, no. 3, p. 18",
    "searchText": ""
  },
  {
    "quote": "The world has become used to having just about <b>every object, from cars to toasters</b>, equipped with computers. The hardware chip density has for many years followed Moore's law of doubling in capacity every 18 months, and experts agree that there is no end in sight to this trend. The increase in hardware power will continue largely independent of advances in software technology. As hardware performance increases, so will the demand to feed this hardware with software.",
    "title": "Guest Editor's Introduction: What's the Problem: Labor Shortage or Industry Practices?",
    "year": 1999,
    "number": 3,
    "page": 52,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1999.765787",
    "selected": false,
    "authors": [
      {
        "name": "Wolfgang Strigel",
        "link": ""
      }
    ],
    "authorsList": "Wolfgang Strigel",
    "citation": "Wolfgang Strigel, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1999.765787\">Guest Editor's Introduction: What's the Problem: Labor Shortage or Industry Practices?</a>, IEEE Software 1999, no. 3, p. 52",
    "searchText": ""
  },
  {
    "quote": "Estimates of <b>unfilled software engineering</b>, management, and support jobs in the <b>US</b> range from <b>100,000 to more than 300,000</b>. Projects addressing <b>Y2K repairs</b> and euro currency conversion could push the total shortfall to <b>600,000 jobs</b>.",
    "title": "The Euro, Y2K, and the US Software Labor Shortage",
    "year": 1999,
    "number": 3,
    "page": 55,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.765788",
    "selected": false,
    "authors": [
      {
        "name": "Capers Jones",
        "link": ""
      }
    ],
    "authorsList": "Capers Jones",
    "citation": "Capers Jones, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.765788\">The Euro, Y2K, and the US Software Labor Shortage</a>, IEEE Software 1999, no. 3, p. 55",
    "searchText": ""
  },
  {
    "quote": "The worldwide demand for software services is increasing at a rate faster than the current output of qualified software engineers. <b>India</b> is poised to meet this demand with a <b>growing pool</b> of educated, trained <b>software professionals</b>.",
    "title": "India's Software Industry: The People Dimension",
    "year": 1999,
    "number": 3,
    "page": 62,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.765789",
    "selected": false,
    "authors": [
      {
        "name": "Subroto Bagchi",
        "link": ""
      }
    ],
    "authorsList": "Subroto Bagchi",
    "citation": "Subroto Bagchi, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.765789\">India's Software Industry: The People Dimension</a>, IEEE Software 1999, no. 3, p. 62",
    "searchText": ""
  },
  {
    "quote": "First and foremost the <b>Unified Process</b> is a software development process ... the set of activities needed to <b>transform a user's requirements</b> into a <b>software system</b>. However, the <b>Unified Process</b> is ... it is <b>a generic process framework</b> that <b>can be specialized</b> for a very large class of ... systems, ... application areas, ... organizations, ... competence levels, and ... project sizes.",
    "title": "The Unified Process",
    "year": 1999,
    "number": 3,
    "page": 96,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1999.10013",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      },
      {
        "name": "Ivar Jacobson",
        "link": ""
      },
      {
        "name": "James Rumbaugh",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch, Ivar Jacobson, James Rumbaugh",
    "citation": "Grady Booch, Ivar Jacobson, James Rumbaugh, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1999.10013\">The Unified Process</a>, IEEE Software 1999, no. 3, p. 96",
    "searchText": ""
  },
  {
    "quote": "The key to <b>successful measurement programs</b> is to make the <b>metrics meaningful</b> and <b>tailor them</b> to the organization—however small it might be.",
    "title": "Making Sense of Measurement for Small Organizations",
    "year": 1999,
    "number": 2,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.754047",
    "selected": false,
    "authors": [
      {
        "name": "Karlheinz Kautz",
        "link": ""
      }
    ],
    "authorsList": "Karlheinz Kautz",
    "citation": "Karlheinz Kautz, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.754047\">Making Sense of Measurement for Small Organizations</a>, IEEE Software 1999, no. 2, p. 14",
    "searchText": ""
  },
  {
    "quote": "An organized, comprehensive <b>metrics program</b> can <b>bring order to the chaos</b> of small-project management and form the foundation for a concerted process improvement effort.",
    "title": "Metrics for Small Projects: Experiences at the SED",
    "year": 1999,
    "number": 2,
    "page": 21,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.754048",
    "selected": false,
    "authors": [
      {
        "name": "Ross Grable",
        "link": ""
      },
      {
        "name": "Dale Divis",
        "link": ""
      },
      {
        "name": "Casey Pogue",
        "link": ""
      },
      {
        "name": "Jacquelyn Jernigan",
        "link": ""
      }
    ],
    "authorsList": "Ross Grable, Dale Divis, Casey Pogue, Jacquelyn Jernigan",
    "citation": "Ross Grable, Dale Divis, Casey Pogue, Jacquelyn Jernigan, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.754048\">Metrics for Small Projects: Experiences at the SED</a>, IEEE Software 1999, no. 2, p. 21",
    "searchText": ""
  },
  {
    "quote": "<b>Design</b> is one of the most elusive yet fascinating topics in the software field. It is elusive because, no matter how thoroughly <b>academics</b> try to shape it into a teachable, testable, fact-based topic, <b>it just doesn't fit</b>. It is fascinating because design holds the <b>key to the success</b> of most software projects.",
    "title": "On Design",
    "year": 1999,
    "number": 2,
    "page": 103,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1999.754066",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1999.754066\">On Design</a>, IEEE Software 1999, no. 2, p. 103",
    "searchText": ""
  },
  {
    "quote": "<b>Linux</b> is a free, open-source operating system that <b>looks like Unix</b>, except that it runs on PCs as well as other platforms. Linux was created by <b>Linus Torvalds</b> in <b>1991</b>. Today, Linux is cooperatively improved by Torvalds and <b>thousands of volunteers</b> from around the world using open-source development methods.",
    "title": "Guest Editors' Introduction: Linux on the Move",
    "year": 1999,
    "number": 1,
    "page": 30,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1999.744564",
    "selected": false,
    "authors": [
      {
        "name": "Terry Bollinger",
        "link": ""
      },
      {
        "name": "Peter Beckman",
        "link": ""
      }
    ],
    "authorsList": "Terry Bollinger, Peter Beckman",
    "citation": "Terry Bollinger, Peter Beckman, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1999.744564\">Guest Editors' Introduction: Linux on the Move</a>, IEEE Software 1999, no. 1, p. 30",
    "searchText": ""
  },
  {
    "quote": "Far from simply producing freeware clones of existing technologies, <b>Linux and the open-source</b> world now turn out <b>some of the best software</b> at any price.",
    "title": "The Business Case for Linux",
    "year": 1999,
    "number": 1,
    "page": 40,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.744567",
    "selected": false,
    "authors": [
      {
        "name": "Evan Leibovitch",
        "link": ""
      }
    ],
    "authorsList": "Evan Leibovitch",
    "citation": "Evan Leibovitch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.744567\">The Business Case for Linux</a>, IEEE Software 1999, no. 1, p. 40",
    "searchText": ""
  },
  {
    "quote": "<b>Linux</b> has been a boon to <b>computing</b> in the <b>developing world</b>. In <b>Pakistan</b>, we have used Linux productively in both academia and industry.",
    "title": "Linux and the Developing World",
    "year": 1999,
    "number": 1,
    "page": 58,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.744570",
    "selected": false,
    "authors": [
      {
        "name": "Rafeeq ur Rehman",
        "link": ""
      },
      {
        "name": "Shahid H. Bokhari",
        "link": ""
      }
    ],
    "authorsList": "Rafeeq ur Rehman, Shahid H. Bokhari",
    "citation": "Rafeeq ur Rehman, Shahid H. Bokhari, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.744570\">Linux and the Developing World</a>, IEEE Software 1999, no. 1, p. 58",
    "searchText": ""
  },
  {
    "quote": "How much is the <b>Year 2000 problem</b> going to cost you? How long is it going to take you to get ready? Can you make it in time?",
    "title": "Year 2000 Work Comes Down to the Wire",
    "year": 1999,
    "number": 1,
    "page": 90,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.744575",
    "selected": false,
    "authors": [
      {
        "name": "Ware Myers",
        "link": ""
      },
      {
        "name": "Lawrence H. Putnam",
        "link": ""
      }
    ],
    "authorsList": "Ware Myers, Lawrence H. Putnam",
    "citation": "Ware Myers, Lawrence H. Putnam, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.744575\">Year 2000 Work Comes Down to the Wire</a>, IEEE Software 1999, no. 1, p. 90",
    "searchText": ""
  },
  {
    "quote": "This issue is dedicated to <b>Alan Davis</b>, our dear <b>colleague</b>, <b>thinker</b>, <b>doer</b>, <b>leader</b>, sometimes <b>dreamer</b>, and a congenial friend always.",
    "title": "Guest Editors' Introduction: Setting the Standard",
    "year": 1998,
    "number": 6,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1998.10037",
    "selected": false,
    "authors": [
      {
        "name": "Maarten Boasson",
        "link": ""
      },
      {
        "name": "Carl K. Chang",
        "link": ""
      },
      {
        "name": "Tomoo Matsubara",
        "link": ""
      }
    ],
    "authorsList": "Maarten Boasson, Carl K. Chang, Tomoo Matsubara",
    "citation": "Maarten Boasson, Carl K. Chang, Tomoo Matsubara, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1998.10037\">Guest Editors' Introduction: Setting the Standard</a>, IEEE Software 1998, no. 6, p. 22",
    "searchText": ""
  },
  {
    "quote": "[T]he ultimate <b>survival</b> of the <b>Java Virtual Machine</b> is much less certain. Java's inventors at Sun Microsystems have presented their creation as a single inseparable concept that encompasses a <b>language</b>, a rich class <b>library</b>, and a software distribution standard based on <b>a virtual machine</b>. These three parts are <b>not nearly as inseparable</b> as Sun claims. ",
    "title": "The Java Virtual Machine: A Passing Fad?",
    "year": 1998,
    "number": 6,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.730834",
    "selected": false,
    "authors": [
      {
        "name": "Michael Franz",
        "link": ""
      }
    ],
    "authorsList": "Michael Franz",
    "citation": "Michael Franz, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.730834\">The Java Virtual Machine: A Passing Fad?</a>, IEEE Software 1998, no. 6, p. 26",
    "searchText": ""
  },
  {
    "quote": "At <b>Hitachi Software</b>, our software has attained such <b>high quality</b> that <b>only 0.02 percent of all bugs</b> in a software program emerge at the <b>user's site</b>. ... We <b>do not use sophisticated</b> tools or state-of-the-art methodology — <b>we simply test</b> programs and fix the bugs detected.",
    "title": "How to Design Practical Test Cases",
    "year": 1998,
    "number": 6,
    "page": 30,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.730835",
    "selected": false,
    "authors": [
      {
        "name": "Tsuneo Yamaura",
        "link": ""
      }
    ],
    "authorsList": "Tsuneo Yamaura",
    "citation": "Tsuneo Yamaura, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.730835\">How to Design Practical Test Cases</a>, IEEE Software 1998, no. 6, p. 30",
    "searchText": ""
  },
  {
    "quote": "There is probably no hope of changing the view that <b>Wall Street</b> takes of treating investment in <b>people as an expense</b>. But companies that play this game will <b>suffer in the long run</b>. The converse is also true: Companies that manage their investment sensibly will prosper in the long run. Companies of knowledge workers have to realize that it is their <b>investment in human capital that matters most</b>. The good ones already do.",
    "title": "Human Capital",
    "year": 1998,
    "number": 6,
    "page": 103,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.730859",
    "selected": false,
    "authors": [
      {
        "name": "Timothy Lister",
        "link": ""
      },
      {
        "name": "Tom DeMarco",
        "link": ""
      }
    ],
    "authorsList": "Timothy Lister, Tom DeMarco",
    "citation": "Timothy Lister, Tom DeMarco, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.730859\">Human Capital</a>, IEEE Software 1998, no. 6, p. 103",
    "searchText": ""
  },
  {
    "quote": "Adler differentiates between <b>four levels of reading</b>. <b>Elementary reading</b> ... recognize individual words on a page. <b>Inspectional reading</b> is ... trying to get the most out of a book or article within a <b>given amount of time</b>. <b>Analytical reading</b> is ... by trying to get the most out of a book or article with <b>an unlimited amount of time</b>. <b>Syntopical reading</b> ... involves <b>reading sets of books or articles</b> on a common topic in a way that enables you to extract information that might or might not be present in any of the individual materials studied.",
    "title": "How To Read a Technical Article",
    "year": 1998,
    "number": 6,
    "page": 126,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1998.10035",
    "selected": false,
    "authors": [
      {
        "name": "Steve McConnell",
        "link": ""
      }
    ],
    "authorsList": "Steve McConnell",
    "citation": "Steve McConnell, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1998.10035\">How To Read a Technical Article</a>, IEEE Software 1998, no. 6, p. 126",
    "searchText": ""
  },
  {
    "quote": "The <b>rate of change</b> in the software world is such that shortly after the ink dries on this issue, we can only hope to have captured a snapshot of a rapidly maturing domain.",
    "title": "Guest Editors' Introduction: Component-Based Software Engineering",
    "year": 1998,
    "number": 5,
    "page": 34,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1998.714621",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      },
      {
        "name": "Wojtek Kozaczynski",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch, Wojtek Kozaczynski",
    "citation": "Grady Booch, Wojtek Kozaczynski, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1998.714621\">Guest Editors' Introduction: Component-Based Software Engineering</a>, IEEE Software 1998, no. 5, p. 34",
    "searchText": ""
  },
  {
    "quote": "A <b>component-based system</b> requires an <b>infrastructure for communication and collaboration</b>. ... examines the <b>Microsoft MTS</b> and <b>OMG Corba</b> infrastructure technologies. ... comparing how Microsoft's MTS and <b>Sun's Enterprise JavaBeans</b> handle transactions and component state.",
    "title": "The Current State of CBSE",
    "year": 1998,
    "number": 5,
    "page": 37,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.714622",
    "selected": false,
    "authors": [
      {
        "name": "Alan W. Brown",
        "link": ""
      },
      {
        "name": "Kurt C. Wallnau",
        "link": ""
      }
    ],
    "authorsList": "Alan W. Brown, Kurt C. Wallnau",
    "citation": "Alan W. Brown, Kurt C. Wallnau, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.714622\">The Current State of CBSE</a>, IEEE Software 1998, no. 5, p. 37",
    "searchText": ""
  },
  {
    "quote": "[T]he need to closely examine a problematic aspect of component reuse: the necessity and potential <b>expense</b> of <b>validating components</b> in their new environments.",
    "title": "Testing Component-Based Software: A Cautionary Tale",
    "year": 1998,
    "number": 5,
    "page": 54,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.714817",
    "selected": false,
    "authors": [
      {
        "name": "Elaine J. Weyuker",
        "link": ""
      }
    ],
    "authorsList": "Elaine J. Weyuker",
    "citation": "Elaine J. Weyuker, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.714817\">Testing Component-Based Software: A Cautionary Tale</a>, IEEE Software 1998, no. 5, p. 54",
    "searchText": ""
  },
  {
    "quote": "Ellen Ullman, describing her first <b>Linux</b> installation, wrote 'I exaggerate only a little if I say that [<b>Linux</b>] is a <b>reassertion of our dignity</b> as humans working with mere machine; a <b>return</b>, quite literally, <b>to the source</b>.'",
    "title": "Linux, Open Source, and Software's Future",
    "year": 1998,
    "number": 5,
    "page": 88,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.714831",
    "selected": false,
    "authors": [
      {
        "name": "James Sanders",
        "link": ""
      }
    ],
    "authorsList": "James Sanders",
    "citation": "James Sanders, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.714831\">Linux, Open Source, and Software's Future</a>, IEEE Software 1998, no. 5, p. 88",
    "searchText": ""
  },
  {
    "quote": "<b>Legacy software systems</b> represent a <b>significant investment</b> but often become difficult to maintain as they age. Not only does <b>technology evolve</b> beyond them, but <b>business needs change</b> and may require adding or modifying functions. ",
    "title": "Guest Editors' Introduction: Preserve or Redesign Legacy Systems?",
    "year": 1998,
    "number": 4,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1998.687937",
    "selected": false,
    "authors": [
      {
        "name": "Christof Ebert",
        "link": ""
      },
      {
        "name": "Norman F. Schneidewind",
        "link": ""
      }
    ],
    "authorsList": "Christof Ebert, Norman F. Schneidewind",
    "citation": "Christof Ebert, Norman F. Schneidewind, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1998.687937\">Guest Editors' Introduction: Preserve or Redesign Legacy Systems?</a>, IEEE Software 1998, no. 4, p. 14",
    "searchText": ""
  },
  {
    "quote": "<b>Rebuilding a legacy system</b> has some parallels to the <b>restoration of a work of art</b> ... The restoration involved far <b>more than updating the code</b>: the development team also had to <b>understand the existing</b> architecture, <b>add new</b> functionality, and develop a long-term hardware migration plan.",
    "title": "Restoring a Legacy: Lessons Learned",
    "year": 1998,
    "number": 4,
    "page": 28,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.687941",
    "selected": false,
    "authors": [
      {
        "name": "Jim White",
        "link": ""
      },
      {
        "name": "Spencer Rugaber",
        "link": ""
      }
    ],
    "authorsList": "Jim White, Spencer Rugaber",
    "citation": "Jim White, Spencer Rugaber, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.687941\">Restoring a Legacy: Lessons Learned</a>, IEEE Software 1998, no. 4, p. 28",
    "searchText": ""
  },
  {
    "quote": "Drawing on extensive data from the <b>NASA Space Shuttle</b>'s guidance software, Schneidewind ... provides <b>several formulas</b> for <b>tracking maintenance stability</b> defined as increasing functionality with decreasing failures ...",
    "title": "How To Evaluate Legacy System Maintenance",
    "year": 1998,
    "number": 4,
    "page": 34,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.687942",
    "selected": false,
    "authors": [
      {
        "name": "Norman F. Schneidewind",
        "link": ""
      }
    ],
    "authorsList": "Norman F. Schneidewind",
    "citation": "Norman F. Schneidewind, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.687942\">How To Evaluate Legacy System Maintenance</a>, IEEE Software 1998, no. 4, p. 34",
    "searchText": ""
  },
  {
    "quote": "If this decade's mantra is '<b>show me the money</b>,' those of us in software will <b>find it in maintenance</b>. Life-cycle data shows that maintenance is where we spend the biggest chunk of practitioner <b>time and money</b>.",
    "title": "Maintenance: Less Is Not More",
    "year": 1998,
    "number": 4,
    "page": 67,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.687948",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.687948\">Maintenance: Less Is Not More</a>, IEEE Software 1998, no. 4, p. 67",
    "searchText": ""
  },
  {
    "quote": "<b>Web technology</b> can offer a relatively painless way to <b>extend the life of legacy systems</b>, which are, by definition, both <b>fragile and valuable</b>. The Web can give aging applications a <b>modern graphical interface</b>, deliver them to employees' desktops regardless of platform, and grant access to databases distributed across the enterprise.",
    "title": "Guest Editor's Introduction: Migrating Software to the World Wide Web",
    "year": 1998,
    "number": 3,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1998.676714",
    "selected": false,
    "authors": [
      {
        "name": "Ellis Horowitz",
        "link": ""
      }
    ],
    "authorsList": "Ellis Horowitz",
    "citation": "Ellis Horowitz, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1998.676714\">Guest Editor's Introduction: Migrating Software to the World Wide Web</a>, IEEE Software 1998, no. 3, p. 18",
    "searchText": ""
  },
  {
    "quote": "<b>Geographic information systems</b> store a wealth of information for diverse applications, and users must often access GISs from various vendors and residing on varying platforms. ... a <b>spatial query mechanism</b> for GISs that is distributed and open, giving users access to many different GISs across the Internet.",
    "title": "A New Way to Query GISs on the Web",
    "year": 1998,
    "number": 3,
    "page": 31,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.676719",
    "selected": false,
    "authors": [
      {
        "name": "Serena Coetzee",
        "link": ""
      },
      {
        "name": "Judith Bishop",
        "link": ""
      }
    ],
    "authorsList": "Serena Coetzee, Judith Bishop",
    "citation": "Serena Coetzee, Judith Bishop, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.676719\">A New Way to Query GISs on the Web</a>, IEEE Software 1998, no. 3, p. 31",
    "searchText": ""
  },
  {
    "quote": "Object-orientation (OO) does not match the way we normally think. ... however, that this is <b>true of programming in any language</b> using any paradigm.",
    "title": "Watch Your Language!",
    "year": 1998,
    "number": 3,
    "page": 55,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.676738",
    "selected": false,
    "authors": [
      {
        "name": "Richard Wiener",
        "link": ""
      }
    ],
    "authorsList": "Richard Wiener",
    "citation": "Richard Wiener, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.676738\">Watch Your Language!</a>, IEEE Software 1998, no. 3, p. 55",
    "searchText": ""
  },
  {
    "quote": "When the authors asked users to <b>test an API early</b> in the development life cycle, the <b>users' questions</b> about how the API works and in what contexts turned out to be <b>extremely helpful</b>. <b>Iterative API design</b> and testing, along with <b>feedback from real users</b>, contribute to cleaner design and a more helpful reference manual.",
    "title": "Building More Usable APIs",
    "year": 1998,
    "number": 3,
    "page": 78,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.676963",
    "selected": false,
    "authors": [
      {
        "name": "Clay I. Spinuzzi",
        "link": ""
      },
      {
        "name": "Samuel G. McLellan",
        "link": ""
      },
      {
        "name": "Alvin W. Roesler",
        "link": ""
      },
      {
        "name": "Joseph T. Tempest",
        "link": ""
      }
    ],
    "authorsList": "Clay I. Spinuzzi, Samuel G. McLellan, Alvin W. Roesler, Joseph T. Tempest",
    "citation": "Clay I. Spinuzzi, Samuel G. McLellan, Alvin W. Roesler, Joseph T. Tempest, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.676963\">Building More Usable APIs</a>, IEEE Software 1998, no. 3, p. 78",
    "searchText": ""
  },
  {
    "quote": "<b>McDonald's</b> produces <b>hamburgers</b> that perfectly <b>match user requirements</b> and <b>satisfy expectations</b> for affordability and timely arrival. <b>But quality dining</b>? No one, not even McDonald's, claims that.",
    "title": "Defining Quality Intuitively",
    "year": 1998,
    "number": 3,
    "page": 103,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.676973",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.676973\">Defining Quality Intuitively</a>, IEEE Software 1998, no. 3, p. 103",
    "searchText": ""
  },
  {
    "quote": "A lot of thinking is like <b>case law</b>: 'Has somebody <b>rich and famous</b> done this? If so, maybe I should <b>pay attention</b> to it.'",
    "title": "Alan Kay: Inventing the Future",
    "year": 1998,
    "number": 2,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1998.10013",
    "selected": false,
    "authors": [],
    "authorsList": "Alan Kay",
    "citation": "Alan Kay, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1998.10013\">Inventing the Future</a>, IEEE Software 1998, no. 2, p. 22",
    "searchText": ""
  },
  {
    "quote": "The first microprocessors were <b>incredibly slow</b>. You had to <b>understand Moore's law</b>, what was going to happen. And you had to <b>have imagination</b>.",
    "title": "Alan Kay: Inventing the Future",
    "year": 1998,
    "number": 2,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1998.10013",
    "selected": false,
    "authors": [],
    "authorsList": "Alan Kay",
    "citation": "Alan Kay, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1998.10013\">Alan Kay: Inventing the Future</a>, IEEE Software 1998, no. 2, p. 22",
    "searchText": ""
  },
  {
    "quote": "Most things printed in the <b>first 100 years of the printing</b> press and most of the stuff printed now is <b>crap</b>. But because of luck and the bell curve of life, you can still get decently educated by reading just a few thousand books.",
    "title": "Alan Kay: Inventing the Future",
    "year": 1998,
    "number": 2,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1998.10013",
    "selected": false,
    "authors": [],
    "authorsList": "Alan Kay",
    "citation": "Alan Kay, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1998.10013\">Alan Kay: Inventing the Future</a>, IEEE Software 1998, no. 2, p. 22",
    "searchText": ""
  },
  {
    "quote": "[Y]ou could ... say that the <b>main business</b> of <b>everyone on earth</b> is to <b>help everyone else</b> — including ourselves — get <b>enlightened</b> because the technology is getting more and more dangerous. ",
    "title": "Alan Kay: Inventing the Future",
    "year": 1998,
    "number": 2,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1998.10013",
    "selected": false,
    "authors": [],
    "authorsList": "Alan Kay",
    "citation": "Alan Kay, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1998.10013\">Alan Kay: Inventing the Future</a>, IEEE Software 1998, no. 2, p. 22",
    "searchText": ""
  },
  {
    "quote": "Slowly, we are bridging the gap between <b>requirements engineering</b> research and practice. The gap is still large, but we have a few more <b>practice-validated methods</b> and tools in our pockets, and the bridge building continues.",
    "title": "Guest Editors' Introduction: Requirements Engineering",
    "year": 1998,
    "number": 2,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1998.663780",
    "selected": false,
    "authors": [
      {
        "name": "Daniel M. Berry",
        "link": ""
      },
      {
        "name": "Brian Lawrence",
        "link": ""
      }
    ],
    "authorsList": "Daniel M. Berry, Brian Lawrence",
    "citation": "Daniel M. Berry, Brian Lawrence, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1998.663780\">Guest Editors' Introduction: Requirements Engineering</a>, IEEE Software 1998, no. 2, p. 26",
    "searchText": ""
  },
  {
    "quote": "Something is <b>seriously wrong</b> with <b>reuse</b>. If there is a motherpie-and-applehood topic in software engineering, <b>reuse</b> is it. Everyone believes in it; everyone thinks we should be doing more of it. So do I. ... 'Why hasn't that potential already been achieved?' ... I think reuse hasn't succeeded to the extent we would like because <b>there aren't that many software components</b> that <b>can be reused</b>.",
    "title": "Reuse: What's Wrong with This Picture?",
    "year": 1998,
    "number": 2,
    "page": 57,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.663785",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.663785\">Reuse: What's Wrong with This Picture?</a>, IEEE Software 1998, no. 2, p. 57",
    "searchText": ""
  },
  {
    "quote": "Some software designers have recently turned to <b>building architecture for inspiration</b> in their efforts to improve professional practice. An attempt to apply <b>the studio method</b> of architectural training to <b>software design education</b> ... reveals much about education and practice in both professions. Studio courses <b>provoke creative reflection</b> on how to improve current training practices and could provide a new way to develop software design expertise.",
    "title": "The Software Design Studio: An Exploration",
    "year": 1998,
    "number": 2,
    "page": 65,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.663788",
    "selected": false,
    "authors": [
      {
        "name": "Sarah Kuhn",
        "link": ""
      }
    ],
    "authorsList": "Sarah Kuhn",
    "citation": "Sarah Kuhn, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.663788\">The Software Design Studio: An Exploration</a>, IEEE Software 1998, no. 2, p. 65",
    "searchText": ""
  },
  {
    "quote": "We ended up <b>merging NeWS and X</b>, which <b>was just torture</b>. I was constantly agitating for mercy; I wanted them to just shoot us. ",
    "title": "Basic to Java: Assembling a Career",
    "year": 1998,
    "number": 1,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1998.646824",
    "selected": false,
    "authors": [
      {
        "name": "Patrick Naughton",
        "link": ""
      }
    ],
    "authorsList": "Patrick Naughton",
    "citation": "Patrick Naughton, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1998.646824\">Basic to Java: Assembling a Career</a>, IEEE Software 1998, no. 1, p. 14",
    "searchText": ""
  },
  {
    "quote": "Our canonical example was <b>the thermostat on the wall</b>. ... There's <b>nothing about</b> the <b>Web</b>, or desktop, or Windows vs. Sun that had anything to do with the <b>initial design of Java</b>.",
    "title": "Basic to Java: Assembling a Career",
    "year": 1998,
    "number": 1,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1998.646824",
    "selected": false,
    "authors": [
      {
        "name": "Patrick Naughton",
        "link": ""
      }
    ],
    "authorsList": "Patrick Naughton",
    "citation": "Patrick Naughton, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1998.646824\">Basic to Java: Assembling a Career</a>, IEEE Software 1998, no. 1, p. 14",
    "searchText": ""
  },
  {
    "quote": "[T]he likely future of the software industry is this: it will be either <b>the best of times</b> or the <b>worst of times</b>-<b>or both</b>. ... <b>Year 2000 crisis</b> may plunge us all into several years of decidedly <b>unpleasant times</b>.",
    "title": "A Tale of Two Futures",
    "year": 1998,
    "number": 1,
    "page": 23,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.646826",
    "selected": false,
    "authors": [
      {
        "name": "Ed Yourdon",
        "link": ""
      }
    ],
    "authorsList": "Ed Yourdon",
    "citation": "Ed Yourdon, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.646826\">A Tale of Two Futures</a>, IEEE Software 1998, no. 1, p. 23",
    "searchText": ""
  },
  {
    "quote": "I like to tell people that my <b>head</b> is <b>in</b> software's <b>academic world</b>, but that my <b>heart</b> is <b>in</b> its <b>practice</b>.",
    "title": "In Praise of Practice",
    "year": 1998,
    "number": 1,
    "page": 30,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1998.10007",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1998.10007\">In Praise of Practice</a>, IEEE Software 1998, no. 1, p. 30",
    "searchText": ""
  },
  {
    "quote": "[F]or software developers at <b>established organizations</b>, caught in the cross-fire of the <b>language wars</b>, the <b>operating system wars</b>, the <b>platform wars</b>, the <b>middleware wars</b>, and the <b>browser wars</b>, laboring to push yet another release out the door under compressed schedules, weighed down by the <b>millstone of legacy code</b>, and torn asunder by the ravages of ill-conceived and ever-changing requirements, then the <b>future looks grim</b> - to put it mildly. ",
    "title": "Leaving Kansas",
    "year": 1998,
    "number": 1,
    "page": 32,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1998.646876",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1998.646876\">Leaving Kansas</a>, IEEE Software 1998, no. 1, p. 32",
    "searchText": ""
  },
  {
    "quote": "<b>Modesty</b> <b>prevents</b> me from using the <b>adjectives</b> most commonly applied by developers toiling under such circumstances.",
    "title": "Leaving Kansas",
    "year": 1998,
    "number": 1,
    "page": 32,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1998.646876",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1998.646876\">Leaving Kansas</a>, IEEE Software 1998, no. 1, p. 32",
    "searchText": ""
  },
  {
    "quote": "[W]e might be expected to become <b>serious software engineers</b>. We won't, of course. ",
    "title": "Will There Ever Be Software Engineering?",
    "year": 1998,
    "number": 1,
    "page": 36,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1998.646877",
    "selected": false,
    "authors": [
      {
        "name": "Michael Jackson",
        "link": ""
      }
    ],
    "authorsList": "Michael Jackson",
    "citation": "Michael Jackson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1998.646877\">Will There Ever Be Software Engineering?</a>, IEEE Software 1998, no. 1, p. 36",
    "searchText": ""
  },
  {
    "quote": "[T]he <b>software development</b> and <b>maintenance processes</b>, which I prefer to unify and call <b>software evolution</b>, <b>are key</b> to managing computerization. In my view it is key to our survival in this computer age.",
    "title": "Software's Future: Managing Evolution",
    "year": 1998,
    "number": 1,
    "page": 40,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1998.646878",
    "selected": false,
    "authors": [
      {
        "name": "M.m. Lehman",
        "link": ""
      }
    ],
    "authorsList": "M.m. Lehman",
    "citation": "M.m. Lehman, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1998.646878\">Software's Future: Managing Evolution</a>, IEEE Software 1998, no. 1, p. 40",
    "searchText": ""
  },
  {
    "quote": "[H]istory does suggest that our <b>early expectations</b> about the <b>problem-solving potential</b> of <b>unbridled technology</b> should be relatively <b>low</b>.",
    "title": "Software: The Good, the Bad, and the Real",
    "year": 1998,
    "number": 1,
    "page": 45,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1998.646879",
    "selected": false,
    "authors": [
      {
        "name": "Steve Andriole",
        "link": ""
      }
    ],
    "authorsList": "Steve Andriole",
    "citation": "Steve Andriole, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1998.646879\">Software: The Good, the Bad, and the Real</a>, IEEE Software 1998, no. 1, p. 45",
    "searchText": ""
  },
  {
    "quote": "Before software development can become a true engineering discipline, its <b>practitioners</b> must be <b>well schooled</b> in computer <b>science</b>, discrete <b>mathematics</b>, and a subject too rarely addressed in most university courses today: engineering <b>economy</b>.",
    "title": "A Missing Link in Software Engineering",
    "year": 1997,
    "number": 6,
    "page": 31,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.636594",
    "selected": false,
    "authors": [
      {
        "name": "Steve Tockey",
        "link": ""
      }
    ],
    "authorsList": "Steve Tockey",
    "citation": "Steve Tockey, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.636594\">A Missing Link in Software Engineering</a>, IEEE Software 1997, no. 6, p. 31",
    "searchText": ""
  },
  {
    "quote": "Most software engineering <b>graduates</b> begin their careers lacking an <b>appreciation of real-world</b> conditions.",
    "title": "Introducing Software Engineers to the Real World",
    "year": 1997,
    "number": 6,
    "page": 37,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.636640",
    "selected": false,
    "authors": [
      {
        "name": "Ray Dawson",
        "link": ""
      },
      {
        "name": "Ron Newsham",
        "link": ""
      }
    ],
    "authorsList": "Ray Dawson, Ron Newsham",
    "citation": "Ray Dawson, Ron Newsham, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.636640\">Introducing Software Engineers to the Real World</a>, IEEE Software 1997, no. 6, p. 37",
    "searchText": ""
  },
  {
    "quote": "When it comes to software engineering education, there is <b>a gap</b> between what <b>industry needs</b> and what <b>universities offer</b>.",
    "title": "Collaborations: Closing the Industry-Academia Gap",
    "year": 1997,
    "number": 6,
    "page": 49,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.636668",
    "selected": false,
    "authors": [
      {
        "name": "Nancy R. Mead",
        "link": ""
      },
      {
        "name": "Neal Coulter",
        "link": ""
      },
      {
        "name": "Kathy Beckman",
        "link": ""
      },
      {
        "name": "Soheil Khajenoori",
        "link": ""
      }
    ],
    "authorsList": "Nancy R. Mead, Neal Coulter, Kathy Beckman, Soheil Khajenoori",
    "citation": "Nancy R. Mead, Neal Coulter, Kathy Beckman, Soheil Khajenoori, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.636668\">Collaborations: Closing the Industry-Academia Gap</a>, IEEE Software 1997, no. 6, p. 49",
    "searchText": ""
  },
  {
    "quote": "<b>Complexity</b> is not completely essential; it is feasible to <b>reduce</b> and to <b>manage complexity</b>. ",
    "title": "The Road to Maturity: Navigating Between Craft and Science",
    "year": 1997,
    "number": 6,
    "page": 77,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.636674",
    "selected": false,
    "authors": [
      {
        "name": "Christof Ebert",
        "link": ""
      }
    ],
    "authorsList": "Christof Ebert",
    "citation": "Christof Ebert, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.636674\">The Road to Maturity: Navigating Between Craft and Science</a>, IEEE Software 1997, no. 6, p. 77",
    "searchText": ""
  },
  {
    "quote": "Too often we <b>fail to see a new problem</b> clearly because we color our perception of it with recollections of similar problems we've solved in the past. We also <b>inject fragments of those past solutions</b> into our <b>thinking</b>, further obscuring the current problem.",
    "title": "When Past Solutions Cause Future Problems",
    "year": 1997,
    "number": 5,
    "page": 19,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.605925",
    "selected": false,
    "authors": [
      {
        "name": "Carlo Pescio",
        "link": ""
      }
    ],
    "authorsList": "Carlo Pescio",
    "citation": "Carlo Pescio, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.605925\">When Past Solutions Cause Future Problems</a>, IEEE Software 1997, no. 5, p. 19",
    "searchText": ""
  },
  {
    "quote": "All this <b>personal connectivity</b> has a <b>price</b>: at times, people deal electronically with people they <b>do not know</b>, <b>cannot name</b>, and certainly have <b>no basis to trust</b>.",
    "title": "Security and Privacy: Promising Advances",
    "year": 1997,
    "number": 5,
    "page": 27,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.605928",
    "selected": false,
    "authors": [
      {
        "name": "Charles P. Pfleeger",
        "link": ""
      },
      {
        "name": "Deborah M. Cooper",
        "link": ""
      }
    ],
    "authorsList": "Charles P. Pfleeger, Deborah M. Cooper",
    "citation": "Charles P. Pfleeger, Deborah M. Cooper, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.605928\">Security and Privacy: Promising Advances</a>, IEEE Software 1997, no. 5, p. 27",
    "searchText": ""
  },
  {
    "quote": "Computer use leaves <b>trails of activity</b> that can reveal <b>signatures</b> of <b>misuse</b> as well as of <b>legitimate activity</b>. Depending on the audit method used, one can record a user's <b>keystrokes</b>, the system <b>resources used</b>, or the <b>system calls</b> made by some collection of processes.",
    "title": "Intrusion Detection via System Call Traces",
    "year": 1997,
    "number": 5,
    "page": 35,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.605929",
    "selected": false,
    "authors": [
      {
        "name": "Steven A. Hofmeyr",
        "link": ""
      },
      {
        "name": "Andrew P. Kosoresow",
        "link": ""
      }
    ],
    "authorsList": "Steven A. Hofmeyr, Andrew P. Kosoresow",
    "citation": "Steven A. Hofmeyr, Andrew P. Kosoresow, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.605929\">Intrusion Detection via System Call Traces</a>, IEEE Software 1997, no. 5, p. 35",
    "searchText": ""
  },
  {
    "quote": "There's something desperately wrong with the <b>quality of the quantities</b> we've been using.",
    "title": "Telling Good Numbers from Bad Ones",
    "year": 1997,
    "number": 4,
    "page": 15,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1997.595876",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1997.595876\">Telling Good Numbers from Bad Ones</a>, IEEE Software 1997, no. 4, p. 15",
    "searchText": ""
  },
  {
    "quote": "<b>Users</b> should be <b>involved in the design</b> process to improve the mapping of their goals to the design. Now that prototypes are being introduced ... users should be <b>tested</b> using them <b>in realistic ways</b> and situations. The results of such testing should then be <b>fed back</b> into the process, along with other lessons from the prototyping activity, to <b>modify design</b>. ",
    "title": "Creating Effective User Interfaces",
    "year": 1997,
    "number": 4,
    "page": 21,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1997.595887",
    "selected": false,
    "authors": [
      {
        "name": "Andrew Sears",
        "link": ""
      },
      {
        "name": "Arnold M. Lund",
        "link": ""
      }
    ],
    "authorsList": "Andrew Sears, Arnold M. Lund",
    "citation": "Andrew Sears, Arnold M. Lund, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1997.595887\">Creating Effective User Interfaces</a>, IEEE Software 1997, no. 4, p. 21",
    "searchText": ""
  },
  {
    "quote": "The true choice is not between <b>discount</b> and <b>deluxe</b> <b>usability engineering</b>. If that were the choice, I would agree that the <b>deluxe</b> approach would bring better results. The true choice, however, is between <b>doing something</b> and <b>doing nothing</b>. Perfection is not an option. My choice is to do something!",
    "title": "Something Is Better than Nothing",
    "year": 1997,
    "number": 4,
    "page": 27,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1997.595892",
    "selected": false,
    "authors": [
      {
        "name": "Jakob Nielsen",
        "link": ""
      }
    ],
    "authorsList": "Jakob Nielsen",
    "citation": "Jakob Nielsen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1997.595892\">Something Is Better than Nothing</a>, IEEE Software 1997, no. 4, p. 27",
    "searchText": ""
  },
  {
    "quote": "<b>[A] checklist</b> for <b>choosing a tool</b> that fits your needs[:] <b>[u]sability</b>, <b>functionality</b>, <b>flexibility</b>, <b>portability</b>, <b>support</b>, and <b>cost</b> are all part of the picture.",
    "title": "Choosing a User Interface Development Tool",
    "year": 1997,
    "number": 4,
    "page": 29,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.595896",
    "selected": false,
    "authors": [
      {
        "name": "Laura A. Valaer",
        "link": ""
      },
      {
        "name": "Robert G. Babb II",
        "link": ""
      }
    ],
    "authorsList": "Laura A. Valaer, Robert G. Babb II",
    "citation": "Laura A. Valaer, Robert G. Babb II, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.595896\">Choosing a User Interface Development Tool</a>, IEEE Software 1997, no. 4, p. 29",
    "searchText": ""
  },
  {
    "quote": "<b>Discussions with users</b> must be <b>carefully planned</b> ... [I]dentifying ourselves and gaining their confidence was of utmost importance ... <b>Learning</b> the <b>work culture</b> and adapting to it go a long way toward <b>winning support</b>. ",
    "title": "Low-Effort, High-Payoff User Interface Reengineering",
    "year": 1997,
    "number": 4,
    "page": 66,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.595958",
    "selected": false,
    "authors": [
      {
        "name": "Ben Shneiderman",
        "link": ""
      },
      {
        "name": "Catherine Plaisant",
        "link": ""
      },
      {
        "name": "Anne Rose",
        "link": ""
      },
      {
        "name": "Ajit J. Vanniamparampil",
        "link": ""
      }
    ],
    "authorsList": "Ben Shneiderman, Catherine Plaisant, Anne Rose, Ajit J. Vanniamparampil",
    "citation": "Ben Shneiderman, Catherine Plaisant, Anne Rose, Ajit J. Vanniamparampil, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.595958\">Low-Effort, High-Payoff User Interface Reengineering</a>, IEEE Software 1997, no. 4, p. 66",
    "searchText": ""
  },
  {
    "quote": "Our culture has evolved such that <b>owning up to risks</b> is often <b>confused with defeatism</b>. Thus, a manager faced with a nearly impossible schedule may deliberately <b>ignore risks</b> to project a confident, <b>'can-do' attitude</b>.",
    "title": "Software Risk Management",
    "year": 1997,
    "number": 3,
    "page": 17,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1997.589225",
    "selected": false,
    "authors": [
      {
        "name": "Tom DeMarco",
        "link": ""
      },
      {
        "name": "Barry W. Boehm",
        "link": ""
      }
    ],
    "authorsList": "Tom DeMarco, Barry W. Boehm",
    "citation": "Tom DeMarco, Barry W. Boehm, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1997.589225\">Software Risk Management</a>, IEEE Software 1997, no. 3, p. 17",
    "searchText": ""
  },
  {
    "quote": "<b>Risk management in maintenance</b> differs in major ways from risk management in development. Risk opportunities are <b>more frequent</b>, risks come from <b>more diverse</b> sources, and projects have <b>less freedom to act</b> on them.",
    "title": "Managing Risk in Software Maintenance",
    "year": 1997,
    "number": 3,
    "page": 43,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.589232",
    "selected": false,
    "authors": [
      {
        "name": "Kevin Macg. Adams",
        "link": ""
      },
      {
        "name": "Robert N. Charette",
        "link": ""
      },
      {
        "name": "Mary B. White",
        "link": ""
      }
    ],
    "authorsList": "Kevin Macg. Adams, Robert N. Charette, Mary B. White",
    "citation": "Kevin Macg. Adams, Robert N. Charette, Mary B. White, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.589232\">Managing Risk in Software Maintenance</a>, IEEE Software 1997, no. 3, p. 43",
    "searchText": ""
  },
  {
    "quote": "Incorporating <b>hard data</b> into <b>risk estimates</b> can help make them <b>more accurate</b>.",
    "title": "Integrating Risk Assessment with Cost Estimation",
    "year": 1997,
    "number": 3,
    "page": 61,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.589236",
    "selected": false,
    "authors": [
      {
        "name": "Kari Känsälä",
        "link": ""
      }
    ],
    "authorsList": "Kari Känsälä",
    "citation": "Kari Känsälä, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.589236\">Integrating Risk Assessment with Cost Estimation</a>, IEEE Software 1997, no. 3, p. 61",
    "searchText": ""
  },
  {
    "quote": "There are approximately <b>670 working days</b> between now and <b>January 1, 2000</b>. Is that enough time to fix the date fields in your programs?",
    "title": "Interview with Capers Jones: Slow Response to Year 2000 Problem",
    "year": 1997,
    "number": 3,
    "page": 114,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1997.10009",
    "selected": false,
    "authors": [
      {
        "name": "John Charles",
        "link": ""
      },
      {
        "name": "Capers Jones",
        "link": ""
      }
    ],
    "authorsList": "John Charles, Capers Jones",
    "citation": "John Charles, Capers Jones, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1997.10009\">Interview with Capers Jones: Slow Response to Year 2000 Problem</a>, IEEE Software 1997, no. 3, p. 114",
    "searchText": ""
  },
  {
    "quote": "The goals of consistent design can be clarified by a look at early <b>user interface design for automobiles</b>. Early automobile designers offered their own distinct designs for a profusion of controls. Some designs, such as a brake that was too far from the gas pedal, were dangerous. There was also a consistency issue. If your brake was to the left of the gas pedal and your neighbor's car had the reverse design, it might be risky to trade cars. Achieving good design and appropriate consistency in automobiles took half a century. Let's hope we can make the transition faster for Web-search user interfaces.",
    "title": "A Framework for Search Interfaces",
    "year": 1997,
    "number": 2,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.582969",
    "selected": false,
    "authors": [
      {
        "name": "Ben Shneiderman",
        "link": ""
      }
    ],
    "authorsList": "Ben Shneiderman",
    "citation": "Ben Shneiderman, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.582969\">A Framework for Search Interfaces</a>, IEEE Software 1997, no. 2, p. 18",
    "searchText": ""
  },
  {
    "quote": "As in most other sciences, we are moving along <b>a measurement continuum</b>; just as temperature measurement began as an <b>index finger in the water</b> (and a scale of not hot enough, hot enough, and too hot) and <b>grew to sophisticated scales</b>, tools, and techniques, so too is <b>software measurement maturing</b> and leading to a more sophisticated understanding of better ways to produce better products.",
    "title": "Assessing Measurement",
    "year": 1997,
    "number": 2,
    "page": 25,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.582970",
    "selected": false,
    "authors": [
      {
        "name": "Shari Lawrence Pfleeger",
        "link": ""
      }
    ],
    "authorsList": "Shari Lawrence Pfleeger",
    "citation": "Shari Lawrence Pfleeger, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.582970\">Assessing Measurement</a>, IEEE Software 1997, no. 2, p. 25",
    "searchText": ""
  },
  {
    "quote": "The most <b>successful measurement programs</b> are ones in which <b>researchers</b>, <b>practitioner</b>, and <b>customer</b> work <b>hand in hand</b> to meet goals and solve problems. But <b>such collaboration is rare</b>.",
    "title": "Status Report on Software Measurement",
    "year": 1997,
    "number": 2,
    "page": 33,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.582973",
    "selected": false,
    "authors": [
      {
        "name": "Ross Jeffery",
        "link": ""
      },
      {
        "name": "Bill Curtis",
        "link": ""
      },
      {
        "name": "Barbara Kitchenham",
        "link": ""
      },
      {
        "name": "Shari Lawrence Pfleeger",
        "link": ""
      }
    ],
    "authorsList": "Ross Jeffery, Bill Curtis, Barbara Kitchenham, Shari Lawrence Pfleeger",
    "citation": "Ross Jeffery, Bill Curtis, Barbara Kitchenham, Shari Lawrence Pfleeger, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.582973\">Status Report on Software Measurement</a>, IEEE Software 1997, no. 2, p. 33",
    "searchText": ""
  },
  {
    "quote": "[T]he more <b>integral</b> software <b>measurement</b> is to the company's underlying <b>business strategy</b>, the more likely it is to succeed.",
    "title": "Establishing Software Measurement Programs",
    "year": 1997,
    "number": 2,
    "page": 45,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.582974",
    "selected": false,
    "authors": [
      {
        "name": "Raymond J. Offen",
        "link": ""
      },
      {
        "name": "Ross Jeffery",
        "link": ""
      }
    ],
    "authorsList": "Raymond J. Offen, Ross Jeffery",
    "citation": "Raymond J. Offen, Ross Jeffery, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.582974\">Establishing Software Measurement Programs</a>, IEEE Software 1997, no. 2, p. 45",
    "searchText": ""
  },
  {
    "quote": "<b>Security demands a rigor</b> like that of other computing areas that require high quality ... In security, the <b>universe</b> is <b>by definition hostile</b>: a malicious agent actively seeks to cause a failure.",
    "title": "The Fundamentals of Information Security",
    "year": 1997,
    "number": 1,
    "page": 15,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.566419",
    "selected": false,
    "authors": [
      {
        "name": "Charles P. Pfleeger",
        "link": ""
      }
    ],
    "authorsList": "Charles P. Pfleeger",
    "citation": "Charles P. Pfleeger, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.566419\">The Fundamentals of Information Security</a>, IEEE Software 1997, no. 1, p. 15",
    "searchText": ""
  },
  {
    "quote": "<b>Objects</b>, <b>patterns</b>, and <b>architectures</b> have much in common. Each holds the <b>promise</b> of solving chronic software development problems: high <b>development costs</b>, even higher <b>maintenance costs</b>, low levels of <b>reuse</b>, unbelievable—and unrealized—<b>schedules</b>, and so on. ",
    "title": "Why Explore Object Methods, Patterns, and Architectures?",
    "year": 1997,
    "number": 1,
    "page": 27,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1997.566424",
    "selected": false,
    "authors": [
      {
        "name": "Stephen J. Mellor",
        "link": ""
      },
      {
        "name": "Ralph Johnson",
        "link": ""
      }
    ],
    "authorsList": "Stephen J. Mellor, Ralph Johnson",
    "citation": "Stephen J. Mellor, Ralph Johnson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1997.566424\">Why Explore Object Methods, Patterns, and Architectures?</a>, IEEE Software 1997, no. 1, p. 27",
    "searchText": ""
  },
  {
    "quote": "<b>Patterns</b> have given us a <b>vocabulary</b> to talk about <b>structures larger than modules, procedures, or objects</b>—structures that outstrip the vocabularies of the proven object design methods that have served us for the past decade.",
    "title": "Idioms and Patterns as Architectural Literature",
    "year": 1997,
    "number": 1,
    "page": 36,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.566426",
    "selected": false,
    "authors": [
      {
        "name": "James O. Coplien",
        "link": ""
      }
    ],
    "authorsList": "James O. Coplien",
    "citation": "James O. Coplien, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.566426\">Idioms and Patterns as Architectural Literature</a>, IEEE Software 1997, no. 1, p. 36",
    "searchText": ""
  },
  {
    "quote": "In the software development context, <b>a pattern</b> is an <b>important and recurring</b> system construct and a <b>pattern language</b> is a system of patterns <b>organized in a structure</b> that guides the patterns' application.",
    "title": "Using Patterns to Improve Our Architectural Vision",
    "year": 1997,
    "number": 1,
    "page": 53,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.566428",
    "selected": false,
    "authors": [
      {
        "name": "Ward Cunningham",
        "link": ""
      },
      {
        "name": "Norman L. Kerth",
        "link": ""
      }
    ],
    "authorsList": "Ward Cunningham, Norman L. Kerth",
    "citation": "Ward Cunningham, Norman L. Kerth, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.566428\">Using Patterns to Improve Our Architectural Vision</a>, IEEE Software 1997, no. 1, p. 53",
    "searchText": ""
  },
  {
    "quote": "<b>[Q]uantitative data</b> makes sense when you are trying to decide between <b>two or more alternatives</b>.",
    "title": "Usability Metrics: Tracking Interface Improvements",
    "year": 1996,
    "number": 6,
    "page": 12,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1996.10031",
    "selected": false,
    "authors": [
      {
        "name": "Jakob Nielsen",
        "link": ""
      }
    ],
    "authorsList": "Jakob Nielsen",
    "citation": "Jakob Nielsen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1996.10031\">Usability Metrics: Tracking Interface Improvements</a>, IEEE Software 1996, no. 6, p. 12",
    "searchText": ""
  },
  {
    "quote": "Despite rapid changes in computing and software development, some <b>fundamental ideas have remained constant</b>. ... Eight such concepts together constitute a viable <b>foundation</b> for a <b>software engineering discipline</b>: <b>abstraction</b>, analysis and design <b>methods and notations</b>, user interface <b>prototyping</b>, <b>modularity</b> and architecture, software <b>life cycle</b> and <b>process</b>, <b>reuse</b>, <b>metrics</b>, and <b>automated support</b>.",
    "title": "Toward a Discipline of Software Engineering",
    "year": 1996,
    "number": 6,
    "page": 23,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.542291",
    "selected": false,
    "authors": [
      {
        "name": "Anthony I. Wasserman",
        "link": ""
      }
    ],
    "authorsList": "Anthony I. Wasserman",
    "citation": "Anthony I. Wasserman, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.542291\">Toward a Discipline of Software Engineering</a>, IEEE Software 1996, no. 6, p. 23",
    "searchText": ""
  },
  {
    "quote": "Working in and <b>designing for other cultures</b> can lead to <b>communication breakdowns</b>.",
    "title": "Beyond Language Translation: Crossing the Cultural Divide",
    "year": 1996,
    "number": 6,
    "page": 42,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.542293",
    "selected": false,
    "authors": [
      {
        "name": "Kumiyo Nakakoji",
        "link": ""
      }
    ],
    "authorsList": "Kumiyo Nakakoji",
    "citation": "Kumiyo Nakakoji, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.542293\">Beyond Language Translation: Crossing the Cultural Divide</a>, IEEE Software 1996, no. 6, p. 42",
    "searchText": ""
  },
  {
    "quote": "It's difficult to determine event order in <b>distributed systems</b> because of the <b>problem of observability</b>.",
    "title": "Fundamentals of Distributed System Observation",
    "year": 1996,
    "number": 6,
    "page": 77,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.542297",
    "selected": false,
    "authors": [
      {
        "name": "Colin Fidge",
        "link": ""
      }
    ],
    "authorsList": "Colin Fidge",
    "citation": "Colin Fidge, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.542297\">Fundamentals of Distributed System Observation</a>, IEEE Software 1996, no. 6, p. 77",
    "searchText": ""
  },
  {
    "quote": "<b>Software tools</b> and new <b>software methodologies</b> can together play a key role in achieving a higher level of <b>software quality and productivity</b>. Software quality can be greatly improved by selecting a <b>correct development tool</b> ... Selecting an <b>inappropriate tool</b>, on the other hand, can actually hinder software development.",
    "title": "Guest Editors' Introduction: Software Tools Assessment",
    "year": 1996,
    "number": 5,
    "page": 23,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1996.536455",
    "selected": false,
    "authors": [
      {
        "name": "Ez Nahouraii",
        "link": ""
      },
      {
        "name": "Krishna Kavi",
        "link": ""
      }
    ],
    "authorsList": "Ez Nahouraii, Krishna Kavi",
    "citation": "Ez Nahouraii, Krishna Kavi, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1996.536455\">Guest Editors' Introduction: Software Tools Assessment</a>, IEEE Software 1996, no. 5, p. 23",
    "searchText": ""
  },
  {
    "quote": "Because we don't know <b>how to analyze a tool's impact</b> on specific projects, we generally adopt them based on an <b>intuitive understanding</b> of their expected impact. In many cases, the actual <b>results</b> of this practice are <b>disappointing</b>. The problem is aggravated because tool adoption often brings considerable costs.",
    "title": "The Impact of Tools on Software Productivity",
    "year": 1996,
    "number": 5,
    "page": 29,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.536456",
    "selected": false,
    "authors": [
      {
        "name": "John Henshaw",
        "link": ""
      },
      {
        "name": "Ingrid Janssen",
        "link": ""
      },
      {
        "name": "Nazim H. Madhavji",
        "link": ""
      },
      {
        "name": "Tilmann Bruckhaus",
        "link": ""
      }
    ],
    "authorsList": "John Henshaw, Ingrid Janssen, Nazim H. Madhavji, Tilmann Bruckhaus",
    "citation": "John Henshaw, Ingrid Janssen, Nazim H. Madhavji, Tilmann Bruckhaus, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.536456\">The Impact of Tools on Software Productivity</a>, IEEE Software 1996, no. 5, p. 29",
    "searchText": ""
  },
  {
    "quote": "[T]he organization attempts to understand and balance <b>competing concerns</b> regarding the <b>new technology</b>. These concerns include <b>acquisition costs</b>, the technology's effect on quality and <b>time to market</b>, and the <b>training</b> and <b>support</b> services it will require. ",
    "title": "A Framework for Evaluating Software Technology",
    "year": 1996,
    "number": 5,
    "page": 39,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.536457",
    "selected": false,
    "authors": [
      {
        "name": "Alan W. Brown",
        "link": ""
      },
      {
        "name": "Kurt C. Wallnau",
        "link": ""
      }
    ],
    "authorsList": "Alan W. Brown, Kurt C. Wallnau",
    "citation": "Alan W. Brown, Kurt C. Wallnau, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.536457\">A Framework for Evaluating Software Technology</a>, IEEE Software 1996, no. 5, p. 39",
    "searchText": ""
  },
  {
    "quote": "<b>Migrating legacy systems</b> and developing new systems for <b>client/server environments</b> has dominated the software development <b>tool market in the '90s</b>.",
    "title": "Tools Fair: Untangling the Web with Web and Client/Server Development Tools",
    "year": 1996,
    "number": 5,
    "page": 61,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.536460",
    "selected": false,
    "authors": [
      {
        "name": "Alan Chmura",
        "link": ""
      },
      {
        "name": "David Sharon",
        "link": ""
      }
    ],
    "authorsList": "Alan Chmura, David Sharon",
    "citation": "Alan Chmura, David Sharon, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.536460\">Tools Fair: Untangling the Web with Web and Client/Server Development Tools</a>, IEEE Software 1996, no. 5, p. 61",
    "searchText": ""
  },
  {
    "quote": "<b>Thirty years ago</b>, as the software industry was first gathering steam, most software projects were <b>run by people</b> with <b>no software experience</b>. Today this is <b>no longer true</b>. ... Yet few would <b>argue</b> that the quality of software project management <b>has improved</b> in the same period.",
    "title": "Managing Large Software Projects",
    "year": 1996,
    "number": 4,
    "page": 24,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1996.526827",
    "selected": false,
    "authors": [
      {
        "name": "Ann Miller",
        "link": ""
      },
      {
        "name": "Tom DeMarco",
        "link": ""
      }
    ],
    "authorsList": "Ann Miller, Tom DeMarco",
    "citation": "Ann Miller, Tom DeMarco, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1996.526827\">Managing Large Software Projects</a>, IEEE Software 1996, no. 4, p. 24",
    "searchText": ""
  },
  {
    "quote": "[O]rganizations have invested in <b>dozens of technological innovations</b> such as <b>fourth-generation</b> languages, <b>CASE</b> products, <b>object-oriented</b> analysis and programming, and software <b>reuse</b>. Yet productivity tools simply <b>aren't delivering increased productivity</b> even when a project is managed 'by the book.' ... the software development environment is <b>a complex social system</b> that causes such practices to have unintended consequences.",
    "title": "The Slippery Path to Productivity Improvement",
    "year": 1996,
    "number": 4,
    "page": 43,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.526831",
    "selected": false,
    "authors": [
      {
        "name": "Tarek K. Abdel-Hamid",
        "link": ""
      }
    ],
    "authorsList": "Tarek K. Abdel-Hamid",
    "citation": "Tarek K. Abdel-Hamid, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.526831\">The Slippery Path to Productivity Improvement</a>, IEEE Software 1996, no. 4, p. 43",
    "searchText": ""
  },
  {
    "quote": "The most important lesson we have learned is to <b>follow up with suppliers</b> so that they <b>know</b> the <b>importance we place</b> on <b>quality</b> and process improvement.",
    "title": "Selecting Software Subcontractors",
    "year": 1996,
    "number": 4,
    "page": 104,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.526837",
    "selected": false,
    "authors": [
      {
        "name": "Jim Nielsen",
        "link": ""
      },
      {
        "name": "Ann Miller",
        "link": ""
      }
    ],
    "authorsList": "Jim Nielsen, Ann Miller",
    "citation": "Jim Nielsen, Ann Miller, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.526837\">Selecting Software Subcontractors</a>, IEEE Software 1996, no. 4, p. 104",
    "searchText": ""
  },
  {
    "quote": "Only through <b>experimentation</b> can <b>true learning</b>, and hence progress, take place. However, it should be remembered that one <b>definition of insanity</b> is when a person, failing at a task, <b>tries the same thing</b> over and over again, <b>expecting a different result</b>.",
    "title": "Large-Scale Project Management Is Risk Management",
    "year": 1996,
    "number": 4,
    "page": 110,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.526838",
    "selected": false,
    "authors": [
      {
        "name": "Robert N. Charette",
        "link": ""
      }
    ],
    "authorsList": "Robert N. Charette",
    "citation": "Robert N. Charette, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.526838\">Large-Scale Project Management Is Risk Management</a>, IEEE Software 1996, no. 4, p. 110",
    "searchText": ""
  },
  {
    "quote": "Software engineering is a young profession. We still have much to learn from each other. Past experience suggests that an <b>incremental delivery model</b> would <b>reduce risk</b> and <b>improve project management</b>.",
    "title": "Making Software Development Visible",
    "year": 1996,
    "number": 3,
    "page": 23,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1996.493016",
    "selected": false,
    "authors": [
      {
        "name": "Pei Hsia",
        "link": ""
      }
    ],
    "authorsList": "Pei Hsia",
    "citation": "Pei Hsia, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1996.493016\">Making Software Development Visible</a>, IEEE Software 1996, no. 3, p. 23",
    "searchText": ""
  },
  {
    "quote": "If you’re <b>building a relatively complex system</b> involving multiple computers and multiple users, and if the system entails significant innovation - such as new technology or expanded scale - something will <b>inevitably go wrong</b>. Realizing this might encourage you to use both design and user-interface prototypes?,’and the spiral model of development so that you can look ahead and assess risks as you go.",
    "title": "Why Bad Things Happen to Good Projects",
    "year": 1996,
    "number": 3,
    "page": 27,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.493017",
    "selected": false,
    "authors": [
      {
        "name": "Karen Mackey",
        "link": ""
      }
    ],
    "authorsList": "Karen Mackey",
    "citation": "Karen Mackey, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.493017\">Why Bad Things Happen to Good Projects</a>, IEEE Software 1996, no. 3, p. 27",
    "searchText": ""
  },
  {
    "quote": "<b>Product-line development</b> seeks to achieve reuse across a domain, or family, of systems. Product-line development separates the software-development process into two separate life cycles: <b>domain engineering</b>, which aims to create reusable assets, and <b>application engineering</b>, which fields systems using those assets. ... We learned that product-line development demands <b>careful strategic planning</b>, a <b>mature</b> development <b>process</b>, and the ability to overcome <b>organizational resistance</b>.",
    "title": "Managing Domain-Specific, Product-Line Development",
    "year": 1996,
    "number": 3,
    "page": 57,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.493021",
    "selected": false,
    "authors": [
      {
        "name": "Lynn D. Stuckey Jr.",
        "link": ""
      },
      {
        "name": "David C. Gross",
        "link": ""
      },
      {
        "name": "Randall R. Macala",
        "link": ""
      }
    ],
    "authorsList": "Lynn D. Stuckey Jr., David C. Gross, Randall R. Macala",
    "citation": "Lynn D. Stuckey Jr., David C. Gross, Randall R. Macala, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.493021\">Managing Domain-Specific, Product-Line Development</a>, IEEE Software 1996, no. 3, p. 57",
    "searchText": ""
  },
  {
    "quote": "Developments in <b>requirements engineering</b>, as in system development, have come in waves. The next wave of requirements techniques and tools should account for the problem and development <b>context</b>, accommodate <b>incompleteness</b>, and recognize and exploit the <b>non-absolute nature of user needs</b>.",
    "title": "Requirements Engineering: The Emerging Wisdom",
    "year": 1996,
    "number": 2,
    "page": 15,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1996.506458",
    "selected": false,
    "authors": [
      {
        "name": "M. Chandra Shekaran",
        "link": ""
      },
      {
        "name": "Jawed Siddiqi",
        "link": ""
      }
    ],
    "authorsList": "M. Chandra Shekaran, Jawed Siddiqi",
    "citation": "M. Chandra Shekaran, Jawed Siddiqi, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1996.506458\">Requirements Engineering: The Emerging Wisdom</a>, IEEE Software 1996, no. 2, p. 15",
    "searchText": ""
  },
  {
    "quote": "To find the <b>right balance</b> of <b>quality-attribute requirements</b>, you must <b>identify the conflicts</b> among desired quality attributes and <b>work out a balance</b> of attribute satisfaction.",
    "title": "Identifying Quality-Requirement Conflicts",
    "year": 1996,
    "number": 2,
    "page": 25,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.506460",
    "selected": false,
    "authors": [
      {
        "name": "Hoh In",
        "link": ""
      },
      {
        "name": "Barry Boehm",
        "link": ""
      }
    ],
    "authorsList": "Hoh In, Barry Boehm",
    "citation": "Hoh In, Barry Boehm, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.506460\">Identifying Quality-Requirement Conflicts</a>, IEEE Software 1996, no. 2, p. 25",
    "searchText": ""
  },
  {
    "quote": "[A] <b>lack of solid historical data</b> makes project managers, executives, and clients <b>blind to the realities</b> of software development.",
    "title": "Our Worst Current Development Practices",
    "year": 1996,
    "number": 2,
    "page": 102,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.506467",
    "selected": false,
    "authors": [
      {
        "name": "Capers Jones",
        "link": ""
      }
    ],
    "authorsList": "Capers Jones",
    "citation": "Capers Jones, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.506467\">Our Worst Current Development Practices</a>, IEEE Software 1996, no. 2, p. 102",
    "searchText": ""
  },
  {
    "quote": "The <b>consequences of Moore's Law</b> for IEEE Software are significant. In short, in the coming decades, we will see technological and market niches that constantly form, shift, merge, split, and disappear. <b>Computers</b> will <b>permeate most of our buildings</b> (homes and offices), <b>cars</b>, <b>wallets</b>, <b>watches</b>, maps, and credit cards. Existing devices (faxes, phones, PCs, TVs, GPSs, pagers, PDAs, and the like) will merge into forms that are specialized to particular uses (the so-called 'convergence revolution').",
    "title": "Moore's Law: Change or Die",
    "year": 1996,
    "number": 1,
    "page": 4,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1996.476277",
    "selected": false,
    "authors": [
      {
        "name": "Ted J. Biggerstaff",
        "link": ""
      }
    ],
    "authorsList": "Ted J. Biggerstaff",
    "citation": "Ted J. Biggerstaff, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1996.476277\">Moore's Law: Change or Die</a>, IEEE Software 1996, no. 1, p. 4",
    "searchText": ""
  },
  {
    "quote": "If you are a software developer, manager, or maintainer, quality is often on your mind. But <b>what do you really mean by software quality</b>? Is your definition adequate? Is the software you produce better or worse than you would like it to be?",
    "title": "Software Quality: The Elusive Target",
    "year": 1996,
    "number": 1,
    "page": 12,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.476281",
    "selected": false,
    "authors": [
      {
        "name": "Shari Lawrence Pfleeger",
        "link": ""
      },
      {
        "name": "Barbara Kitchenham",
        "link": ""
      }
    ],
    "authorsList": "Shari Lawrence Pfleeger, Barbara Kitchenham",
    "citation": "Shari Lawrence Pfleeger, Barbara Kitchenham, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.476281\">Software Quality: The Elusive Target</a>, IEEE Software 1996, no. 1, p. 12",
    "searchText": ""
  },
  {
    "quote": "Discussions of <b>software quality</b> typically <b>focus on</b> the development <b>process</b> or the characteristics of the software <b>product</b>. The third level of quality - <b>the outcome</b> of software development - is usually neglected, although this is perhaps of greatest interest to business management. <b>Outcome</b> depends on how the product is used and determines <b>the business value</b> obtained from the development project.",
    "title": "Quality Outcomes: Determining Business Value",
    "year": 1996,
    "number": 1,
    "page": 25,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.476283",
    "selected": false,
    "authors": [
      {
        "name": "Pamela Simmons",
        "link": ""
      }
    ],
    "authorsList": "Pamela Simmons",
    "citation": "Pamela Simmons, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.476283\">Quality Outcomes: Determining Business Value</a>, IEEE Software 1996, no. 1, p. 25",
    "searchText": ""
  },
  {
    "quote": "Today the dominant modus operandi for software development is <b>heavily process-oriented</b> ... the <b>emphasis on process</b> ... comes at the expense of ... using adequate <b>product quality models</b>. The fundamental axiom of software product quality is: ... tangible <b>internal</b> <b>characteristics</b> ... determine its external quality attributes. ... A <b>product quality model</b> ... must ... identify the tangible (measurable and/or assessable) <b>internal</b> product <b>characteristics</b> that have the most significant effect on external quality attributes. ",
    "title": "Cornering the Chimera",
    "year": 1996,
    "number": 1,
    "page": 33,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.476284",
    "selected": false,
    "authors": [
      {
        "name": "R. Geoff Dromey",
        "link": ""
      }
    ],
    "authorsList": "R. Geoff Dromey",
    "citation": "R. Geoff Dromey, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.476284\">Cornering the Chimera</a>, IEEE Software 1996, no. 1, p. 33",
    "searchText": ""
  },
  {
    "quote": "In 1991, <b>Philips' CEO</b> named a <b>Software Process Improvement task force</b> to focus on the increasing importance of software ... In addition to improving its processes, the organization improved its requirements-and-design engineering architecture and its <b>inspections</b>, and it <b>introduced metrics</b>.",
    "title": "Software Quality in Consumer Electronics Products",
    "year": 1996,
    "number": 1,
    "page": 55,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.476286",
    "selected": false,
    "authors": [
      {
        "name": "Hans Aerts",
        "link": ""
      },
      {
        "name": "Jan Rooijmans",
        "link": ""
      },
      {
        "name": "Michiel Van Genuchten",
        "link": ""
      }
    ],
    "authorsList": "Hans Aerts, Jan Rooijmans, Michiel Van Genuchten",
    "citation": "Hans Aerts, Jan Rooijmans, Michiel Van Genuchten, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.476286\">Software Quality in Consumer Electronics Products</a>, IEEE Software 1996, no. 1, p. 55",
    "searchText": ""
  },
  {
    "quote": "[T]he <b>need to be beautiful</b> and produce more elaborate and <b>polished designs</b> changes our traditionally restrained and functionality-oriented design focus.",
    "title": "The Importance of Being Beautiful",
    "year": 1996,
    "number": 1,
    "page": 92,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.476290",
    "selected": false,
    "authors": [
      {
        "name": "Jakob Nielsen",
        "link": ""
      }
    ],
    "authorsList": "Jakob Nielsen",
    "citation": "Jakob Nielsen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.476290\">The Importance of Being Beautiful</a>, IEEE Software 1996, no. 1, p. 92",
    "searchText": ""
  },
  {
    "quote": "There is undoubtedly a large measure of <b>art involved in software design</b>. But <b>artistic expression</b> in the absence of rules results in <b>chaotic design</b>. To produce open systems, we must agree on some <b>well-defined rules</b> to govern interaction among systems and subsystems.",
    "title": "The Artistry of Software Architecture",
    "year": 1995,
    "number": 6,
    "page": 13,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1995.10051",
    "selected": false,
    "authors": [
      {
        "name": "Maarten Boasson",
        "link": ""
      }
    ],
    "authorsList": "Maarten Boasson",
    "citation": "Maarten Boasson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1995.10051\">The Artistry of Software Architecture</a>, IEEE Software 1995, no. 6, p. 13",
    "searchText": ""
  },
  {
    "quote": "Most of the <b>designs</b> appeal to <b>multiple styles</b>, but they generally fall into four main groups: <b>object-oriented</b> architectures, including information hiding; <b>state-based</b> architectures; <b>feedback-control</b> architectures; and architectures that emphasize the system's <b>real-time</b> properties.",
    "title": "Comparing Architectural Design Styles",
    "year": 1995,
    "number": 6,
    "page": 27,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.469758",
    "selected": false,
    "authors": [
      {
        "name": "Mary Shaw",
        "link": ""
      }
    ],
    "authorsList": "Mary Shaw",
    "citation": "Mary Shaw, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.469758\">Comparing Architectural Design Styles</a>, IEEE Software 1995, no. 6, p. 27",
    "searchText": ""
  },
  {
    "quote": "<b>The 4+1 View Model</b> describes software architecture using <b>five concurrent views</b> ... : The <b>logical view</b> describes the design's object model, the <b>process view</b> describes the design's concurrency and synchronization aspects; the <b>physical view</b> describes the mapping of the software onto the hardware and shows the system's distributed aspects, and the <b>development view</b> describes the software's static organization in the development environment. Software designers can organize the description of their <b>architectural decisions</b> around these four views and then illustrate them with a few selected use cases, or <b>scenarios</b>, which constitute <b>a fifth view</b>. ",
    "title": "The 4+1 View Model of Architecture",
    "year": 1995,
    "number": 6,
    "page": 42,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.469759",
    "selected": false,
    "authors": [
      {
        "name": "Philippe Kruchten",
        "link": ""
      }
    ],
    "authorsList": "Philippe Kruchten",
    "citation": "Philippe Kruchten, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.469759\">The 4+1 View Model of Architecture</a>, IEEE Software 1995, no. 6, p. 42",
    "searchText": ""
  },
  {
    "quote": "I get uncontrollable giggles when people tell me their organizations are '<b>lean and mean</b>.' They say it in the most ponderous tones. They wrinkle their brows earnestly and look me right in the eye. 'We're <b>lean and mean</b> here,' they say. They say this even though they <b>themselves are overweight and rather sweet</b>. And that's only the first of the contradictions.",
    "title": "What 'Lean and Mean' Really Means",
    "year": 1995,
    "number": 6,
    "page": 101,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.469767",
    "selected": false,
    "authors": [
      {
        "name": "Tom DeMarco",
        "link": ""
      }
    ],
    "authorsList": "Tom DeMarco",
    "citation": "Tom DeMarco, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.469767\">What 'Lean and Mean' Really Means</a>, IEEE Software 1995, no. 6, p. 101",
    "searchText": ""
  },
  {
    "quote": "In our haste to <b>speed development</b>, we should consider if we are sprinting in the right direction. Is faster time-to-market equally important to every developer? Does a <b>faster cycle time</b> necessarily guarantee success? And how does the answer change from one year to the next?",
    "title": "Guest Editor's Introduction: The RAD Fad--Is Timing Really Everything?",
    "year": 1995,
    "number": 5,
    "page": 19,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1995.10045",
    "selected": false,
    "authors": [
      {
        "name": "David N. Card",
        "link": ""
      }
    ],
    "authorsList": "David N. Card",
    "citation": "David N. Card, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1995.10045\">Guest Editor's Introduction: The RAD Fad--Is Timing Really Everything?</a>, IEEE Software 1995, no. 5, p. 19",
    "searchText": ""
  },
  {
    "quote": "To be successful with RAD (<b>rapid application development</b>), we can no longer look just at the software product in isolation. A RAD development process demands that we expand our view to <b>encompass users</b> and their work environments-and if we do it right, everyone benefits. But given all the risks, would you stake <b>mission-critical projects on RAD</b>? If it is not mission-critical, then why bother at all?",
    "title": "Point-Counterpoint: Does RAD Live Up to the Hype?",
    "year": 1995,
    "number": 5,
    "page": 24,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.406752",
    "selected": false,
    "authors": [
      {
        "name": "Erran Carmel",
        "link": ""
      },
      {
        "name": "John P. Reilly",
        "link": ""
      }
    ],
    "authorsList": "Erran Carmel, John P. Reilly",
    "citation": "Erran Carmel, John P. Reilly, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.406752\">Point-Counterpoint: Does RAD Live Up to the Hype?</a>, IEEE Software 1995, no. 5, p. 24",
    "searchText": ""
  },
  {
    "quote": "The <b>Mythical Man-Month</b> is <b>only incidentally about software</b> but <b>primarily about how people in teams make things</b>.There is surely some truth in this; in the preface to the 1975 edition I said that managing a software project is more like other management than most programmers initially believe. I still believe that to be true. Human history is a drama in which the stories stay the same, the scripts of those stories change slowly with evolving cultures, and the stage settings change all the time. So it is that we see our twentieth-century selves mirrored in Shakespeare, Homer,and the Bible.",
    "title": "The Mythical Man-Month: After 20 Years",
    "year": 1995,
    "number": 5,
    "page": 57,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1995.10041",
    "selected": false,
    "authors": [
      {
        "name": "Frederick P. Brooks Jr.",
        "link": ""
      }
    ],
    "authorsList": "Frederick P. Brooks Jr.",
    "citation": "Frederick P. Brooks Jr., <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1995.10041\">The Mythical Man-Month: After 20 Years</a>, IEEE Software 1995, no. 5, p. 57",
    "searchText": ""
  },
  {
    "quote": "Earl Wheeler told me ...: 'The key thrust ... was delegating power down. It was likemagic! <b>Improved quality</b>, <b>productivity</b>, <b>morale</b>. We have <b>small teams</b>, with <b>no central control</b>. The <b>teams own the process</b>, but they have to haveone. They have many different processes. They <b>own the schedule</b>, but they <b>feel the pressure</b> of the market. This pressure causes them to reach for tools on their own'.",
    "title": "The Mythical Man-Month: After 20 Years",
    "year": 1995,
    "number": 5,
    "page": 57,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1995.10041",
    "selected": false,
    "authors": [
      {
        "name": "Frederick P. Brooks Jr.",
        "link": ""
      }
    ],
    "authorsList": "Frederick P. Brooks Jr.",
    "citation": "Frederick P. Brooks Jr., <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1995.10041\">The Mythical Man-Month: After 20 Years</a>, IEEE Software 1995, no. 5, p. 57",
    "searchText": ""
  },
  {
    "quote": "At <b>Hitachi Software</b>, we organize software projects in a way that retains high-quality software and improves scheduling. We do this by <b>forcing 'necessary' conflicts</b> among independent groups within the larger software-development team. We believe that by creating <b>a competitive atmosphere</b> between <b>the design and quality-assurance departments</b>, engineers on both teams are motivated to be quality sensitive.",
    "title": "Practical Steps Toward Quality Development",
    "year": 1995,
    "number": 5,
    "page": 68,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.406760",
    "selected": false,
    "authors": [
      {
        "name": "Akira K. Onoma",
        "link": ""
      },
      {
        "name": "Tsuneo Yamaura",
        "link": ""
      }
    ],
    "authorsList": "Akira K. Onoma, Tsuneo Yamaura",
    "citation": "Akira K. Onoma, Tsuneo Yamaura, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.406760\">Practical Steps Toward Quality Development</a>, IEEE Software 1995, no. 5, p. 68",
    "searchText": ""
  },
  {
    "quote": "What are the three most important things to remember when you buy a house? Most real estate agents have a simple answer: <b>location</b>, <b>location</b>, <b>location</b>. And what are the three most important things to remember when attempting software-process improvement? My answer: <b>people</b>, <b>people</b>, <b>people</b>.",
    "title": "Making Process Improvement Personal",
    "year": 1995,
    "number": 5,
    "page": 82,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.406762",
    "selected": false,
    "authors": [
      {
        "name": "Watts S. Humphrey",
        "link": ""
      }
    ],
    "authorsList": "Watts S. Humphrey",
    "citation": "Watts S. Humphrey, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.406762\">Making Process Improvement Personal</a>, IEEE Software 1995, no. 5, p. 82",
    "searchText": ""
  },
  {
    "quote": "There is an <b>enormous disconnection</b> between what <b>academicians and consultants</b> think will revolutionize development and <b>what actually works in the trenches</b>. We have much to learn about what really works, what works a little, and what doesn't work at all. <b>Debating issues</b> over time can help us <b>accumulate knowledge</b> and <b>reach a consensus</b> on the most promising solutions.",
    "title": "Debatable Development: What Should We Believe?",
    "year": 1995,
    "number": 4,
    "page": 13,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1995.10034",
    "selected": false,
    "authors": [
      {
        "name": "Stephen J. Andriole",
        "link": ""
      }
    ],
    "authorsList": "Stephen J. Andriole",
    "citation": "Stephen J. Andriole, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1995.10034\">Debatable Development: What Should We Believe?</a>, IEEE Software 1995, no. 4, p. 13",
    "searchText": ""
  },
  {
    "quote": "<b>Systems analysis</b> is the study of a system for the purpose of <b>understanding and documenting</b> its <b>essential characteristics</b>. Analysis is <b>neither design nor implementation</b>. Analysis focuses on real-world problems, whereas design and implementation focus on computerized solutions.",
    "title": "OO Systems Analysis: Is It or Isn't It?",
    "year": 1995,
    "number": 4,
    "page": 19,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.391825",
    "selected": false,
    "authors": [
      {
        "name": "Robert B. Jackson",
        "link": ""
      },
      {
        "name": "David W. Embley",
        "link": ""
      },
      {
        "name": "Scott N. Woodfield",
        "link": ""
      }
    ],
    "authorsList": "Robert B. Jackson, David W. Embley, Scott N. Woodfield",
    "citation": "Robert B. Jackson, David W. Embley, Scott N. Woodfield, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.391825\">OO Systems Analysis: Is It or Isn't It?</a>, IEEE Software 1995, no. 4, p. 19",
    "searchText": ""
  },
  {
    "quote": "Many <b>nonformalists</b> seem to believe that formal methods are <b>merely an academic exercise</b> -- a form of <b>mental masturbation</b> that has no relation to real-world problems. ... [W]e address and dispel seven new myths about formal methods ...",
    "title": "Seven More Myths of Formal Methods",
    "year": 1995,
    "number": 4,
    "page": 34,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.391826",
    "selected": false,
    "authors": [
      {
        "name": "Jonathan P. Bowen",
        "link": ""
      },
      {
        "name": "Michael G. Hinchey",
        "link": ""
      }
    ],
    "authorsList": "Jonathan P. Bowen, Michael G. Hinchey",
    "citation": "Jonathan P. Bowen, Michael G. Hinchey, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.391826\">Seven More Myths of Formal Methods</a>, IEEE Software 1995, no. 4, p. 34",
    "searchText": ""
  },
  {
    "quote": "[W]e redesigned the Sun home page after observing users ... One change we made shows the <b>benefits of this type of testing</b>: We discovered early on that users didn’t recognize the “What’s New at Sun” button as a link, and ... we redesigned the button immediately ... use of the 'What's New at Sun' button <b>increased by 416 percent</b> ... <b>small interface changes</b> can lead to <b>dramatic changes in user behavior</b>! ",
    "title": "Using Paper Prototypes In Home-page Design",
    "year": 1995,
    "number": 4,
    "page": 88,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.391840",
    "selected": false,
    "authors": [
      {
        "name": "Jakob Nielsen",
        "link": ""
      }
    ],
    "authorsList": "Jakob Nielsen",
    "citation": "Jakob Nielsen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.391840\">Using Paper Prototypes In Home-page Design</a>, IEEE Software 1995, no. 4, p. 88",
    "searchText": ""
  },
  {
    "quote": "Not a day goes by that the <b>general public</b> does not come into <b>contact with a real-time system</b>. As their numbers and importance grow, so do the <b>implications</b> for software <b>developers</b>.",
    "title": "Guest Editors' Introduction: Reliability and Safety of Real-Time Systems",
    "year": 1995,
    "number": 3,
    "page": 13,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.382177",
    "selected": false,
    "authors": [
      {
        "name": "William W. Everett",
        "link": ""
      },
      {
        "name": "Shinichi Honiden",
        "link": ""
      }
    ],
    "authorsList": "William W. Everett, Shinichi Honiden",
    "citation": "William W. Everett, Shinichi Honiden, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.382177\">Guest Editors' Introduction: Reliability and Safety of Real-Time Systems</a>, IEEE Software 1995, no. 3, p. 13",
    "searchText": ""
  },
  {
    "quote": "<b>Software verification</b> is often the last defense against disasters caused by faulty software development. When lives and fortunes depend on software, <b>software quality</b> and its verification demand increased attention. ... How do you <b>assess</b> that critical automated systems are acceptably <b>safe and reliable</b>?",
    "title": "Software Testability: The New Verification",
    "year": 1995,
    "number": 3,
    "page": 17,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.382180",
    "selected": false,
    "authors": [
      {
        "name": "Keith W. Miller",
        "link": ""
      },
      {
        "name": "Jeffrey M. Voas",
        "link": ""
      }
    ],
    "authorsList": "Keith W. Miller, Jeffrey M. Voas",
    "citation": "Keith W. Miller, Jeffrey M. Voas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.382180\">Software Testability: The New Verification</a>, IEEE Software 1995, no. 3, p. 17",
    "searchText": ""
  },
  {
    "quote": "<b>The best prototype</b> for designing your new user interface is <b>your old user interface</b>. <b>The second-best prototype</b> is a <b>competing product</b>. Your competitors have invested significant resources in designing and implementing what they believe to be good user interfaces. You should take advantage of those investments. ",
    "title": "A Home-Page Overhaul Using Other Web Sites",
    "year": 1995,
    "number": 3,
    "page": 75,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.382190",
    "selected": false,
    "authors": [
      {
        "name": "Jakob Nielsen",
        "link": ""
      }
    ],
    "authorsList": "Jakob Nielsen",
    "citation": "Jakob Nielsen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.382190\">A Home-Page Overhaul Using Other Web Sites</a>, IEEE Software 1995, no. 3, p. 75",
    "searchText": ""
  },
  {
    "quote": "Computer technology is <b>exploding</b>. Friendly interfaces, a full range of media, and unlimited connectivity are pushing technology ever deeper into the fabric of society. How can developers incorporate all this new technology into their applications? Today's development environments are taking advantage of emerging integration standards to offer specialized tools.",
    "title": "Tools to Engineer New Technologies into Applications",
    "year": 1995,
    "number": 2,
    "page": 11,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.368255",
    "selected": false,
    "authors": [
      {
        "name": "David Sharon",
        "link": ""
      },
      {
        "name": "Rodney Bell",
        "link": ""
      }
    ],
    "authorsList": "David Sharon, Rodney Bell",
    "citation": "David Sharon, Rodney Bell, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.368255\">Tools to Engineer New Technologies into Applications</a>, IEEE Software 1995, no. 2, p. 11",
    "searchText": ""
  },
  {
    "quote": "<b>Tools</b> are not the driving force of software technology they used to be. But this does not mean they have become less important; on the contrary, a full set of supporting tools for each development phase is now a basic requirement. It does mean <b>other things are now as important as tools</b>...",
    "title": "The Future Belongs to the Specialized Tool",
    "year": 1995,
    "number": 2,
    "page": 9,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1995.10010",
    "selected": false,
    "authors": [
      {
        "name": "Pertti Lounama",
        "link": ""
      }
    ],
    "authorsList": "Pertti Lounama",
    "citation": "Pertti Lounama, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1995.10010\">The Future Belongs to the Specialized Tool</a>, IEEE Software 1995, no. 2, p. 9",
    "searchText": ""
  },
  {
    "quote": "Point: Alan Chmura — Proper use of <b>CASE tools can and does significantly improve developer productivity</b> and yield high-quality systems. ... Counterpoint: Henry David Crockett — As they are currently applied, <b>CASE tools seldom improve productivity or quality</b>. ... Many IS managers assume that CASE is a software solution to all development problems.",
    "title": "Point Counterpoint: What's the Proper Role for CASE Tools?",
    "year": 1995,
    "number": 2,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.368258",
    "selected": false,
    "authors": [
      {
        "name": "Alan Chmura",
        "link": ""
      },
      {
        "name": "Henry David Crockett",
        "link": ""
      }
    ],
    "authorsList": "Alan Chmura, Henry David Crockett",
    "citation": "Alan Chmura, Henry David Crockett, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.368258\">Point Counterpoint: What's the Proper Role for CASE Tools?</a>, IEEE Software 1995, no. 2, p. 18",
    "searchText": ""
  },
  {
    "quote": "In many applications users must <b>browse large images</b>. Building on user <b>familiarity with one-dimensional scroll bars</b>, many designers simply use <b>two one-dimensional scroll bars</b> when the application requires independent control over the horizontal and vertical directions, <b>as in panning a map</b>. ... in many cases this solution is inadequate.",
    "title": "Image-Browser Taxonomy and Guidelines for Designers",
    "year": 1995,
    "number": 2,
    "page": 21,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.368260",
    "selected": false,
    "authors": [
      {
        "name": "Ben Shneiderman",
        "link": ""
      },
      {
        "name": "Catherine Plaisant",
        "link": ""
      },
      {
        "name": "David Carr",
        "link": ""
      }
    ],
    "authorsList": "Ben Shneiderman, Catherine Plaisant, David Carr",
    "citation": "Ben Shneiderman, Catherine Plaisant, David Carr, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.368260\">Image-Browser Taxonomy and Guidelines for Designers</a>, IEEE Software 1995, no. 2, p. 21",
    "searchText": ""
  },
  {
    "quote": "<b>Sound</b> can potentially <b>reveal patterns and anomalies in data</b> that are difficult to perceive visually. Moreover, <b>psychological studies</b> show that some types of data are more quickly assimilated when presented with sound; <b>an audio alarm</b> is the classic example.",
    "title": "Data Sonification: Do You See What I Hear?",
    "year": 1995,
    "number": 2,
    "page": 45,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.368264",
    "selected": false,
    "authors": [
      {
        "name": "Daniel A. Reed",
        "link": ""
      },
      {
        "name": "Tara M. Madhyastha",
        "link": ""
      }
    ],
    "authorsList": "Daniel A. Reed, Tara M. Madhyastha",
    "citation": "Daniel A. Reed, Tara M. Madhyastha, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.368264\">Data Sonification: Do You See What I Hear?</a>, IEEE Software 1995, no. 2, p. 45",
    "searchText": ""
  },
  {
    "quote": "<b>Legacy software</b> was written years ago using outdated techniques, yet it continues to do useful work. Migrating and updating this <b>baggage from our past</b> has technical and nontechnical challenges, ranging from justifying the expense to dealing with offshore contractors to using program-understanding and visualization techniques.",
    "title": "Legacy Systems: Coping with Success",
    "year": 1995,
    "number": 1,
    "page": 19,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.363157",
    "selected": false,
    "authors": [
      {
        "name": "Keith Bennett",
        "link": ""
      }
    ],
    "authorsList": "Keith Bennett",
    "citation": "Keith Bennett, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.363157\">Legacy Systems: Coping with Success</a>, IEEE Software 1995, no. 1, p. 19",
    "searchText": ""
  },
  {
    "quote": "As the manager of a small software-reengineering company, I am continually confronted with the task of <b>justifying reengineering</b>. ... they <b>[technical issues] may be irrelevant</b> if you are not able to <b>make a business case</b> for solving them.",
    "title": "Planning the Reengineering of Legacy Systems",
    "year": 1995,
    "number": 1,
    "page": 24,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.363168",
    "selected": false,
    "authors": [
      {
        "name": "Harry M. Sneed",
        "link": ""
      }
    ],
    "authorsList": "Harry M. Sneed",
    "citation": "Harry M. Sneed, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.363168\">Planning the Reengineering of Legacy Systems</a>, IEEE Software 1995, no. 1, p. 24",
    "searchText": ""
  },
  {
    "quote": "Opinions on <b>rapid prototyping</b> as a practical development tool vary widely, with conventional wisdom seeing it more as a research topic than a workable method. The authors counter this notion with results from 39 case studies, most of which have used this approach successfully.",
    "title": "Rapid Prototyping: Lessons Learned",
    "year": 1995,
    "number": 1,
    "page": 85,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.363162",
    "selected": false,
    "authors": [
      {
        "name": "James M. Bieman",
        "link": ""
      },
      {
        "name": "V. Scott Gordon",
        "link": ""
      }
    ],
    "authorsList": "James M. Bieman, V. Scott Gordon",
    "citation": "James M. Bieman, V. Scott Gordon, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.363162\">Rapid Prototyping: Lessons Learned</a>, IEEE Software 1995, no. 1, p. 85",
    "searchText": ""
  },
  {
    "quote": "<b>Usability engineering</b> isn’t just for the multimillion dollar companies with massive internal test labs. Jakob Nielsen, a distinguished engineer at SunSoft, relates how he and another designer (yes, a two-person project) employed low-cost, easily accessible techniques to perform several useful studies. The techniques, detailed in his recent book Usability Engineering (AP Professional, 1994), are virtually free of complex statistical methods, <b>relying instead on simple observation and interpretation</b>.",
    "title": "Applying Discount Usability Engineering",
    "year": 1995,
    "number": 1,
    "page": 98,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.363161",
    "selected": false,
    "authors": [
      {
        "name": "Bill Curtis",
        "link": ""
      },
      {
        "name": "Jakob Nielsen",
        "link": ""
      }
    ],
    "authorsList": "Bill Curtis, Jakob Nielsen",
    "citation": "Bill Curtis, Jakob Nielsen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.363161\">Applying Discount Usability Engineering</a>, IEEE Software 1995, no. 1, p. 98",
    "searchText": ""
  },
  {
    "quote": "The worldwide software industry is poised for change well into the next century. How well each developer; researcher, or country fares may depend on how clear its <b>visions of the future</b> are.",
    "title": "Software Beyond 2001: A Global Vision",
    "year": 1994,
    "number": 6,
    "page": 8,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.329394",
    "selected": false,
    "authors": [
      {
        "name": "Jawed Siddiqi",
        "link": ""
      },
      {
        "name": "Mikio Aoyama",
        "link": ""
      },
      {
        "name": "William W. Everett",
        "link": ""
      }
    ],
    "authorsList": "Jawed Siddiqi, Mikio Aoyama, William W. Everett",
    "citation": "Jawed Siddiqi, Mikio Aoyama, William W. Everett, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.329394\">Software Beyond 2001: A Global Vision</a>, IEEE Software 1994, no. 6, p. 8",
    "searchText": ""
  },
  {
    "quote": "<b>[I]increasing connectivity</b> and <b>consumer demands</b> will power an unprecedented <b>growth in software's volume and complexity</b> ... the flexibility and robustness of <b>an object-oriented approach</b> can best meet these future challenges.",
    "title": "Coming of Age in an Object-Oriented World",
    "year": 1994,
    "number": 6,
    "page": 33,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.329399",
    "selected": false,
    "authors": [
      {
        "name": "Grady Booch",
        "link": ""
      }
    ],
    "authorsList": "Grady Booch",
    "citation": "Grady Booch, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.329399\">Coming of Age in an Object-Oriented World</a>, IEEE Software 1994, no. 6, p. 33",
    "searchText": ""
  },
  {
    "quote": "Who wants to <b>try new techniques</b> when there are <b>madman prowling for someone to blame or ax</b>?",
    "title": "Management-Aided Software Engineering",
    "year": 1994,
    "number": 6,
    "page": 25,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.329398",
    "selected": false,
    "authors": [
      {
        "name": "Tom DeMarco",
        "link": ""
      },
      {
        "name": "Sheila Brady",
        "link": ""
      }
    ],
    "authorsList": "Tom DeMarco, Sheila Brady",
    "citation": "Tom DeMarco, Sheila Brady, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.329398\">Management-Aided Software Engineering</a>, IEEE Software 1994, no. 6, p. 25",
    "searchText": ""
  },
  {
    "quote": "Many <b>developing countries</b> are now <b>entering the commercial software domain</b>, and this trend should accelerate in the twenty-first century.",
    "title": "Globalization of Software Supply and Demand",
    "year": 1994,
    "number": 6,
    "page": 17,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.329397",
    "selected": false,
    "authors": [
      {
        "name": "Capers Jones",
        "link": ""
      }
    ],
    "authorsList": "Capers Jones",
    "citation": "Capers Jones, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.329397\">Globalization of Software Supply and Demand</a>, IEEE Software 1994, no. 6, p. 17",
    "searchText": ""
  },
  {
    "quote": "The large aspiration to place the whole of <b>software development</b> alongside the <b>established branches</b> as one more branch of engineering is <b>misconceived</b>. ... [O]ur aspiration should be to <b>develop specialized branches of software</b> engineering, each meriting its own place alongside the specialized established branches.",
    "title": "Problems, Methods and Specialization",
    "year": 1994,
    "number": 6,
    "page": 57,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.329402",
    "selected": false,
    "authors": [
      {
        "name": "Michael Jackson",
        "link": ""
      }
    ],
    "authorsList": "Michael Jackson",
    "citation": "Michael Jackson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.329402\">Problems, Methods and Specialization</a>, IEEE Software 1994, no. 6, p. 57",
    "searchText": ""
  },
  {
    "quote": "<b>Systematic software reuse</b> is a paradigm shift in software engineering from building single systems to <b>building families of related systems</b>. The goal of software reuse research is to discover systematic procedures for engineering new systems from existing assets. Implementing systematic reuse is risky. Not doing it is also risky.",
    "title": "Success Factors of Systematic Reuse",
    "year": 1994,
    "number": 5,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.311045",
    "selected": false,
    "authors": [
      {
        "name": "William B. Frakes",
        "link": ""
      },
      {
        "name": "Sadahiro Isoda",
        "link": ""
      }
    ],
    "authorsList": "William B. Frakes, Sadahiro Isoda",
    "citation": "William B. Frakes, Sadahiro Isoda, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.311045\">Success Factors of Systematic Reuse</a>, IEEE Software 1994, no. 5, p. 14",
    "searchText": ""
  },
  {
    "quote": "Reuse is <b>not just a technical issue</b>. Hewlett-Packard studied why people sometimes <b>resist reuse</b> and which organizational models appear to encourage reuse more than others. ... successful reuse programs must be <b>integrated within the culture</b> of a company's existing organizational structure. One crucial organizational factor is the <b>relationship between producers and consumers</b> of reuse components and services.",
    "title": "Organizational Factors and Reuse",
    "year": 1994,
    "number": 5,
    "page": 31,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.311049",
    "selected": false,
    "authors": [
      {
        "name": "Danielle Fafchamps",
        "link": ""
      }
    ],
    "authorsList": "Danielle Fafchamps",
    "citation": "Danielle Fafchamps, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.311049\">Organizational Factors and Reuse</a>, IEEE Software 1994, no. 5, p. 31",
    "searchText": ""
  },
  {
    "quote": "Used together, the two relatively young concepts of <b>measurement and process improvement are more than the sum of their parts</b>. Careful measurement helps you draw an objective process model. Thoughtful application of improvement techniques improves your ability to measure quality. Leveraging one with the other can take your organization to new heights.",
    "title": "Measurement Based Process Improvement",
    "year": 1994,
    "number": 4,
    "page": 8,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.300077",
    "selected": false,
    "authors": [
      {
        "name": "Shari Lawrence Pfleeger",
        "link": ""
      },
      {
        "name": "Hans Dieter Rombach",
        "link": ""
      }
    ],
    "authorsList": "Shari Lawrence Pfleeger, Hans Dieter Rombach",
    "citation": "Shari Lawrence Pfleeger, Hans Dieter Rombach, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.300077\">Measurement Based Process Improvement</a>, IEEE Software 1994, no. 4, p. 8",
    "searchText": ""
  },
  {
    "quote": "There are two approaches to process improvement. The <b>top-down approach</b> compares an organization's process with some generally accepted standard process. ... The <b>bottom-up approach</b> assumes that process change must be driven by an organization's goals, characteristics, product attributes, and experiences.",
    "title": "Top-Down vs. Bottom-Up Process Improvement",
    "year": 1994,
    "number": 4,
    "page": 12,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.300121",
    "selected": false,
    "authors": [
      {
        "name": "Frank McGarry",
        "link": ""
      },
      {
        "name": "Martyn Thomas",
        "link": ""
      }
    ],
    "authorsList": "Frank McGarry, Martyn Thomas",
    "citation": "Frank McGarry, Martyn Thomas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.300121\">Top-Down vs. Bottom-Up Process Improvement</a>, IEEE Software 1994, no. 4, p. 12",
    "searchText": ""
  },
  {
    "quote": "In their efforts to determine how technology affects the software development process, <b>researchers often overlook organizational and social issues</b>.",
    "title": "People, Organizations, and Process Improvement",
    "year": 1994,
    "number": 4,
    "page": 36,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.300082",
    "selected": false,
    "authors": [
      {
        "name": "Nancy A. Staudenmayer",
        "link": ""
      },
      {
        "name": "Dewayne E. Perry",
        "link": ""
      },
      {
        "name": "Lawrence G. Votta",
        "link": ""
      }
    ],
    "authorsList": "Nancy A. Staudenmayer, Dewayne E. Perry, Lawrence G. Votta",
    "citation": "Nancy A. Staudenmayer, Dewayne E. Perry, Lawrence G. Votta, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.300082\">People, Organizations, and Process Improvement</a>, IEEE Software 1994, no. 4, p. 36",
    "searchText": ""
  },
  {
    "quote": "For 25 years, software researchers have proposed improving software development and maintenance with new practices whose <b>effectiveness is rarely, if ever, backed up by hard evidence</b>. We suggest several ways to address the problem, and we challenge the community to <b>invest in being more scientific</b>.",
    "title": "Science and Substance: A Challenge to Software Engineers",
    "year": 1994,
    "number": 4,
    "page": 86,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.300094",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      },
      {
        "name": "Shari Lawrence Pfleeger",
        "link": ""
      },
      {
        "name": "Norman Fenton",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass, Shari Lawrence Pfleeger, Norman Fenton",
    "citation": "Robert L. Glass, Shari Lawrence Pfleeger, Norman Fenton, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.300094\">Science and Substance: A Challenge to Software Engineers</a>, IEEE Software 1994, no. 4, p. 86",
    "searchText": ""
  },
  {
    "quote": "<b>Database technology</b> is exploding, as the hierarchical and relational models give way to <b>object-oriented, distributed heterogeneous</b>, and other kinds of specialized models. Designers, programmers, and users need new tools.",
    "title": "Confronting Database Complexities",
    "year": 1994,
    "number": 3,
    "page": 6,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.281712",
    "selected": false,
    "authors": [
      {
        "name": "Clement Yu",
        "link": ""
      },
      {
        "name": "Weiyi Meng",
        "link": ""
      }
    ],
    "authorsList": "Clement Yu, Weiyi Meng",
    "citation": "Clement Yu, Weiyi Meng, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.281712\">Confronting Database Complexities</a>, IEEE Software 1994, no. 3, p. 6",
    "searchText": ""
  },
  {
    "quote": "Retrieval speed and precision ultimately determine the success of any database system. ... Much work remains to help users retrieve information with ease and efficiency from a heterogeneous environment in which <b>relational</b>, <b>object-oriented</b>, <b>textual</b>, and <b>pictorial databases</b> coexist.",
    "title": "Progress in Database Search Strategies",
    "year": 1994,
    "number": 3,
    "page": 11,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.281713",
    "selected": false,
    "authors": [
      {
        "name": "Weiyi Meng",
        "link": ""
      },
      {
        "name": "Clement Yu",
        "link": ""
      }
    ],
    "authorsList": "Weiyi Meng, Clement Yu",
    "citation": "Weiyi Meng, Clement Yu, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.281713\">Progress in Database Search Strategies</a>, IEEE Software 1994, no. 3, p. 11",
    "searchText": ""
  },
  {
    "quote": "Developers have plenty of reasons to avoid investing in requirements engineering: It is <b>next to impossible to capture user needs</b> completely, and needs are constantly evolving. The gap between software research and practice is no more evident than in the field of requirements engineering. Requirement engineering has a fairly <b>narrow goal</b> - <b>determine a need and define the external behavior of a solution</b> - but the range of research into requirements is enormous.",
    "title": "Guest Editors' Introduction: Giving Voice to Requirements Engineering",
    "year": 1994,
    "number": 2,
    "page": 12,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.268949",
    "selected": false,
    "authors": [
      {
        "name": "Pei Hsia",
        "link": ""
      },
      {
        "name": "Alan M. Davis",
        "link": ""
      }
    ],
    "authorsList": "Pei Hsia, Alan M. Davis",
    "citation": "Pei Hsia, Alan M. Davis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.268949\">Guest Editors' Introduction: Giving Voice to Requirements Engineering</a>, IEEE Software 1994, no. 2, p. 12",
    "searchText": ""
  },
  {
    "quote": "The author examines two widely held beliefs: requirements describe a <b>system's 'what, not its 'how'</b>. Requirements must be <b>represented as abstractions</b>.",
    "title": "Challenging Universal Truths of Requirements Engineering",
    "year": 1994,
    "number": 2,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.268951",
    "selected": false,
    "authors": [
      {
        "name": "Jawed Siddiqi",
        "link": ""
      }
    ],
    "authorsList": "Jawed Siddiqi",
    "citation": "Jawed Siddiqi, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.268951\">Challenging Universal Truths of Requirements Engineering</a>, IEEE Software 1994, no. 2, p. 18",
    "searchText": ""
  },
  {
    "quote": "<b>Scenarios</b> offer promise as a way to tame requirements analysis, but progress has been impeded by the lack of a systematic way to analyze, generate, and validate them.",
    "title": "Formal Approach to Scenario Analysis",
    "year": 1994,
    "number": 2,
    "page": 33,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.268953",
    "selected": false,
    "authors": [
      {
        "name": "Jayarajan Samuel",
        "link": ""
      },
      {
        "name": "Pei Hsia",
        "link": ""
      },
      {
        "name": "David Kung",
        "link": ""
      },
      {
        "name": "Jerry Gao",
        "link": ""
      },
      {
        "name": "Cris Chen",
        "link": ""
      },
      {
        "name": "Yasafumi Toyoshima",
        "link": ""
      }
    ],
    "authorsList": "Jayarajan Samuel, Pei Hsia, David Kung, Jerry Gao, Cris Chen, Yasafumi Toyoshima",
    "citation": "Jayarajan Samuel, Pei Hsia, David Kung, Jerry Gao, Cris Chen, Yasafumi Toyoshima, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.268953\">Formal Approach to Scenario Analysis</a>, IEEE Software 1994, no. 2, p. 33",
    "searchText": ""
  },
  {
    "quote": "<b>Safety-critical software</b> must perform as desired and <b>should never fail</b>. The need for dependability stems from the fact that the <b>consequences of failure are extremely high</b>, usually a <b>threat to human life</b>. To write such systems, most now agree that we must adopt rigorous techniques, rooted in mathematics.",
    "title": "Guest Editors' Introduction: Critical Task of Writing Dependable Software",
    "year": 1994,
    "number": 1,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.251196",
    "selected": false,
    "authors": [
      {
        "name": "Bev Littlewood",
        "link": ""
      },
      {
        "name": "John Knight",
        "link": ""
      }
    ],
    "authorsList": "Bev Littlewood, John Knight",
    "citation": "Bev Littlewood, John Knight, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.251196\">Guest Editors' Introduction: Critical Task of Writing Dependable Software</a>, IEEE Software 1994, no. 1, p. 16",
    "searchText": ""
  },
  {
    "quote": "Although there are indisputable benefits to society from the <b>introduction of computers into everyday life</b>, some applications are inherently <b>risky</b>.",
    "title": "Experience with Formal Methods in Critical Systems",
    "year": 1994,
    "number": 1,
    "page": 21,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.251198",
    "selected": false,
    "authors": [
      {
        "name": "Dan Craigen",
        "link": ""
      },
      {
        "name": "Ted Ralston",
        "link": ""
      },
      {
        "name": "Susan Gerhart",
        "link": ""
      }
    ],
    "authorsList": "Dan Craigen, Ted Ralston, Susan Gerhart",
    "citation": "Dan Craigen, Ted Ralston, Susan Gerhart, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.251198\">Experience with Formal Methods in Critical Systems</a>, IEEE Software 1994, no. 1, p. 21",
    "searchText": ""
  },
  {
    "quote": "Darlington is a <b>four-reactor nuclear plant</b> east of Toronto. ... Each reactor has two independent shutdown systems: SDS1 drops neutron-absorbing rods into the core, while SDS2 injects liquid poison into the moderator. Both are safety-critical and require high levels of confidence. In 1982, Ontario Hydro, with the concurrence of the Atomic Energy Control Board of Canada (AECB), had decided to <b>fully implement the shutdown systems' decision-making logic on computers</b>. This was to be the first Canadian instance of such a system, so there were questions about what procedures to follow, both in developing and licensing the system.",
    "title": "Case Study: Darlington Nuclear Generating Station",
    "year": 1994,
    "number": 1,
    "page": 28,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.251201",
    "selected": false,
    "authors": [
      {
        "name": "Dan Craigen",
        "link": ""
      },
      {
        "name": "Susan Gerhart",
        "link": ""
      },
      {
        "name": "Ted Ralston",
        "link": ""
      }
    ],
    "authorsList": "Dan Craigen, Susan Gerhart, Ted Ralston",
    "citation": "Dan Craigen, Susan Gerhart, Ted Ralston, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.251201\">Case Study: Darlington Nuclear Generating Station</a>, IEEE Software 1994, no. 1, p. 28",
    "searchText": ""
  },
  {
    "quote": "<b>Europe</b> has <b>spent billions</b> in public and private funds on developing its <b>information-technology industry</b>. This effort has certainly made the EC a stronger global competitor; but the question remains: <b>Is it strong enough</b>?",
    "title": "Guest Editors' Introduction: Advancing Europe's Fortunes",
    "year": 1993,
    "number": 6,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1993.10067",
    "selected": false,
    "authors": [
      {
        "name": "Luqi null",
        "link": ""
      },
      {
        "name": "Annie Kuntzmann-Combelles",
        "link": ""
      }
    ],
    "authorsList": "Luqi null, Annie Kuntzmann-Combelles",
    "citation": "Luqi null, Annie Kuntzmann-Combelles, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1993.10067\">Guest Editors' Introduction: Advancing Europe's Fortunes</a>, IEEE Software 1993, no. 6, p. 14",
    "searchText": ""
  },
  {
    "quote": "The twentieth century was a <b>time of ignorance</b>, but also the <b>dawn of golden age of practice</b>.",
    "title": "The Software-Research Crisis",
    "year": 1994,
    "number": 6,
    "page": 42,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.329400",
    "selected": false,
    "authors": [
      {
        "name": "Robert L. Glass",
        "link": ""
      }
    ],
    "authorsList": "Robert L. Glass",
    "citation": "Robert L. Glass, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.329400\">The Software-Research Crisis</a>, IEEE Software 1994, no. 6, p. 42",
    "searchText": ""
  },
  {
    "quote": "A big problem in technology transfer is that <b>no one believes in the product</b>. By using a system of <b>hypotheses and experiments</b>, technology providers can begin to offer <b>real benefits instead of hype</b>.",
    "title": "Selling Believable Technology",
    "year": 1993,
    "number": 6,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.241961",
    "selected": false,
    "authors": [
      {
        "name": "Heinz Saria",
        "link": ""
      },
      {
        "name": "Christophe Debou",
        "link": ""
      },
      {
        "name": "Norbert Fuchs",
        "link": ""
      }
    ],
    "authorsList": "Heinz Saria, Christophe Debou, Norbert Fuchs",
    "citation": "Heinz Saria, Christophe Debou, Norbert Fuchs, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.241961\">Selling Believable Technology</a>, IEEE Software 1993, no. 6, p. 22",
    "searchText": ""
  },
  {
    "quote": "For data in which there is a <b>known relationship among variables</b>, the dynamic queries interface is useful for training and <b>education by exploration</b>. For situations in which there are understood correlations, but their complexity makes it difficult for nonexperts to follow, dynamic queries can allow a wider range of people to explore the interactions (among health and demographic variables, a table of elements, and economic or market data, for example).",
    "title": "Dynamic Queries for Visual Information Seeking",
    "year": 1994,
    "number": 6,
    "page": 70,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.329404",
    "selected": false,
    "authors": [
      {
        "name": "Ben Schneiderman",
        "link": ""
      }
    ],
    "authorsList": "Ben Schneiderman",
    "citation": "Ben Schneiderman, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.329404\">Dynamic Queries for Visual Information Seeking</a>, IEEE Software 1994, no. 6, p. 70",
    "searchText": ""
  },
  {
    "quote": "We are so <b>used to the notion</b> that <b>quality must take a back seat to productivity</b> that we continue to put up with practices that we know will produce software of lesser quality.",
    "title": "Learning to Put Lessons Into Practice",
    "year": 1993,
    "number": 5,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1993.10046",
    "selected": false,
    "authors": [
      {
        "name": "Pei Hsia",
        "link": ""
      }
    ],
    "authorsList": "Pei Hsia",
    "citation": "Pei Hsia, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1993.10046\">Learning to Put Lessons Into Practice</a>, IEEE Software 1993, no. 5, p. 14",
    "searchText": ""
  },
  {
    "quote": "<b>Following good software-engineering practices</b> is almost <b>a moral issue</b>; we need a belief system.",
    "title": "Learning to Put Lessons Into Practice",
    "year": 1993,
    "number": 5,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1993.10046",
    "selected": false,
    "authors": [
      {
        "name": "Pei Hsia",
        "link": ""
      }
    ],
    "authorsList": "Pei Hsia",
    "citation": "Pei Hsia, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1993.10046\">Learning to Put Lessons Into Practice</a>, IEEE Software 1993, no. 5, p. 14",
    "searchText": ""
  },
  {
    "quote": "Most software engineering research has been following a <b>research-then-transer</b> methodology, with mixed results ... [In] the <b>industry-as-laboratory</b> approach ... researchers identify problems through <b>close involvement with industrial projects</b> and create and evaluate solutions in an almost <b>indivisible research activity</b>. This approach emphasizes what people actually do or can do in practice, rather than what is possible in principle.",
    "title": "Software-Engineering Research Revisited",
    "year": 1993,
    "number": 5,
    "page": 19,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.232392",
    "selected": false,
    "authors": [
      {
        "name": "Colin Potts",
        "link": ""
      }
    ],
    "authorsList": "Colin Potts",
    "citation": "Colin Potts, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.232392\">Software-Engineering Research Revisited</a>, IEEE Software 1993, no. 5, p. 19",
    "searchText": ""
  },
  {
    "quote": "<b>[S]oftware engineering</b> most resembles a <b>dynamically overloaded queue or rush-hour traffic jam</b>.",
    "title": "The Software Rush Hour",
    "year": 1993,
    "number": 5,
    "page": 29,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.232394",
    "selected": false,
    "authors": [
      {
        "name": "Neil C. Olsen",
        "link": ""
      }
    ],
    "authorsList": "Neil C. Olsen",
    "citation": "Neil C. Olsen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.232394\">The Software Rush Hour</a>, IEEE Software 1993, no. 5, p. 29",
    "searchText": ""
  },
  {
    "quote": "[F]ive problems ... can contribute to a software project's failure ... : <b>inadequate system engineering</b> during the proposal and during front-end development; <b>inadequate tracing</b>, tracking, and management of system and software requirements; <b>improper sizing</b> of the target hardware; selection of design, production, and integration and test <b>methodologies that are inappropriate</b> to a large software development; and <b>failure to provide a metrics program</b> that would let managers track the progress of software production and test.",
    "title": "Five Ways to Destroy a Development Project",
    "year": 1993,
    "number": 5,
    "page": 55,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.232400",
    "selected": false,
    "authors": [
      {
        "name": "David R. Lindstrom",
        "link": ""
      }
    ],
    "authorsList": "David R. Lindstrom",
    "citation": "David R. Lindstrom, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.232400\">Five Ways to Destroy a Development Project</a>, IEEE Software 1993, no. 5, p. 55",
    "searchText": ""
  },
  {
    "quote": "Competitive pressure is pushing and pulling the field to a new level of industrialization. Developers know they <b>must stop improvising</b> and instill some discipline in to their process",
    "title": "The Move to Mature Processes",
    "year": 1993,
    "number": 4,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1993.10038",
    "selected": false,
    "authors": [
      {
        "name": "Robert Lai",
        "link": ""
      }
    ],
    "authorsList": "Robert Lai",
    "citation": "Robert Lai, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1993.10038\">The Move to Mature Processes</a>, IEEE Software 1993, no. 4, p. 14",
    "searchText": ""
  },
  {
    "quote": "The <b>CMM [capability maturity model]</b> was designed to help developers select <b>process-improvement strategies</b> by determining their current process maturity and identifying the issues most critical to improving their software quality and process. ... The current version of the CMM is the result of the feedback from that workshop and ongoing feedback from the software  community.",
    "title": "Capability Maturity Model, Version 1.1",
    "year": 1993,
    "number": 4,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.219617",
    "selected": false,
    "authors": [
      {
        "name": "Mark C. Paulk",
        "link": ""
      },
      {
        "name": "Charles V. Weber",
        "link": ""
      },
      {
        "name": "Mary Beth Chrissis",
        "link": ""
      },
      {
        "name": "Bill Curtis",
        "link": ""
      }
    ],
    "authorsList": "Mark C. Paulk, Charles V. Weber, Mary Beth Chrissis, Bill Curtis",
    "citation": "Mark C. Paulk, Charles V. Weber, Mary Beth Chrissis, Bill Curtis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.219617\">Capability Maturity Model, Version 1.1</a>, IEEE Software 1993, no. 4, p. 18",
    "searchText": ""
  },
  {
    "quote": "One idea that holds great promise in increasing software productivity is the <b>automatic synthesis of software</b> from higher level specifications and reusable components.",
    "title": "Practical Software Synthesis",
    "year": 1993,
    "number": 3,
    "page": 6,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1993.10027",
    "selected": false,
    "authors": [
      {
        "name": "Tom Cain",
        "link": ""
      },
      {
        "name": "Elaine Kant",
        "link": ""
      },
      {
        "name": "Dorothy Setliff",
        "link": ""
      }
    ],
    "authorsList": "Tom Cain, Elaine Kant, Dorothy Setliff",
    "citation": "Tom Cain, Elaine Kant, Dorothy Setliff, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1993.10027\">Practical Software Synthesis</a>, IEEE Software 1993, no. 3, p. 6",
    "searchText": ""
  },
  {
    "quote": "[A] <b>model-based</b>,  automatic software synthesis environment ... automatically generates a macro-dataflow computation from declarative models. Central to the approach is the Multigraph Architecture, which provides the framework for model-based synthesis in real-time, parallel-computing environments.",
    "title": "Model-Based Software Synthesis",
    "year": 1993,
    "number": 3,
    "page": 42,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.210602",
    "selected": false,
    "authors": [
      {
        "name": "Ted Bapty",
        "link": ""
      },
      {
        "name": "Ben Abbott",
        "link": ""
      },
      {
        "name": "Gabor Karsai",
        "link": ""
      },
      {
        "name": "Janos Sztipanovits",
        "link": ""
      },
      {
        "name": "Csaba Biegl",
        "link": ""
      }
    ],
    "authorsList": "Ted Bapty, Ben Abbott, Gabor Karsai, Janos Sztipanovits, Csaba Biegl",
    "citation": "Ted Bapty, Ben Abbott, Gabor Karsai, Janos Sztipanovits, Csaba Biegl, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.210602\">Model-Based Software Synthesis</a>, IEEE Software 1993, no. 3, p. 42",
    "searchText": ""
  },
  {
    "quote": "An <b>operational profile</b> describes how users employ a system ... The operational profile is a <b>quantitative characterization</b> of <b>how a system will be used</b> that shows how to increase productivity and reliability and speed development by allocating development resources to function on the basis of use. Using an operational profile to <b>guide testing</b> ensures ... the most-used operations will have received the most testing ...",
    "title": "Operational Profiles in Software-Reliability Engineering",
    "year": 1993,
    "number": 2,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.199724",
    "selected": false,
    "authors": [
      {
        "name": "John D. Musa",
        "link": ""
      }
    ],
    "authorsList": "John D. Musa",
    "citation": "John D. Musa, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.199724\">Operational Profiles in Software-Reliability Engineering</a>, IEEE Software 1993, no. 2, p. 14",
    "searchText": ""
  },
  {
    "quote": "[D]etermining the consequences of a stop-test decision ... combines software reliability engineering and economic analysis ... The approach ... <b>quantify the economic consequences</b> associated with <b>terminating testing</b> ...",
    "title": "Determining the Cost of a Stop-Test Decision",
    "year": 1993,
    "number": 2,
    "page": 33,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.199726",
    "selected": false,
    "authors": [
      {
        "name": "Willa Ehrlich",
        "link": ""
      },
      {
        "name": "Jar Wu",
        "link": ""
      },
      {
        "name": "Bala Prasanna",
        "link": ""
      },
      {
        "name": "John Stampfel",
        "link": ""
      }
    ],
    "authorsList": "Willa Ehrlich, Jar Wu, Bala Prasanna, John Stampfel",
    "citation": "Willa Ehrlich, Jar Wu, Bala Prasanna, John Stampfel, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.199726\">Determining the Cost of a Stop-Test Decision</a>, IEEE Software 1993, no. 2, p. 33",
    "searchText": ""
  },
  {
    "quote": "<b>The Shlaer-Mellor object-oriented analysis method</b> provides a structured means of identifying objects within a system by analyzing abstract data types and uses these objects as a basis for building three formal models: <b>information</b>, <b>state</b>, and <b>process</b>.",
    "title": "Using the Shlaer-Mellor Object-Oriented Analysis Method",
    "year": 1993,
    "number": 2,
    "page": 43,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.199729",
    "selected": false,
    "authors": [
      {
        "name": "Mark A. Roberts",
        "link": ""
      },
      {
        "name": "Jerry R. Klatt",
        "link": ""
      },
      {
        "name": "Mohamed E. Fayad",
        "link": ""
      },
      {
        "name": "Louis J. Hawn",
        "link": ""
      }
    ],
    "authorsList": "Mark A. Roberts, Jerry R. Klatt, Mohamed E. Fayad, Louis J. Hawn",
    "citation": "Mark A. Roberts, Jerry R. Klatt, Mohamed E. Fayad, Louis J. Hawn, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.199729\">Using the Shlaer-Mellor Object-Oriented Analysis Method</a>, IEEE Software 1993, no. 2, p. 43",
    "searchText": ""
  },
  {
    "quote": "Will <b>object orientation</b> be the dominant paradigm in the near future? If it is to be widely used, it must overcome many legacies, especially the fact that most developers do not <b>think in terms of objects</b>.",
    "title": "What it Takes to Make OO Work",
    "year": 1993,
    "number": 1,
    "page": 20,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1993.10005",
    "selected": false,
    "authors": [
      {
        "name": "Annie Kuntzmann-Combelles",
        "link": ""
      },
      {
        "name": "Wojtek Kozaczynski",
        "link": ""
      }
    ],
    "authorsList": "Annie Kuntzmann-Combelles, Wojtek Kozaczynski",
    "citation": "Annie Kuntzmann-Combelles, Wojtek Kozaczynski, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1993.10005\">What it Takes to Make OO Work</a>, IEEE Software 1993, no. 1, p. 20",
    "searchText": ""
  },
  {
    "quote": "The wide <b>acceptance of the object-oriented approach</b> is unprecedented in computer technoLogy. Judging from the the experience the last 25 year, developers who adopt this platform stand to  reap generous rewards.",
    "title": "Is Object Technology Software's Industrial Platform?",
    "year": 1993,
    "number": 1,
    "page": 24,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.207218",
    "selected": false,
    "authors": [
      {
        "name": "Ivar Jacobson",
        "link": "https://en.wikipedia.org/wiki/Ivar_Jacobson"
      }
    ],
    "authorsList": "Ivar Jacobson",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Ivar_Jacobson\">Ivar Jacobson</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.207218\">Is Object Technology Software's Industrial Platform?</a>, IEEE Software 1993, no. 1, p. 24",
    "searchText": ""
  },
  {
    "quote": "For better or worse, the <b>real language winner today is C++</b>.",
    "title": "Is Object Technology Software's Industrial Platform?",
    "year": 1993,
    "number": 1,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.207218",
    "selected": false,
    "authors": [
      {
        "name": "Ivar Jacobson",
        "link": "https://en.wikipedia.org/wiki/Ivar_Jacobson"
      }
    ],
    "authorsList": "Ivar Jacobson",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Ivar_Jacobson\">Ivar Jacobson</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.207218\">Is Object Technology Software's Industrial Platform?</a>, IEEE Software 1993, no. 1, p. 26",
    "searchText": ""
  },
  {
    "quote": "<b>Object orientation</b> facilitates change but makes programs harder for maintainers to understand. ... The appearance and organization of OO [object-oriented] code <b>may startle may programmers</b>.",
    "title": "Maintaining Object-Oriented Software",
    "year": 1993,
    "number": 1,
    "page": 75,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.207232",
    "selected": false,
    "authors": [
      {
        "name": "Paul Matthews",
        "link": ""
      },
      {
        "name": "Norman Wilde",
        "link": ""
      },
      {
        "name": "Ross Huitt",
        "link": ""
      }
    ],
    "authorsList": "Paul Matthews, Norman Wilde, Ross Huitt",
    "citation": "Paul Matthews, Norman Wilde, Ross Huitt, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.207232\">Maintaining Object-Oriented Software</a>, IEEE Software 1993, no. 1, p. 75",
    "searchText": ""
  },
  {
    "quote": "Much of a HyperNews interface can be designed without writing any code at all. With <b>direct manipulation</b>, a user can design a graphical user interface simply by <b>creating</b>, <b>moving</b>, and <b>resizing</b> objects on the screen. Experimentation with different interface styles is possible ...",
    "title": "Completing the Job Interface Design",
    "year": 1992,
    "number": 6,
    "page": 11,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.168854",
    "selected": false,
    "authors": [
      {
        "name": "Jim Rudolf",
        "link": ""
      },
      {
        "name": "Cathy Waite",
        "link": ""
      }
    ],
    "authorsList": "Jim Rudolf, Cathy Waite",
    "citation": "Jim Rudolf, Cathy Waite, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.168854\">Completing the Job Interface Design</a>, IEEE Software 1992, no. 6, p. 11",
    "searchText": ""
  },
  {
    "quote": "Fourteen <b>concurrent object-oriented languages</b> are compared in terms of how they deal with <b>communication</b>, <b>synchronization</b>, <b>process management</b>, <b>inheritance</b>, and <b>implementation trade-offs</b>.  ... The languages discussed are <b>Actors</b>, <b>Abd/1</b>, <b>Abd/R</b>, <b>Argus</b>, <b>COOL</b>, <b>Concurrent Smalltalk</b>, <b>Eiffel</b>, <b>Emerald</b>, <b>ES-Kit C++</b>, <b>Hybrid</b>, <b>Nexus</b>, <b>Parmacs</b>, <b>POOL-T</b>, and <b>Presto</b>.",
    "title": "Parallelism in Object-Oriented Languages: A Survey",
    "year": 1992,
    "number": 6,
    "page": 56,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.168859",
    "selected": false,
    "authors": [
      {
        "name": "Krishna Kavi",
        "link": ""
      },
      {
        "name": "Steve Hufnagel",
        "link": ""
      },
      {
        "name": "Barbara B. Wyatt",
        "link": ""
      }
    ],
    "authorsList": "Krishna Kavi, Steve Hufnagel, Barbara B. Wyatt",
    "citation": "Krishna Kavi, Steve Hufnagel, Barbara B. Wyatt, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.168859\">Parallelism in Object-Oriented Languages: A Survey</a>, IEEE Software 1992, no. 6, p. 56",
    "searchText": ""
  },
  {
    "quote": "[T]he Interaction Management Network (IMN) ... captures the essential structure of any interface from <b>task-oriented specification</b> to <b>object-oriented implementation</b> is presented. IMN is essentially a <b>task-oriented specification scheme</b> based on a semantic network.",
    "title": "Designing Maintainable, Reusable Interfaces",
    "year": 1992,
    "number": 6,
    "page": 24,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.168855",
    "selected": false,
    "authors": [
      {
        "name": "Raimund K. Ege",
        "link": ""
      },
      {
        "name": "Christian Stary",
        "link": ""
      }
    ],
    "authorsList": "Raimund K. Ege, Christian Stary",
    "citation": "Raimund K. Ege, Christian Stary, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.168855\">Designing Maintainable, Reusable Interfaces</a>, IEEE Software 1992, no. 6, p. 24",
    "searchText": ""
  },
  {
    "quote": "In the future, <b>most consumer products</b> will <b>rely on embedded real-time computers</b>. To produce more robust applications, development techniques must keep pace with ever-changing requirements.",
    "title": "Guest Editors' Introduction: Coming to Grips with Real-Time Realities",
    "year": 1992,
    "number": 5,
    "page": 12,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1992.10059",
    "selected": false,
    "authors": [
      {
        "name": "Kwei-Jay Lin",
        "link": ""
      },
      {
        "name": "Emmett J. Burke",
        "link": ""
      }
    ],
    "authorsList": "Kwei-Jay Lin, Emmett J. Burke",
    "citation": "Kwei-Jay Lin, Emmett J. Burke, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1992.10059\">Guest Editors' Introduction: Coming to Grips with Real-Time Realities</a>, IEEE Software 1992, no. 5, p. 12",
    "searchText": ""
  },
  {
    "quote": "[T]he problem of <b>ensuring timing correctness</b> in <b>dynamic real-time systems</b> has three aspects: <b>resource requirements</b>, <b>resource availability</b>, and <b>guarantees</b>.",
    "title": "Issues in Building Dynamic Real-Time Systems",
    "year": 1992,
    "number": 5,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.156893",
    "selected": false,
    "authors": [
      {
        "name": "Swaminathan Natarajan",
        "link": ""
      },
      {
        "name": "Wei Zhao",
        "link": ""
      }
    ],
    "authorsList": "Swaminathan Natarajan, Wei Zhao",
    "citation": "Swaminathan Natarajan, Wei Zhao, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.156893\">Issues in Building Dynamic Real-Time Systems</a>, IEEE Software 1992, no. 5, p. 16",
    "searchText": ""
  },
  {
    "quote": "Most developers either aren‘t familiar with <b>reliability models</b> or don‘t know bow to select and apply them. But the need for accurate predictions is acute, focusing attention on this comparatively young field. ",
    "title": "Guest Editors' Introduction: Steps to Practical Reliability Measurement",
    "year": 1992,
    "number": 4,
    "page": 10,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1992.10044",
    "selected": false,
    "authors": [
      {
        "name": "Pradip K. Srimani",
        "link": ""
      },
      {
        "name": "Yashwant K. Malaiya",
        "link": ""
      }
    ],
    "authorsList": "Pradip K. Srimani, Yashwant K. Malaiya",
    "citation": "Pradip K. Srimani, Yashwant K. Malaiya, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1992.10044\">Guest Editors' Introduction: Steps to Practical Reliability Measurement</a>, IEEE Software 1992, no. 4, p. 10",
    "searchText": ""
  },
  {
    "quote": "<b>Reliability</b> is a probability of <b>failure-free operation</b> for a specified time in a specified environment for a specified purpose.",
    "title": "Reliability Measurement: From Theory to Practice",
    "year": 1992,
    "number": 4,
    "page": 13,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.143095",
    "selected": false,
    "authors": [
      {
        "name": "Krishna M. Kavi",
        "link": ""
      },
      {
        "name": "Robert C. Tausworth",
        "link": ""
      },
      {
        "name": "William W. Everett",
        "link": ""
      },
      {
        "name": "Frederick T. Sheldon",
        "link": ""
      },
      {
        "name": "Ralph Brettschneider",
        "link": ""
      },
      {
        "name": "James T. Yu",
        "link": ""
      }
    ],
    "authorsList": "Krishna M. Kavi, Robert C. Tausworth, William W. Everett, Frederick T. Sheldon, Ralph Brettschneider, James T. Yu",
    "citation": "Krishna M. Kavi, Robert C. Tausworth, William W. Everett, Frederick T. Sheldon, Ralph Brettschneider, James T. Yu, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.143095\">Reliability Measurement: From Theory to Practice</a>, IEEE Software 1992, no. 4, p. 13",
    "searchText": ""
  },
  {
    "quote": "<b>Reliability</b> is the <b>statistical study of failures</b>, which occur because of some defect in the program. The failure is evident, but you don’t know what mistake is responsible or what you can do to make the failure disappear. <b>Reliability models</b> are supposed to tell you what <b>confidence</b> you can have in the <b>program’s correctness</b>. ",
    "title": "Are We Testing for True Reliability?",
    "year": 1992,
    "number": 4,
    "page": 21,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.143097",
    "selected": false,
    "authors": [
      {
        "name": "Dick Hamlet",
        "link": ""
      }
    ],
    "authorsList": "Dick Hamlet",
    "citation": "Dick Hamlet, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.143097\">Are We Testing for True Reliability?</a>, IEEE Software 1992, no. 4, p. 21",
    "searchText": ""
  },
  {
    "quote": "[T]hree separate but related functions comprise an <b>integrated reliability program</b>: <b>prediction</b>, <b>control</b>, and <b>assessment</b>.",
    "title": "Applying Reliability Models to the Space Shuttle",
    "year": 1992,
    "number": 4,
    "page": 28,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.143099",
    "selected": false,
    "authors": [
      {
        "name": "Ted W. Keller",
        "link": ""
      },
      {
        "name": "Norman F. Schneidewind",
        "link": ""
      }
    ],
    "authorsList": "Ted W. Keller, Norman F. Schneidewind",
    "citation": "Ted W. Keller, Norman F. Schneidewind, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.143099\">Applying Reliability Models to the Space Shuttle</a>, IEEE Software 1992, no. 4, p. 28",
    "searchText": ""
  },
  {
    "quote": "[S]ix categories of questions ... determine how well a tool does what it was intended to do. The questionnaire comprises 140 questions divided into the categories: <b>ease of use</b>, <b>power</b>, <b>robustness</b>, <b>functionality</b>, <b>ease of insertion</b>, and <b>quality of support</b>.",
    "title": "How to Assess Tools Efficiently and Quantitatively",
    "year": 1992,
    "number": 3,
    "page": 29,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.136163",
    "selected": false,
    "authors": [
      {
        "name": "Vicky Mosley",
        "link": ""
      }
    ],
    "authorsList": "Vicky Mosley",
    "citation": "Vicky Mosley, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.136163\">How to Assess Tools Efficiently and Quantitatively</a>, IEEE Software 1992, no. 3, p. 29",
    "searchText": ""
  },
  {
    "quote": "[O]rganizations buy integrated CASE tools only to <b>leave them on the shelf</b> because they misinterpret the learning curve and its effect on productivity.",
    "title": "How the Learning Curve Affects CASE Tool Adoption",
    "year": 1992,
    "number": 3,
    "page": 23,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.136161",
    "selected": false,
    "authors": [
      {
        "name": "Chris F. Kemerer",
        "link": ""
      }
    ],
    "authorsList": "Chris F. Kemerer",
    "citation": "Chris F. Kemerer, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.136161\">How the Learning Curve Affects CASE Tool Adoption</a>, IEEE Software 1992, no. 3, p. 23",
    "searchText": ""
  },
  {
    "quote": "The industry has made great strides in making <b>more development tools</b> available. It’s now time to find ways to consistently, objectively <b>evaluate</b> a tool’s <b>utility and appropriateness</b>.",
    "title": "Assessing the State of Tools Assessment",
    "year": 1992,
    "number": 3,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1992.10039",
    "selected": false,
    "authors": [
      {
        "name": "Elliot J. Chikofsky",
        "link": ""
      },
      {
        "name": "David E. Martin",
        "link": ""
      },
      {
        "name": "Hugh Chang",
        "link": ""
      }
    ],
    "authorsList": "Elliot J. Chikofsky, David E. Martin, Hugh Chang",
    "citation": "Elliot J. Chikofsky, David E. Martin, Hugh Chang, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1992.10039\">Assessing the State of Tools Assessment</a>, IEEE Software 1992, no. 3, p. 18",
    "searchText": ""
  },
  {
    "quote": "The focus of <b>CASE research and development</b> has shifted from making sure each tool works to making sure all tools can work together. Major vendors are striving to balance comprehensiveness and compatibility.",
    "title": "Guest Editors' Introduction: Working Together to Integrate CASE",
    "year": 1992,
    "number": 2,
    "page": 12,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1992.10026",
    "selected": false,
    "authors": [
      {
        "name": "Ronald J. Norman",
        "link": ""
      },
      {
        "name": "Minder Chen",
        "link": ""
      }
    ],
    "authorsList": "Ronald J. Norman, Minder Chen",
    "citation": "Ronald J. Norman, Minder Chen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1992.10026\">Guest Editors' Introduction: Working Together to Integrate CASE</a>, IEEE Software 1992, no. 2, p. 12",
    "searchText": ""
  },
  {
    "quote": "[T]he reference model permit <b>three forms of integration</b>: <b>data integration</b>, <b>control integration</b>, and <b>presentation integration</b>. ... The organizational framework divides systems development and management into <b>three activity levels</b>: <b>IS infrastructure planning and design</b> is undertaken at the enterprise level, <b>systems project management and decisions</b> are made at the project level, and <b>software-development processes</b> are carried out at the individual and team level. ",
    "title": "A Framework for Integrated CASE",
    "year": 1992,
    "number": 2,
    "page": 18,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.120597",
    "selected": false,
    "authors": [
      {
        "name": "Ronald J. Norman",
        "link": ""
      },
      {
        "name": "Minder Chen",
        "link": ""
      }
    ],
    "authorsList": "Ronald J. Norman, Minder Chen",
    "citation": "Ronald J. Norman, Minder Chen, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.120597\">A Framework for Integrated CASE</a>, IEEE Software 1992, no. 2, p. 18",
    "searchText": ""
  },
  {
    "quote": "[C]urrent work on <b>integrated project support environments (IPSEs)</b> is based on an inappropriate view of integration,  and ... IPSE developers should create semantically rich infrastructures or produce well-integrated tool sets rather than open repositories or infrastructures.",
    "title": "Learning From IPSE's Mistakes",
    "year": 1992,
    "number": 2,
    "page": 23,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.120598",
    "selected": false,
    "authors": [
      {
        "name": "John A. McDermid",
        "link": ""
      },
      {
        "name": "Alan W. Brown",
        "link": ""
      }
    ],
    "authorsList": "John A. McDermid, Alan W. Brown",
    "citation": "John A. McDermid, Alan W. Brown, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.120598\">Learning From IPSE's Mistakes</a>, IEEE Software 1992, no. 2, p. 23",
    "searchText": ""
  },
  {
    "quote": "The <b>software factory</b> concept ... symbolizes a desired paradigm shift from labor-intensive software production to a more <b>capital-intensive style</b> in which substantial <b>investments</b> can be made at an acceptable <b>risk level</b> ...",
    "title": "Software Factory Principles, Architecture, and Experiments",
    "year": 1992,
    "number": 2,
    "page": 36,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.120600",
    "selected": false,
    "authors": [
      {
        "name": "Christer Fernström",
        "link": ""
      },
      {
        "name": "Kjell-Håken Närfelt",
        "link": ""
      },
      {
        "name": "Lennart Ohlsson",
        "link": ""
      }
    ],
    "authorsList": "Christer Fernström, Kjell-Håken Närfelt, Lennart Ohlsson",
    "citation": "Christer Fernström, Kjell-Håken Närfelt, Lennart Ohlsson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.120600\">Software Factory Principles, Architecture, and Experiments</a>, IEEE Software 1992, no. 2, p. 36",
    "searchText": ""
  },
  {
    "quote": "<b>Tool integration</b> is not a property of a single tool, but of its relationships with other elements in the environment, chiefly other tools, a platform, and a process. Tool integration is about the extent to which tools agree. The subject of these agreements may include <b>data format</b>, <b>user-interface conventions</b>, use of <b>common functions</b> ...",
    "title": "Definitions of Tool Integration for Environments",
    "year": 1992,
    "number": 2,
    "page": 29,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.120599",
    "selected": false,
    "authors": [
      {
        "name": "Brian A. Nejmeh",
        "link": ""
      },
      {
        "name": "Ian Thomas",
        "link": ""
      }
    ],
    "authorsList": "Brian A. Nejmeh, Ian Thomas",
    "citation": "Brian A. Nejmeh, Ian Thomas, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.120599\">Definitions of Tool Integration for Environments</a>, IEEE Software 1992, no. 2, p. 29",
    "searchText": ""
  },
  {
    "quote": "HyperCASE integrates tools by combining a <b>hypertext-based user interface</b> with a common knowledge-based document repository.",
    "title": "A Hypertext Based Software-Engineering Environment",
    "year": 1992,
    "number": 2,
    "page": 62,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.120603",
    "selected": false,
    "authors": [
      {
        "name": "Karl Reed",
        "link": ""
      },
      {
        "name": "Jacob L. Cybulski",
        "link": ""
      }
    ],
    "authorsList": "Karl Reed, Jacob L. Cybulski",
    "citation": "Karl Reed, Jacob L. Cybulski, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.120603\">A Hypertext Based Software-Engineering Environment</a>, IEEE Software 1992, no. 2, p. 62",
    "searchText": ""
  },
  {
    "quote": "Some well-established software fields combining to forge the new discipline of <b>protocol engineering</b>, which seeks to ease the development of today's communication software.",
    "title": "Guest Editors' Introduction: The Rise of Protocol Engineering",
    "year": 1992,
    "number": 1,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1992.10000",
    "selected": false,
    "authors": [
      {
        "name": "Ming T. Liu",
        "link": ""
      },
      {
        "name": "Fuchun Joseph Lin",
        "link": ""
      }
    ],
    "authorsList": "Ming T. Liu, Fuchun Joseph Lin",
    "citation": "Ming T. Liu, Fuchun Joseph Lin, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1992.10000\">Guest Editors' Introduction: The Rise of Protocol Engineering</a>, IEEE Software 1992, no. 1, p. 14",
    "searchText": ""
  },
  {
    "quote": "New <b>formal methods</b> now exist to design and validate even complex protocols. These methods are mature enough to be used by everyone. ... A formal method is considered to be one that has the capability of rendering <b>correctness proofs</b>.",
    "title": "Protocol Design: Redefining the State of the Art",
    "year": 1992,
    "number": 1,
    "page": 17,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.108773",
    "selected": false,
    "authors": [
      {
        "name": "Gerard J. Holzman",
        "link": ""
      }
    ],
    "authorsList": "Gerard J. Holzman",
    "citation": "Gerard J. Holzman, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.108773\">Protocol Design: Redefining the State of the Art</a>, IEEE Software 1992, no. 1, p. 17",
    "searchText": ""
  },
  {
    "quote": "To succesfully validate a very large protocol, you need three  ingredients: <b>formal modeling</b>, decomposition and abstraction, and <b>reachability analysis</b>.",
    "title": "Protocol Validation for Large-Scale Applications",
    "year": 1992,
    "number": 1,
    "page": 23,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.108776",
    "selected": false,
    "authors": [
      {
        "name": "Ming T. Liu",
        "link": ""
      },
      {
        "name": "Fuchun Joseph Lin",
        "link": ""
      }
    ],
    "authorsList": "Ming T. Liu, Fuchun Joseph Lin",
    "citation": "Ming T. Liu, Fuchun Joseph Lin, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.108776\">Protocol Validation for Large-Scale Applications</a>, IEEE Software 1992, no. 1, p. 23",
    "searchText": ""
  },
  {
    "quote": "[A] <b>knowledge-based design support system</b>, called KDSS ... help[s] designers inexperienced in communication system design easily create advanced systems like <b>intelligent networks</b>, and large-scale distributed computing systems.",
    "title": "Using Artificial Intelligence in Communication System Design",
    "year": 1992,
    "number": 1,
    "page": 38,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.108779",
    "selected": false,
    "authors": [
      {
        "name": "Norio Shiratori",
        "link": ""
      },
      {
        "name": "Kenji Sugawara",
        "link": ""
      },
      {
        "name": "Kaoru Takahashi",
        "link": ""
      },
      {
        "name": "Tetsuo Kinoshita",
        "link": ""
      }
    ],
    "authorsList": "Norio Shiratori, Kenji Sugawara, Kaoru Takahashi, Tetsuo Kinoshita",
    "citation": "Norio Shiratori, Kenji Sugawara, Kaoru Takahashi, Tetsuo Kinoshita, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.108779\">Using Artificial Intelligence in Communication System Design</a>, IEEE Software 1992, no. 1, p. 38",
    "searchText": ""
  },
  {
    "quote": "Process-management systems often focus on details at the expense of the big picture. The Cosmos model makes long-term objectives explicit, so managers can have both views. [C]osmos ... combines the best of existing models by incorporating three perspectives: activity, communication, and infrastructure. Cosmos is designed to manage a large software system from beginning to end.",
    "title": "A Commonsense Management Model",
    "year": 1991,
    "number": 6,
    "page": 23,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.103574",
    "selected": false,
    "authors": [
      {
        "name": "Raymond T. Yeh",
        "link": ""
      },
      {
        "name": "David A. Naumann",
        "link": ""
      },
      {
        "name": "John T. LeBaron",
        "link": ""
      },
      {
        "name": "George E. Sumrall",
        "link": ""
      },
      {
        "name": "William S. Gilmore",
        "link": ""
      },
      {
        "name": "Roland T. Mittermeir",
        "link": ""
      },
      {
        "name": "Reinhard A. Schlemmer",
        "link": ""
      }
    ],
    "authorsList": "Raymond T. Yeh, David A. Naumann, John T. LeBaron, George E. Sumrall, William S. Gilmore, Roland T. Mittermeir, Reinhard A. Schlemmer",
    "citation": "Raymond T. Yeh, David A. Naumann, John T. LeBaron, George E. Sumrall, William S. Gilmore, Roland T. Mittermeir, Reinhard A. Schlemmer, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.103574\">A Commonsense Management Model</a>, IEEE Software 1991, no. 6, p. 23",
    "searchText": ""
  },
  {
    "quote": "With advances in <b>high-level parallel programming</b>, you can apply known techniques to computer-vision applications, rather than use special computer vision language.",
    "title": "Parallel Programming for Computer Vision",
    "year": 1991,
    "number": 6,
    "page": 51,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.103577",
    "selected": false,
    "authors": [
      {
        "name": "Anthony P. Reeves",
        "link": ""
      }
    ],
    "authorsList": "Anthony P. Reeves",
    "citation": "Anthony P. Reeves, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.103577\">Parallel Programming for Computer Vision</a>, IEEE Software 1991, no. 6, p. 51",
    "searchText": ""
  },
  {
    "quote": "New computers are supplying the <b>massive power</b> that <b>vision applications</b> require. How to program this hardware efficiently and naturally is the challenge facing the <b>imaging community</b>.",
    "title": "Guest Editors' Introduction: Languages and Environments for Vision Applications",
    "year": 1991,
    "number": 6,
    "page": 34,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1991.10062",
    "selected": false,
    "authors": [
      {
        "name": "Virginio Cantoni",
        "link": ""
      },
      {
        "name": "Stefano Levialdi",
        "link": ""
      }
    ],
    "authorsList": "Virginio Cantoni, Stefano Levialdi",
    "citation": "Virginio Cantoni, Stefano Levialdi, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1991.10062\">Guest Editors' Introduction: Languages and Environments for Vision Applications</a>, IEEE Software 1991, no. 6, p. 34",
    "searchText": ""
  },
  {
    "quote": "In a nutshel <b>performance analysis</b> is the measuring, modeling, and tuning of software's time, space, efficiency, and accuracy.",
    "title": "Guest Editors' Introduction: Navigating Complexity to Achieve High Performance",
    "year": 1991,
    "number": 5,
    "page": 12,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1991.10056",
    "selected": false,
    "authors": [
      {
        "name": "Kathleen Nichols",
        "link": ""
      },
      {
        "name": "Paul W. Oman",
        "link": ""
      }
    ],
    "authorsList": "Kathleen Nichols, Paul W. Oman",
    "citation": "Kathleen Nichols, Paul W. Oman, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1991.10056\">Guest Editors' Introduction: Navigating Complexity to Achieve High Performance</a>, IEEE Software 1991, no. 5, p. 12",
    "searchText": ""
  },
  {
    "quote": "In 1987 and 1990, the Software Engineering Institute conducted process assessments of the Software Engineering Division (SED) of Hughes Aircraft in Fullerton, CA.",
    "title": "Software Process Improvement at Hughes Aircraft",
    "year": 1991,
    "number": 4,
    "page": 11,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.300031",
    "selected": false,
    "authors": [
      {
        "name": "Watts S. Humphrey",
        "link": ""
      },
      {
        "name": "Ronald R. Willis",
        "link": ""
      },
      {
        "name": "Terry R. Snyder",
        "link": ""
      }
    ],
    "authorsList": "Watts S. Humphrey, Ronald R. Willis, Terry R. Snyder",
    "citation": "Watts S. Humphrey, Ronald R. Willis, Terry R. Snyder, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.300031\">Software Process Improvement at Hughes Aircraft</a>, IEEE Software 1991, no. 4, p. 11",
    "searchText": ""
  },
  {
    "quote": "The methods used by the Software Engineering Institute (SEI's) <b>Software Capability Evaluation program (SCE)</b> ... is so <b>seriously and fundamentally flawed</b>  that it should be abandoned rather than modified or updated. ",
    "title": "A Critical Look at Software Capability Evaluations",
    "year": 1991,
    "number": 4,
    "page": 25,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.300034",
    "selected": false,
    "authors": [
      {
        "name": "Clement McGowan",
        "link": ""
      },
      {
        "name": "Terry B. Bollinger",
        "link": ""
      }
    ],
    "authorsList": "Clement McGowan, Terry B. Bollinger",
    "citation": "Clement McGowan, Terry B. Bollinger, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.300034\">A Critical Look at Software Capability Evaluations</a>, IEEE Software 1991, no. 4, p. 25",
    "searchText": ""
  },
  {
    "quote": "<b>[T]he article</b> by T. Bollinger and C. McGowan, entitled 'A critical look at software capability evaluation', see ibid., p.25-41 (1991), <b>contains a serious flaw</b>. ... common misconceptions about the SEI ... fall into six categories: SCE's purpose ...; how the SCE method works in practice; the statistical methods used to determine levels; the ongoing process of refining the method; the maturity framework; and the coverage of technology issues.",
    "title": "Comments on 'A Critical Look'",
    "year": 1991,
    "number": 4,
    "page": 42,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.300033",
    "selected": false,
    "authors": [
      {
        "name": "Watts S. Humphrey",
        "link": ""
      },
      {
        "name": "Bill Curtis",
        "link": ""
      }
    ],
    "authorsList": "Watts S. Humphrey, Bill Curtis",
    "citation": "Watts S. Humphrey, Bill Curtis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.300033\">Comments on 'A Critical Look'</a>, IEEE Software 1991, no. 4, p. 42",
    "searchText": ""
  },
  {
    "quote": "Our <b>natural limitations</b> in reasoning power, memory, and communication are both the <b>reasons we debug</b> and why the activity of debugging itself can be so difficult. The debuggers ... are <b>visibility tools</b>, making hidden information available to programmers.",
    "title": "Guest Editors' Introduction: Offsetting Human Limits with Debugging Technology",
    "year": 1991,
    "number": 3,
    "page": 11,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1991.10025",
    "selected": false,
    "authors": [
      {
        "name": "Thomas G. Moher",
        "link": ""
      },
      {
        "name": "Paul R. Wilson",
        "link": ""
      }
    ],
    "authorsList": "Thomas G. Moher, Paul R. Wilson",
    "citation": "Thomas G. Moher, Paul R. Wilson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1991.10025\">Guest Editors' Introduction: Offsetting Human Limits with Debugging Technology</a>, IEEE Software 1991, no. 3, p. 11",
    "searchText": ""
  },
  {
    "quote": "Programmers have no clear idea bow to systematically debug a program, which makes it difficult to share and evaluate methods ... Debugging tools must support each stage in the debugging process: hypothesis verification, hypothesis-set modification, and hypothesis selection.",
    "title": "A General Framework for Debugging",
    "year": 1991,
    "number": 3,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.88939",
    "selected": false,
    "authors": [
      {
        "name": "Jingde Cheng",
        "link": ""
      },
      {
        "name": "Keijiro Araki",
        "link": ""
      },
      {
        "name": "Zengo Furukawa",
        "link": ""
      }
    ],
    "authorsList": "Jingde Cheng, Keijiro Araki, Zengo Furukawa",
    "citation": "Jingde Cheng, Keijiro Araki, Zengo Furukawa, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.88939\">A General Framework for Debugging</a>, IEEE Software 1991, no. 3, p. 14",
    "searchText": ""
  },
  {
    "quote": "The testing and quality assurance of the <b>Motif 1.0</b> graphical user-interface software are described. The testing goals, which fell into three general categories (code coverage, defect-density, and defect-arrival rate), and a deliverable formal test suite are examined. The three phases of the testing process-evaluation, test development, and regression testing-and the tools used in testing are discussed.",
    "title": "Experience in Testing the Motif Interface",
    "year": 1991,
    "number": 2,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.73746",
    "selected": false,
    "authors": [
      {
        "name": "Paul R. Ritter",
        "link": ""
      },
      {
        "name": "Jason Su",
        "link": ""
      }
    ],
    "authorsList": "Paul R. Ritter, Jason Su",
    "citation": "Paul R. Ritter, Jason Su, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.73746\">Experience in Testing the Motif Interface</a>, IEEE Software 1991, no. 2, p. 26",
    "searchText": ""
  },
  {
    "quote": "A model that patterns <b>software manufacturing</b> after <b>hardware manufacturing</b> ... introduces a <b>testing</b> and <b>analysis station</b> between each development phase. At each station, the incoming product is tested and failure data are analyzed and compared with the quality criteria used. The decision is then made whether to proceed to the next phase or repair the software.",
    "title": "Improving Quality With a Manufacturing Process",
    "year": 1991,
    "number": 2,
    "page": 13,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.73745",
    "selected": false,
    "authors": [
      {
        "name": "Ytzhak Levendel",
        "link": ""
      }
    ],
    "authorsList": "Ytzhak Levendel",
    "citation": "Ytzhak Levendel, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.73745\">Improving Quality With a Manufacturing Process</a>, IEEE Software 1991, no. 2, p. 13",
    "searchText": ""
  },
  {
    "quote": "The emerging discipline of <b>software risk management</b> is ... defined as an attempt to formalize the risk-oriented correlates of success into a readily applicable set of principles and practices. Its objectives are to identify, address, and eliminate risk items before they become either threats to successful software operation or major sources of software rework.",
    "title": "Software Risk Management: Principles and Practices",
    "year": 1991,
    "number": 1,
    "page": 32,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.62930",
    "selected": false,
    "authors": [
      {
        "name": "Barry W. Boehm",
        "link": ""
      }
    ],
    "authorsList": "Barry W. Boehm",
    "citation": "Barry W. Boehm, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.62930\">Software Risk Management: Principles and Practices</a>, IEEE Software 1991, no. 1, p. 32",
    "searchText": ""
  },
  {
    "quote": "[Q]uantitative results based on a 1988 study of inspection of 2.5 million lines of high-level code at Bell-Northern Research ... confirm that <b>code inspection</b> is still one of the most efficient ways to remove software defects.",
    "title": "Experience With Inspection in Ultralarge-Scale Development",
    "year": 1991,
    "number": 1,
    "page": 25,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.62929",
    "selected": false,
    "authors": [
      {
        "name": "Glen W. Russell",
        "link": ""
      }
    ],
    "authorsList": "Glen W. Russell",
    "citation": "Glen W. Russell, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.62929\">Experience With Inspection in Ultralarge-Scale Development</a>, IEEE Software 1991, no. 1, p. 25",
    "searchText": ""
  },
  {
    "quote": "Five basic steps that the <b>software engineering profession</b> must take to become a true engineering discipline ... are: understanding the <b>nature of expertise</b>, recognizing different ways to <b>get information</b>, encouraging <b>routine practice</b>, expecting professional <b>specializations</b>, and improving the <b>coupling between science and commercial practice</b>.",
    "title": "Prospects for an Engineering Discipline of Software",
    "year": 1990,
    "number": 6,
    "page": 15,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.60586",
    "selected": false,
    "authors": [
      {
        "name": "Mary Shaw",
        "link": ""
      }
    ],
    "authorsList": "Mary Shaw",
    "citation": "Mary Shaw, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.60586\">Prospects for an Engineering Discipline of Software</a>, IEEE Software 1990, no. 6, p. 15",
    "searchText": ""
  },
  {
    "quote": "<b>Cleanroom engineering</b> achieves intellectual control by applying rigorous, mathematics-based engineering practices, establishes an <b>errors-are-unacceptable attitude</b> and a <b>team responsibility for quality</b>, delegates development and testing responsibilities to separate teams, and certifies the software's mean time to failure through the application of statistical quality-control methods.",
    "title": "Engineering Software Under Statistical Quality Control",
    "year": 1990,
    "number": 6,
    "page": 44,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.60601",
    "selected": false,
    "authors": [
      {
        "name": "Harlan D. Mills",
        "link": ""
      },
      {
        "name": "Richard H. Cobb",
        "link": ""
      }
    ],
    "authorsList": "Harlan D. Mills, Richard H. Cobb",
    "citation": "Harlan D. Mills, Richard H. Cobb, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.60601\">Engineering Software Under Statistical Quality Control</a>, IEEE Software 1990, no. 6, p. 44",
    "searchText": ""
  },
  {
    "quote": "<b>Schools</b> represent a challenge for the software industry. Although <b>diverting corporate resources to schools</b> may appear to be folly in the short run, in the long run it is a strategy for survival. [P]rogrammers and their organizations [should] devote their time and services to schools at the primary and secondary levels.",
    "title": "Making a Difference in the Schools",
    "year": 1990,
    "number": 6,
    "page": 78,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.60592",
    "selected": false,
    "authors": [
      {
        "name": "Tom DeMarco",
        "link": ""
      }
    ],
    "authorsList": "Tom DeMarco",
    "citation": "Tom DeMarco, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.60592\">Making a Difference in the Schools</a>, IEEE Software 1990, no. 6, p. 78",
    "searchText": ""
  },
  {
    "quote": "Seven widely held conceptions about formal methods are challenged. These beliefs are variants of the following: formal methods can <b>guarantee</b> that software is perfect; they work by <b>proving</b> that the programs are correct; only highly critical systems <b>benefit</b> from their use; they involve <b>complex mathematics</b>; they <b>increase the cost</b> of development; they are <b>incomprehensible</b> to clients; and <b>nobody uses them</b> for real projects.",
    "title": "Seven Myths of Formal Methods",
    "year": 1990,
    "number": 5,
    "page": 11,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.57887",
    "selected": false,
    "authors": [
      {
        "name": "Anthony Hall",
        "link": ""
      }
    ],
    "authorsList": "Anthony Hall",
    "citation": "Anthony Hall, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.57887\">Seven Myths of Formal Methods</a>, IEEE Software 1990, no. 5, p. 11",
    "searchText": ""
  },
  {
    "quote": "An environment for <b>creating user interfaces for embedded systems</b>, called the graphical specification system (GSS) ... combines graphical and minimal low-level textual specification with a prototyping capability for rapid user-interface design and evaluation.",
    "title": "A Graphical Specification System for User-Interface Design",
    "year": 1990,
    "number": 4,
    "page": 12,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.56446",
    "selected": false,
    "authors": [
      {
        "name": "Sallie Sheppard",
        "link": ""
      },
      {
        "name": "Andrew Harbert",
        "link": ""
      },
      {
        "name": "William Lively",
        "link": ""
      }
    ],
    "authorsList": "Sallie Sheppard, Andrew Harbert, William Lively",
    "citation": "Sallie Sheppard, Andrew Harbert, William Lively, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.56446\">A Graphical Specification System for User-Interface Design</a>, IEEE Software 1990, no. 4, p. 12",
    "searchText": ""
  },
  {
    "quote": "The interpretive frame system (IFS), a tool for building application systems ... separates high-level design and user-interface programming from domain-specific programming.",
    "title": "IFS: A Tool to Build Application Systems",
    "year": 1990,
    "number": 4,
    "page": 29,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.56448",
    "selected": false,
    "authors": [
      {
        "name": "Kiem-Phong Vo",
        "link": ""
      }
    ],
    "authorsList": "Kiem-Phong Vo",
    "citation": "Kiem-Phong Vo, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.56448\">IFS: A Tool to Build Application Systems</a>, IEEE Software 1990, no. 4, p. 29",
    "searchText": ""
  },
  {
    "quote": "<b>Practitioners</b> drift one way, <b>purists</b> the other. The purists must compromise.",
    "title": "Let's Stop the Bipolar Drift",
    "year": 1990,
    "number": 3,
    "page": 4,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1990.10029",
    "selected": false,
    "authors": [
      {
        "name": "Carl Chang",
        "link": ""
      }
    ],
    "authorsList": "Carl Chang",
    "citation": "Carl Chang, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1990.10029\">Let's Stop the Bipolar Drift</a>, IEEE Software 1990, no. 3, p. 4",
    "searchText": ""
  },
  {
    "quote": "<b>Tools</b> are divided into vertical and horizontal architectures. <b>Vertical tools</b> support specific activities in a single life-cycle phase, such as analysis, design, or testing. <b>Horizontal tools</b> support activities across the entire life cycle, such as project management and cost estimation.",
    "title": "Software Tools in Context",
    "year": 1990,
    "number": 3,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.55222",
    "selected": false,
    "authors": [
      {
        "name": "Paul W. Oman",
        "link": ""
      },
      {
        "name": "Dennis B. Smith",
        "link": ""
      }
    ],
    "authorsList": "Paul W. Oman, Dennis B. Smith",
    "citation": "Paul W. Oman, Dennis B. Smith, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.55222\">Software Tools in Context</a>, IEEE Software 1990, no. 3, p. 14",
    "searchText": ""
  },
  {
    "quote": "[T]hree approaches to <b>user-interface development</b>: <b>tool kits</b>, <b>user-interface management systems</b> (UIMS), and interactive <b>design tools</b>.",
    "title": "User-Interface Development Tools",
    "year": 1990,
    "number": 3,
    "page": 31,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.55225",
    "selected": false,
    "authors": [
      {
        "name": "Ed Lee",
        "link": ""
      }
    ],
    "authorsList": "Ed Lee",
    "citation": "Ed Lee, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.55225\">User-Interface Development Tools</a>, IEEE Software 1990, no. 3, p. 31",
    "searchText": ""
  },
  {
    "quote": "<b>Performance tools</b> are a way of making systematic the work needed to carry out performance studies so that several studies can be carried out more easily and be compared in a consistent way.",
    "title": "Performance Tools",
    "year": 1990,
    "number": 3,
    "page": 21,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.55223",
    "selected": false,
    "authors": [
      {
        "name": "Kathleen D. Nichols",
        "link": ""
      }
    ],
    "authorsList": "Kathleen D. Nichols",
    "citation": "Kathleen D. Nichols, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.55223\">Performance Tools</a>, IEEE Software 1990, no. 3, p. 21",
    "searchText": ""
  },
  {
    "quote": "Some <b>[testing] tools</b> simulate the final execution environment as a way of expediting test execution, others automate the development of test plans, and still others collect performance data during execution.",
    "title": "Testing Tools",
    "year": 1990,
    "number": 3,
    "page": 53,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.55228",
    "selected": false,
    "authors": [
      {
        "name": "Mike Lutz",
        "link": ""
      }
    ],
    "authorsList": "Mike Lutz",
    "citation": "Mike Lutz, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.55228\">Testing Tools</a>, IEEE Software 1990, no. 3, p. 53",
    "searchText": ""
  },
  {
    "quote": "<b>Code generators</b> ... take a programmer's inputs in the form of some abstraction, design, or direct interaction with the system and write out a source program that implements the details of the application...",
    "title": "Code Generators",
    "year": 1990,
    "number": 3,
    "page": 67,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.55230",
    "selected": false,
    "authors": [
      {
        "name": "Ted Lewis",
        "link": ""
      }
    ],
    "authorsList": "Ted Lewis",
    "citation": "Ted Lewis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.55230\">Code Generators</a>, IEEE Software 1990, no. 3, p. 67",
    "searchText": ""
  },
  {
    "quote": "You can't control what you can't measure. That fundamental reality underlies the importance of <b>software metrics</b>, despite the <b>controversy</b> that has surrounded them since <b>Maurice Halstead</b> put forth his idea of software science. Sketpics claim metrics are useless and expensive exercise in pointless data collection, while proponents argue they are valuable management and engineering tools.",
    "title": "Guest Editors' Introduction: Using Metrics to Quantify Development",
    "year": 1990,
    "number": 2,
    "page": 14,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1990.10016",
    "selected": false,
    "authors": [
      {
        "name": "Peter B. Dyson",
        "link": ""
      },
      {
        "name": "Harlan D. Mills",
        "link": ""
      }
    ],
    "authorsList": "Peter B. Dyson, Harlan D. Mills",
    "citation": "Peter B. Dyson, Harlan D. Mills, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1990.10016\">Guest Editors' Introduction: Using Metrics to Quantify Development</a>, IEEE Software 1990, no. 2, p. 14",
    "searchText": ""
  },
  {
    "quote": "<b>Measurement</b> must be applied in individual experiments or case studies; ... measurement can help continuously improve an organization's state of the practice; ... measurement requires automated support.",
    "title": "Design Measurement: Some Lessons Learned",
    "year": 1990,
    "number": 2,
    "page": 17,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.50770",
    "selected": false,
    "authors": [
      {
        "name": "H. Dieter Rombach",
        "link": ""
      }
    ],
    "authorsList": "H. Dieter Rombach",
    "citation": "H. Dieter Rombach, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.50770\">Design Measurement: Some Lessons Learned</a>, IEEE Software 1990, no. 2, p. 17",
    "searchText": ""
  },
  {
    "quote": "<b>Reverse engineering</b> is the process of analyzing a subject system to identify the system’s components and their interrelationships and create representations of the system in another form or at a higher level of abstraction.",
    "title": "Reverse Engineering and Design Recovery: A Taxonomy",
    "year": 1990,
    "number": 1,
    "page": 15,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.43044",
    "selected": false,
    "authors": [
      {
        "name": "Elliot J. Chikofsky",
        "link": ""
      },
      {
        "name": "James H. Cross II",
        "link": ""
      }
    ],
    "authorsList": "Elliot J. Chikofsky, James H. Cross II",
    "citation": "Elliot J. Chikofsky, James H. Cross II, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.43044\">Reverse Engineering and Design Recovery: A Taxonomy</a>, IEEE Software 1990, no. 1, p. 15",
    "searchText": ""
  },
  {
    "quote": "<b>Restructuring</b> is the transformation from one representation form to another at the same relative abstraction level, while preserving the subject system’s external behavior (functionality and semantics). ",
    "title": "Reverse Engineering and Design Recovery: A Taxonomy",
    "year": 1990,
    "number": 1,
    "page": 15,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.43044",
    "selected": false,
    "authors": [
      {
        "name": "Elliot J. Chikofsky",
        "link": ""
      },
      {
        "name": "James H. Cross II",
        "link": ""
      }
    ],
    "authorsList": "Elliot J. Chikofsky, James H. Cross II",
    "citation": "Elliot J. Chikofsky, James H. Cross II, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.43044\">Reverse Engineering and Design Recovery: A Taxonomy</a>, IEEE Software 1990, no. 1, p. 15",
    "searchText": ""
  },
  {
    "quote": "[T]he European Strategic Program for Research and Information Technology <b>[ESPRIT]</b> has had a profound effect on industrial technology in Europe.",
    "title": "Guest Editor's Introduction: ESPRIT—Key Results of the First Phase",
    "year": 1989,
    "number": 6,
    "page": 10,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1989.10064",
    "selected": false,
    "authors": [
      {
        "name": "Annie Kuntzmann-Combelles",
        "link": ""
      }
    ],
    "authorsList": "Annie Kuntzmann-Combelles",
    "citation": "Annie Kuntzmann-Combelles, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1989.10064\">Guest Editor's Introduction: ESPRIT—Key Results of the First Phase</a>, IEEE Software 1989, no. 6, p. 10",
    "searchText": ""
  },
  {
    "quote": "<b>Multiparadigm programming</b> makes it possible to match the paradigm to the problem.",
    "title": "A Compositional Approach to Multiparadigm Programming",
    "year": 1989,
    "number": 5,
    "page": 15,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.35586",
    "selected": false,
    "authors": [
      {
        "name": "Pamela Zave",
        "link": ""
      }
    ],
    "authorsList": "Pamela Zave",
    "citation": "Pamela Zave, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.35586\">A Compositional Approach to Multiparadigm Programming</a>, IEEE Software 1989, no. 5, p. 15",
    "searchText": ""
  },
  {
    "quote": "The language-independent <b>Law of Demeter</b> ... encodes the ideas of <b>encapsulation and modularity</b> in an easy-to-follow form for object-oriented programmers ... The law was developed during the design and implementation of <b>the Demeter system</b>, which provides a high-level interface to class-based, object-oriented systems.",
    "title": "Assuring Good Style for Object-Oriented Programs",
    "year": 1989,
    "number": 5,
    "page": 38,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.35588",
    "selected": false,
    "authors": [
      {
        "name": "Ian M. Holland",
        "link": ""
      },
      {
        "name": "Karl J. Lieberherr",
        "link": ""
      }
    ],
    "authorsList": "Ian M. Holland, Karl J. Lieberherr",
    "citation": "Ian M. Holland, Karl J. Lieberherr, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.35588\">Assuring Good Style for Object-Oriented Programs</a>, IEEE Software 1989, no. 5, p. 38",
    "searchText": ""
  },
  {
    "quote": "The commercial availability of these machines poses a challenge to the software industry. What is the best way to <b>harness the power</b>?",
    "title": "Guest Editor's Introduction: Parallel Programming—Harnessing the Hardware",
    "year": 1989,
    "number": 4,
    "page": 7,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1989.10037",
    "selected": false,
    "authors": [
      {
        "name": "Shreekant Thakkar",
        "link": ""
      }
    ],
    "authorsList": "Shreekant Thakkar",
    "citation": "Shreekant Thakkar, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1989.10037\">Guest Editor's Introduction: Parallel Programming—Harnessing the Hardware</a>, IEEE Software 1989, no. 4, p. 7",
    "searchText": ""
  },
  {
    "quote": "Properly applied  throughout the life cycle, <b>verification and validation</b> can result in higher quality, more reliable programms.",
    "title": "Software Verification and Validation: An Overview",
    "year": 1989,
    "number": 3,
    "page": 10,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.28119",
    "selected": false,
    "authors": [
      {
        "name": "Dolores R. Wallace",
        "link": ""
      },
      {
        "name": "Roger U. Fujii",
        "link": ""
      }
    ],
    "authorsList": "Dolores R. Wallace, Roger U. Fujii",
    "citation": "Dolores R. Wallace, Roger U. Fujii, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.28119\">Software Verification and Validation: An Overview</a>, IEEE Software 1989, no. 3, p. 10",
    "searchText": ""
  },
  {
    "quote": "<b>System testing</b> becomess guesswork - unless you set it up to apply <b>statistical analysis</b>. Then you can focus attention on the software’s use instead of its structure.",
    "title": "Quantifying Software Validation: When to Stop Testing?",
    "year": 1989,
    "number": 3,
    "page": 19,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.28120",
    "selected": false,
    "authors": [
      {
        "name": "A. Frank Ackerman",
        "link": ""
      },
      {
        "name": "John D. Musa",
        "link": ""
      }
    ],
    "authorsList": "A. Frank Ackerman, John D. Musa",
    "citation": "A. Frank Ackerman, John D. Musa, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.28120\">Quantifying Software Validation: When to Stop Testing?</a>, IEEE Software 1989, no. 3, p. 19",
    "searchText": ""
  },
  {
    "quote": "<b>[I]nspections</b> can detect and eliminate faults <b>more cheaply than testing</b>.",
    "title": "Software Inspections: An Effective Verification Process",
    "year": 1989,
    "number": 3,
    "page": 31,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.28121",
    "selected": false,
    "authors": [
      {
        "name": "A. Frank Ackerman",
        "link": ""
      },
      {
        "name": "Lynne S. Buchwald",
        "link": ""
      },
      {
        "name": "Frank H. Lewski",
        "link": ""
      }
    ],
    "authorsList": "A. Frank Ackerman, Lynne S. Buchwald, Frank H. Lewski",
    "citation": "A. Frank Ackerman, Lynne S. Buchwald, Frank H. Lewski, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.28121\">Software Inspections: An Effective Verification Process</a>, IEEE Software 1989, no. 3, p. 31",
    "searchText": ""
  },
  {
    "quote": "<b>Japan's Sigma</b> (Software Industrialized Generator and Maintenance Aids) ... consists of the Sigma Center, Sigma network, and Sigma user sites. The Sigma Center will help users who are constructing development environments of programs using those environments. It will provide database services, demonstration services, and part of the network service.",
    "title": "Industrializing Software Development: A Japanese Approach",
    "year": 1989,
    "number": 2,
    "page": 13,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.23125",
    "selected": false,
    "authors": [
      {
        "name": "Noboru Akima",
        "link": ""
      },
      {
        "name": "Fusatake Ooi",
        "link": ""
      }
    ],
    "authorsList": "Noboru Akima, Fusatake Ooi",
    "citation": "Noboru Akima, Fusatake Ooi, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.23125\">Industrializing Software Development: A Japanese Approach</a>, IEEE Software 1989, no. 2, p. 13",
    "searchText": ""
  },
  {
    "quote": "With strong government backing and direction, <b>Singapore</b> seeks to develop information technology as a growth industry and use it to promote the nation's global competitiveness.",
    "title": "Software Technology Development in Singapore",
    "year": 1989,
    "number": 2,
    "page": 61,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.23132",
    "selected": false,
    "authors": [
      {
        "name": "Tahn Joo Chin",
        "link": ""
      },
      {
        "name": "Kai Yuen Wang",
        "link": ""
      }
    ],
    "authorsList": "Tahn Joo Chin, Kai Yuen Wang",
    "citation": "Tahn Joo Chin, Kai Yuen Wang, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.23132\">Software Technology Development in Singapore</a>, IEEE Software 1989, no. 2, p. 61",
    "searchText": ""
  },
  {
    "quote": "An <b>interactive system</b> - one with a human-computer interface - is not judged solely on its ability to compute. It is also judged on its <b>ability to communicate</b>. In fact, if users cannot communicate effectively with an interactive system, its computational ability may be  inaccessible. ",
    "title": "Guest Editor's Introduction: User Interfaces—Opening a Window on the Computer",
    "year": 1989,
    "number": 1,
    "page": 8,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1989.10004",
    "selected": false,
    "authors": [
      {
        "name": "Deborah Hix",
        "link": "http://www.cc.gatech.edu/grads/h/Shanda.Lanisa.Harper/cs6751/hix.html"
      }
    ],
    "authorsList": "Deborah Hix",
    "citation": "Deborah Hix, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1989.10004\">Guest Editor's Introduction: User Interfaces—Opening a Window on the Computer</a>, IEEE Software 1989, no. 1, p. 8",
    "searchText": ""
  },
  {
    "quote": "An overview is given of <b>user-interface development systems</b> (UIDS). ... The three types are <b>language-based</b>, <b>graphical</b>, and <b>automatic creation interfaces</b>.",
    "title": "User-Interface Tools: Introduction and Survey",
    "year": 1989,
    "number": 1,
    "page": 15,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.16898",
    "selected": false,
    "authors": [
      {
        "name": "Brad A. Myers",
        "link": "https://en.wikipedia.org/wiki/Brad_Myers"
      }
    ],
    "authorsList": "Brad A. Myers",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Brad_Myers\">Brad A. Myers</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.16898\">User-Interface Tools: Introduction and Survey</a>, IEEE Software 1989, no. 1, p. 15",
    "searchText": ""
  },
  {
    "quote": "<b>Expert systems</b> attempt to clone an expert’s problem-solving behavior in a particular knowledge-intensive domain. An expert’s domain knowledge encompasses both the <b>facts</b> that apply to a particular area and the <b>knowledge of how</b> and when to use these facts to solve a problem in that domain. ",
    "title": "Guest Editors' Introduction: Expert Systems",
    "year": 1988,
    "number": 6,
    "page": 15,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1988.10052",
    "selected": false,
    "authors": [
      {
        "name": "Murat M. Tanik",
        "link": ""
      },
      {
        "name": "Raymond T. Yeh",
        "link": ""
      }
    ],
    "authorsList": "Murat M. Tanik, Raymond T. Yeh",
    "citation": "Murat M. Tanik, Raymond T. Yeh, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1988.10052\">Guest Editors' Introduction: Expert Systems</a>, IEEE Software 1988, no. 6, p. 15",
    "searchText": ""
  },
  {
    "quote": "<b>Shared memory</b> requires carefully designed concurrency control, but the traditional approach, which is to embed the entire <b>allocate-release</b> implementation code in critical sections, is unsuitable for real-time applications because it results in excessively high response time.",
    "title": "Concurrent Algorithms for Real-Time Memory Management",
    "year": 1988,
    "number": 5,
    "page": 10,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.7940",
    "selected": false,
    "authors": [
      {
        "name": "Ray Ford",
        "link": ""
      }
    ],
    "authorsList": "Ray Ford",
    "citation": "Ray Ford, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.7940\">Concurrent Algorithms for Real-Time Memory Management</a>, IEEE Software 1988, no. 5, p. 10",
    "searchText": ""
  },
  {
    "quote": "It is far better to succeed by design than by default or chance. <b>Usability testing</b> tips the balance in favor of success and <b>reduces the risks</b> associated with launching a new system.",
    "title": "Recipe for a Usability Test",
    "year": 1988,
    "number": 6,
    "page": 83,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1988.10054",
    "selected": false,
    "authors": [
      {
        "name": "Kathleen Potosnak",
        "link": ""
      }
    ],
    "authorsList": "Kathleen Potosnak",
    "citation": "Kathleen Potosnak, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1988.10054\">Recipe for a Usability Test</a>, IEEE Software 1988, no. 6, p. 83",
    "searchText": ""
  },
  {
    "quote": "[E]ven though the code sizes were smaller with both fourth-generation tools, <b>Cobol was clearly superior</b> in performance.",
    "title": "Third-Generation Versus Fourth-Generation Software Development",
    "year": 1988,
    "number": 4,
    "page": 8,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.17797",
    "selected": false,
    "authors": [
      {
        "name": "Paul J. Jalics",
        "link": ""
      },
      {
        "name": "Santosh K. Misra",
        "link": ""
      }
    ],
    "authorsList": "Paul J. Jalics, Santosh K. Misra",
    "citation": "Paul J. Jalics, Santosh K. Misra, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.17797\">Third-Generation Versus Fourth-Generation Software Development</a>, IEEE Software 1988, no. 4, p. 8",
    "searchText": ""
  },
  {
    "quote": "The meaning of the term '<b>object oriented</b>' is examined in the context of the general-purpose programming language C++. This choice is made partly to <b>introduce C++</b> and partly because C++ is one of the few languages that supports data abstraction, object-oriented programming, and traditional programming techniques. ... four paradigms are examined: <b>procedural</b>, <b>data hiding</b>, <b>data abstraction</b>, and <b>object-oriented</b> programming.",
    "title": "What Is Object-Oriented Programming?",
    "year": 1988,
    "number": 3,
    "page": 10,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.2020",
    "selected": false,
    "authors": [
      {
        "name": "Bjarne Stroustrup",
        "link": "https://en.wikipedia.org/wiki/Bjarne_Stroustrup"
      }
    ],
    "authorsList": "Bjarne Stroustrup",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Bjarne_Stroustrup\">Bjarne Stroustrup</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.2020\">What Is Object-Oriented Programming?</a>, IEEE Software 1988, no. 3, p. 10",
    "searchText": ""
  },
  {
    "quote": "Mote than a decade after its introduction, <b>CASE</b> is emerging as a real-world technology whose <b>promises</b> are being fulfilled.",
    "title": "Guest Editor's Introduction: Software Technology People Can Really Use",
    "year": 1988,
    "number": 2,
    "page": 8,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1988.10019",
    "selected": false,
    "authors": [
      {
        "name": "Elliot J. Chikofsky",
        "link": ""
      }
    ],
    "authorsList": "Elliot J. Chikofsky",
    "citation": "Elliot J. Chikofsky, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1988.10019\">Guest Editor's Introduction: Software Technology People Can Really Use</a>, IEEE Software 1988, no. 2, p. 8",
    "searchText": ""
  },
  {
    "quote": "Today tools help systems analysts, so <b>why aren’t they widely used</b>? ",
    "title": "Second-Generation CASE Tools: A Challenge to Vendors",
    "year": 1988,
    "number": 2,
    "page": 46,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.2010",
    "selected": false,
    "authors": [
      {
        "name": "Charles F. Martin",
        "link": ""
      }
    ],
    "authorsList": "Charles F. Martin",
    "citation": "Charles F. Martin, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.2010\">Second-Generation CASE Tools: A Challenge to Vendors</a>, IEEE Software 1988, no. 2, p. 46",
    "searchText": ""
  },
  {
    "quote": "[C]urrent computer-aided-software engineering (CASE) tools have several <b>inherent limitations</b> that reduce the productivity gains they can achieve ...  methodology constraints, administration difficulties, documentation inadequacies, and graphic-artist requirement.",
    "title": "Second-Generation CASE Tools: A Challenge to Vendors",
    "year": 1988,
    "number": 2,
    "page": 46,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.2010",
    "selected": false,
    "authors": [
      {
        "name": "Charles F. Martin",
        "link": ""
      }
    ],
    "authorsList": "Charles F. Martin",
    "citation": "Charles F. Martin, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.2010\">Second-Generation CASE Tools: A Challenge to Vendors</a>, IEEE Software 1988, no. 2, p. 46",
    "searchText": ""
  },
  {
    "quote": "There are several applications where a <b>universal-relation interface</b> to an existing database-management system is essential. The most obvious example is <b>natural-language</b> interface - indeed, it is hard to see how a natural-language interface could reliably use anything else, since it is unreasonable to make the user talk in terms of the <b>database's logical structure</b>.",
    "title": "The Universal-Relation Data Model for Logical Independence",
    "year": 1988,
    "number": 2,
    "page": 81,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.2015",
    "selected": false,
    "authors": [
      {
        "name": "Moshe Y. Vardi",
        "link": "https://en.wikipedia.org/wiki/Moshe_Vardi"
      }
    ],
    "authorsList": "Moshe Y. Vardi",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Moshe_Vardi\">Moshe Y. Vardi</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.2015\">The Universal-Relation Data Model for Logical Independence</a>, IEEE Software 1988, no. 2, p. 81",
    "searchText": ""
  },
  {
    "quote": "[A] <b>software-process maturity framework</b> ... has been developed to provide the US Department of Defense with a means to characterize the capabilities of software-development organizations. This software-development process-maturity model reasonably represents the actual ways in which software-development organizations improve. It provides a framework for assessing these organizations and identifying the priority areas for immediate improvement. It also helps identify those places where advanced technology can be most valuable in improving the software-development process.",
    "title": "Characterizing the Software Process: A Maturity Framework",
    "year": 1988,
    "number": 2,
    "page": 73,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.2014",
    "selected": false,
    "authors": [
      {
        "name": "Watts S. Humphrey",
        "link": "https://en.wikipedia.org/wiki/Watts_Humphrey"
      }
    ],
    "authorsList": "Watts S. Humphrey",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Watts_Humphrey\">Watts S. Humphrey</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.2014\">Characterizing the Software Process: A Maturity Framework</a>, IEEE Software 1988, no. 2, p. 73",
    "searchText": ""
  },
  {
    "quote": "<b>Parallel programming</b> challenges software professionals to rethink old approaches and difficult - often controversial - choices.",
    "title": "Guest Editor's Introduction: Parallel Programming—Issues and Questions",
    "year": 1988,
    "number": 1,
    "page": 8,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1988.10003",
    "selected": false,
    "authors": [
      {
        "name": "Shreekant S. Thakkar",
        "link": ""
      }
    ],
    "authorsList": "Shreekant S. Thakkar",
    "citation": "Shreekant S. Thakkar, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1988.10003\">Guest Editor's Introduction: Parallel Programming—Issues and Questions</a>, IEEE Software 1988, no. 1, p. 8",
    "searchText": ""
  },
  {
    "quote": "<b>Parafunctional programming</b> is based on the premise that the what (specification) and the how (implementation) are separately identifiable and maintainable system components.",
    "title": "Exploring Parafunctional Programming: Separating the What from the How",
    "year": 1988,
    "number": 1,
    "page": 54,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.1994",
    "selected": false,
    "authors": [
      {
        "name": "Paul Hudak",
        "link": ""
      }
    ],
    "authorsList": "Paul Hudak",
    "citation": "Paul Hudak, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.1994\">Exploring Parafunctional Programming: Separating the What from the How</a>, IEEE Software 1988, no. 1, p. 54",
    "searchText": ""
  },
  {
    "quote": "The IOGen <b>static-analysis tool</b> ... uses a technique based on symbolic execution and produces a set of I/O pairs that represent execution paths through a program.",
    "title": "Test-Case Generation with IOGen",
    "year": 1988,
    "number": 1,
    "page": 72,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/52.1996",
    "selected": false,
    "authors": [
      {
        "name": "Joyce R. Jenkins",
        "link": ""
      },
      {
        "name": "Timothy E. Lindquist",
        "link": ""
      }
    ],
    "authorsList": "Joyce R. Jenkins, Timothy E. Lindquist",
    "citation": "Joyce R. Jenkins, Timothy E. Lindquist, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/52.1996\">Test-Case Generation with IOGen</a>, IEEE Software 1988, no. 1, p. 72",
    "searchText": ""
  },
  {
    "quote": "A new generation of operating system, based on <b>extended databases</b>, will supplant the original phase-sequencing and current <b>pipelining program composition mechanisms</b>.",
    "title": "Living in the Next-Generation Operating System",
    "year": 1987,
    "number": 6,
    "page": 77,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1987.232097",
    "selected": false,
    "authors": [
      {
        "name": "R.M. Baizer",
        "link": ""
      }
    ],
    "authorsList": "R.M. Baizer",
    "citation": "R.M. Baizer, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1987.232097\">Living in the Next-Generation Operating System</a>, IEEE Software 1987, no. 6, p. 77",
    "searchText": ""
  },
  {
    "quote": "How do you keep teams of programmers informed of system changes without burying them in mail messages? Make the environment responsible for <b>propagating changes</b>.",
    "title": "Multiuser, Distributed Language-Based Environments",
    "year": 1987,
    "number": 6,
    "page": 58,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1987.232092",
    "selected": false,
    "authors": [
      {
        "name": "S.M. Kaplan",
        "link": ""
      },
      {
        "name": "J. Micallef",
        "link": ""
      },
      {
        "name": "G.E. Kaiser",
        "link": ""
      }
    ],
    "authorsList": "S.M. Kaplan, J. Micallef, G.E. Kaiser",
    "citation": "S.M. Kaplan, J. Micallef, G.E. Kaiser, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1987.232092\">Multiuser, Distributed Language-Based Environments</a>, IEEE Software 1987, no. 6, p. 58",
    "searchText": ""
  },
  {
    "quote": "Software quality can be engineered under <b>statistical quality control</b> and delivered with better quality.",
    "title": "Cleanroom Software Engineering",
    "year": 1987,
    "number": 5,
    "page": 19,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1987.231413",
    "selected": false,
    "authors": [
      {
        "name": "R.C. Linger",
        "link": ""
      },
      {
        "name": "M. Dyer",
        "link": ""
      },
      {
        "name": "H.D. Mills",
        "link": ""
      }
    ],
    "authorsList": "R.C. Linger, M. Dyer, H.D. Mills",
    "citation": "R.C. Linger, M. Dyer, H.D. Mills, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1987.231413\">Cleanroom Software Engineering</a>, IEEE Software 1987, no. 5, p. 19",
    "searchText": ""
  },
  {
    "quote": "<b>Maintenance</b> plays a vital role in <b>protecting quality</b> as a system evolves.",
    "title": "Software Quality Assurance for Maintenance",
    "year": 1987,
    "number": 5,
    "page": 46,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1987.231418",
    "selected": false,
    "authors": [
      {
        "name": "J.J. Buck",
        "link": ""
      },
      {
        "name": "J.S. Collofello",
        "link": ""
      }
    ],
    "authorsList": "J.J. Buck, J.S. Collofello",
    "citation": "J.J. Buck, J.S. Collofello, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1987.231418\">Software Quality Assurance for Maintenance</a>, IEEE Software 1987, no. 5, p. 46",
    "searchText": ""
  },
  {
    "quote": "An effective way to improve software quality is to <b>set measurable goals</b> and then manage your projects to achieve those goals. Hewlett-Packard has developed some methods to do just that.",
    "title": "Measuring and Managing Software Maintenance",
    "year": 1987,
    "number": 5,
    "page": 35,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1987.231417",
    "selected": false,
    "authors": [
      {
        "name": "R.B. Grady",
        "link": ""
      }
    ],
    "authorsList": "R.B. Grady",
    "citation": "R.B. Grady, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1987.231417\">Measuring and Managing Software Maintenance</a>, IEEE Software 1987, no. 5, p. 35",
    "searchText": ""
  },
  {
    "quote": "SQA will evolve into a broader software quality technology, shifting from a passive process to an active one, from <b>fault detection</b> to <b>fault avoidance</b>.",
    "title": "Quality Assurance in Future Development Environments",
    "year": 1987,
    "number": 5,
    "page": 26,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1987.231415",
    "selected": false,
    "authors": [
      {
        "name": "F.S. LaMonica",
        "link": ""
      },
      {
        "name": "J.P. Cavano",
        "link": ""
      }
    ],
    "authorsList": "F.S. LaMonica, J.P. Cavano",
    "citation": "F.S. LaMonica, J.P. Cavano, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1987.231415\">Quality Assurance in Future Development Environments</a>, IEEE Software 1987, no. 5, p. 26",
    "searchText": ""
  },
  {
    "quote": "People are leery about buying a <b>used car</b> for many of the same reasons programmers are reluctant to <b>reuse</b> someone else's work.",
    "title": "Reusability Comes of Age",
    "year": 1987,
    "number": 4,
    "page": 6,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1987.231056",
    "selected": false,
    "authors": [
      {
        "name": "Will Tracz",
        "link": ""
      }
    ],
    "authorsList": "Will Tracz",
    "citation": "Will Tracz, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1987.231056\">Reusability Comes of Age</a>, IEEE Software 1987, no. 4, p. 6",
    "searchText": ""
  },
  {
    "quote": "An experiment asked programmers untrained in reuse to <b>evaluate component reusability</b>. They did poorly.",
    "title": "Can Programmers Reuse Software?",
    "year": 1987,
    "number": 4,
    "page": 52,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1987.231064",
    "selected": false,
    "authors": [
      {
        "name": "D.W. Embley",
        "link": ""
      },
      {
        "name": "S.N. Woodfield",
        "link": ""
      },
      {
        "name": "D.T. Scott",
        "link": ""
      }
    ],
    "authorsList": "D.W. Embley, S.N. Woodfield, D.T. Scott",
    "citation": "D.W. Embley, S.N. Woodfield, D.T. Scott, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1987.231064\">Can Programmers Reuse Software?</a>, IEEE Software 1987, no. 4, p. 52",
    "searchText": ""
  },
  {
    "quote": "Testing Ada programs is easier with this <b>visual debugger</b> that graphically depicts what the program as doing - and how it is being done.",
    "title": "VIPS: A Visual Debugger",
    "year": 1987,
    "number": 3,
    "page": 8,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1987.230394",
    "selected": false,
    "authors": [
      {
        "name": "S. Isoda",
        "link": ""
      },
      {
        "name": "Y. Ono",
        "link": ""
      },
      {
        "name": "T. Shimomura",
        "link": ""
      }
    ],
    "authorsList": "S. Isoda, Y. Ono, T. Shimomura",
    "citation": "S. Isoda, Y. Ono, T. Shimomura, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1987.230394\">VIPS: A Visual Debugger</a>, IEEE Software 1987, no. 3, p. 8",
    "searchText": ""
  },
  {
    "quote": "Smalltalk promotes <b>fearless</b> programming.",
    "title": "Experimental Prototyping in Smalltalk",
    "year": 1987,
    "number": 3,
    "page": 50,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1987.230707",
    "selected": false,
    "authors": [
      {
        "name": "J. Diederich",
        "link": ""
      },
      {
        "name": "J. Milton",
        "link": ""
      }
    ],
    "authorsList": "J. Diederich, J. Milton",
    "citation": "J. Diederich, J. Milton, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1987.230707\">Experimental Prototyping in Smalltalk</a>, IEEE Software 1987, no. 3, p. 50",
    "searchText": ""
  },
  {
    "quote": "<b>No one likes to debug programs</b>, and there is no way to automate the task.",
    "title": "Knowledge-Based Program Debugging Systems",
    "year": 1987,
    "number": 3,
    "page": 20,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1987.230396",
    "selected": false,
    "authors": [
      {
        "name": "R.E. Seviora",
        "link": ""
      }
    ],
    "authorsList": "R.E. Seviora",
    "citation": "R.E. Seviora, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1987.230396\">Knowledge-Based Program Debugging Systems</a>, IEEE Software 1987, no. 3, p. 20",
    "searchText": ""
  },
  {
    "quote": "[T]he term [debugging] was first applied to <b>a hardware bug</b> - <b>a moth</b> in the circuitry of Mark II",
    "title": "Knowledge-Based Program Debugging Systems",
    "year": 1987,
    "number": 3,
    "page": 20,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1987.230396",
    "selected": false,
    "authors": [
      {
        "name": "R.E. Seviora",
        "link": ""
      }
    ],
    "authorsList": "R.E. Seviora",
    "citation": "R.E. Seviora, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1987.230396\">Knowledge-Based Program Debugging Systems</a>, IEEE Software 1987, no. 3, p. 20",
    "searchText": ""
  },
  {
    "quote": "New technology is changing the way we store documents. This experimental system features flexible <b>document retrieval</b>, a <b>distributed architecture</b>, and the capacity to store many very <b>large documents</b>.",
    "title": "Muse: A Multimedia File System",
    "year": 1987,
    "number": 2,
    "page": 4,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1987.230090",
    "selected": false,
    "authors": [
      {
        "name": "Simon Gibbs",
        "link": ""
      },
      {
        "name": "Dennis Tsichritzis",
        "link": ""
      },
      {
        "name": "Akis Fitas",
        "link": ""
      },
      {
        "name": "Dimitri Konstantas",
        "link": ""
      },
      {
        "name": "Yiannis Yeorgaroudakis",
        "link": ""
      }
    ],
    "authorsList": "Simon Gibbs, Dennis Tsichritzis, Akis Fitas, Dimitri Konstantas, Yiannis Yeorgaroudakis",
    "citation": "Simon Gibbs, Dennis Tsichritzis, Akis Fitas, Dimitri Konstantas, Yiannis Yeorgaroudakis, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1987.230090\">Muse: A Multimedia File System</a>, IEEE Software 1987, no. 2, p. 4",
    "searchText": ""
  },
  {
    "quote": "Simply being more organized will not make <b>the reuse problem</b> go away. The issues are technical, not managerial. The answers lie in <b>object-oriented design</b>.",
    "title": "Reusability: The Case for Object-Oriented Design",
    "year": 1987,
    "number": 2,
    "page": 50,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1987.230097",
    "selected": false,
    "authors": [
      {
        "name": "Bertrand Meyer",
        "link": "https://en.wikipedia.org/wiki/Bertrand_Meyer"
      }
    ],
    "authorsList": "Bertrand Meyer",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Bertrand_Meyer\">Bertrand Meyer</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1987.230097\">Reusability: The Case for Object-Oriented Design</a>, IEEE Software 1987, no. 2, p. 50",
    "searchText": ""
  },
  {
    "quote": "<b>Reusing</b> and <b>reworking</b> software is not new; it has been done since the very beginnings of our industry in the early 1950s. Reuse means using an entity in a different context from that in it initially had been used. This is often called <b>'black-box' reuse</b>. When an entity is modified before it is used in the new setting, it is called \"rework\" or <b>'white-box' reuse</b>.",
    "title": "Editor in Chief Introduction Reuse revisited",
    "year": 1987,
    "number": 1,
    "page": 4,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1987.229788",
    "selected": false,
    "authors": [
      {
        "name": "Bruce D. Shriver",
        "link": "https://www.computer.org/web/cshistory/bruce-shriver"
      }
    ],
    "authorsList": "Bruce D. Shriver",
    "citation": "<a target=\"_blank\" href=\"https://www.computer.org/web/cshistory/bruce-shriver\">Bruce D. Shriver</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1987.229788\">Editor in Chief Introduction Reuse revisited</a>, IEEE Software 1987, no. 1, p. 4",
    "searchText": ""
  },
  {
    "quote": "To <b>reuse</b> a software component, you <b>first have to find it</b>.",
    "title": "Clasifying Software for Reusability",
    "year": 1987,
    "number": 1,
    "page": 6,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1987.229789",
    "selected": false,
    "authors": [
      {
        "name": "Ruber Prieto-Diaz",
        "link": ""
      },
      {
        "name": "Peter Freeman",
        "link": ""
      }
    ],
    "authorsList": "Ruber Prieto-Diaz, Peter Freeman",
    "citation": "Ruber Prieto-Diaz, Peter Freeman, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1987.229789\">Clasifying Software for Reusability</a>, IEEE Software 1987, no. 1, p. 6",
    "searchText": ""
  },
  {
    "quote": "There are two levels of <b>reuse</b> to consider: the reuse of <b>ideas and knowledge</b> and the reuse of particular <b>artifacts and components</b>.",
    "title": "Clasifying Software for Reusability",
    "year": 1987,
    "number": 1,
    "page": 7,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1987.229789",
    "selected": false,
    "authors": [
      {
        "name": "Ruber Prieto-Diaz",
        "link": ""
      },
      {
        "name": "Peter Freeman",
        "link": ""
      }
    ],
    "authorsList": "Ruber Prieto-Diaz, Peter Freeman",
    "citation": "Ruber Prieto-Diaz, Peter Freeman, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1987.229789\">Clasifying Software for Reusability</a>, IEEE Software 1987, no. 1, p. 7",
    "searchText": ""
  },
  {
    "quote": "<b>[V]isual programming languages</b> ... deal with objects that do not have an inherent visual representation. This includes traditional data types such as arrays, stacks, and queues and application data types such as forms, documents, and databases. ... both programming constructs and and the rules to combine these constructs should be presented visually.",
    "title": "Visual Languages: A Tutorial and Survey",
    "year": 1987,
    "number": 1,
    "page": 29,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1987.229792",
    "selected": false,
    "authors": [
      {
        "name": "Shi-Kuo Chang",
        "link": "https://en.wikipedia.org/wiki/Shi-Kuo_Chang"
      }
    ],
    "authorsList": "Shi-Kuo Chang",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Shi-Kuo_Chang\">Shi-Kuo Chang</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1987.229792\">Visual Languages: A Tutorial and Survey</a>, IEEE Software 1987, no. 1, p. 29",
    "searchText": ""
  },
  {
    "quote": "The level of a language is inversely related to the amount of details a user must supply the computer to achieve the desired results. The scope of the language ranges from the general and widely applicable to the specific and narrowly applicable.",
    "title": "Visual Languages: A Tutorial and Survey",
    "year": 1987,
    "number": 1,
    "page": 31,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1987.229792",
    "selected": false,
    "authors": [
      {
        "name": "Shi-Kuo Chang",
        "link": "https://en.wikipedia.org/wiki/Shi-Kuo_Chang"
      }
    ],
    "authorsList": "Shi-Kuo Chang",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Shi-Kuo_Chang\">Shi-Kuo Chang</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1987.229792\">Visual Languages: A Tutorial and Survey</a>, IEEE Software 1987, no. 1, p. 31",
    "searchText": ""
  },
  {
    "quote": "<b>ABC</b> is being designed and implemented with an <b>integrated programming environment</b>. ... [T]he main design objectives ... : <b>simplicity</b>, suitability for <b>interactive use</b>, and <b>availability of tools</b> for structured programming.",
    "title": "An Alternative Simple Language and Environment for PCs",
    "year": 1987,
    "number": 1,
    "page": 56,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1987.229797",
    "selected": false,
    "authors": [
      {
        "name": "Steven Pemberton",
        "link": "http://homepages.cwi.nl/~steven/"
      }
    ],
    "authorsList": "Steven Pemberton",
    "citation": "<a target=\"_blank\" href=\"http://homepages.cwi.nl/~steven/\">Steven Pemberton</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1987.229797\">An Alternative Simple Language and Environment for PCs</a>, IEEE Software 1987, no. 1, p. 56",
    "searchText": ""
  },
  {
    "quote": "<b>Modula-2</b> has been adopted as the foundation for a number of <b>experimental systems</b>. The insights gained from those experiments will prove valuable to both current <b>designers and future users of programming systems</b>, no matter what the language. ",
    "title": "Modula-2 Experiments Will Help Future Language Designs",
    "year": 1986,
    "number": 6,
    "page": 4,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1986.234419",
    "selected": false,
    "authors": [
      {
        "name": "Robert P. Cook",
        "link": "http://professorcook.org/"
      }
    ],
    "authorsList": "Robert P. Cook",
    "citation": "<a target=\"_blank\" href=\"http://professorcook.org/\">Robert P. Cook</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1986.234419\">Modula-2 Experiments Will Help Future Language Designs</a>, IEEE Software 1986, no. 6, p. 4",
    "searchText": ""
  },
  {
    "quote": "Dijkstra's proposal to prohibit the <b>GOTO</b> was greeted with controversy: '<b>You must be kidding!</b>'",
    "title": "Structured Programming: Retrospect and Prospect",
    "year": 1986,
    "number": 6,
    "page": 61,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1986.229478",
    "selected": false,
    "authors": [
      {
        "name": "Harlan D. Mills",
        "link": "https://en.wikipedia.org/wiki/Harlan_Mills"
      }
    ],
    "authorsList": "Harlan D. Mills",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Harlan_Mills\">Harlan D. Mills</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1986.229478\">Structured Programming: Retrospect and Prospect</a>, IEEE Software 1986, no. 6, p. 61",
    "searchText": ""
  },
  {
    "quote": "<b>Windows</b> serve as the <b>conceptual framework</b> for the capture, development, organization, and highlighting of information - both textual and graphic. Attention to pure <b>aesthetics</b> is an important issue in making display interfaces understandable, memorable, and appealing to users. Consequently, window aesthetics are a factor in <b>user satisfaction</b>.",
    "title": "Pretty Pane Tiling of Pretty Windows",
    "year": 1986,
    "number": 5,
    "page": 9,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1986.229469",
    "selected": false,
    "authors": [
      {
        "name": "Jason Gait",
        "link": ""
      }
    ],
    "authorsList": "Jason Gait",
    "citation": "Jason Gait, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1986.229469\">Pretty Pane Tiling of Pretty Windows</a>, IEEE Software 1986, no. 5, p. 9",
    "searchText": ""
  },
  {
    "quote": "For every piece of business software sold, at least one illegal copy exists.",
    "title": "Software Authorization Systems",
    "year": 1986,
    "number": 5,
    "page": 34,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1986.234396",
    "selected": false,
    "authors": [
      {
        "name": "M. Malek et al.",
        "link": ""
      }
    ],
    "authorsList": "M. Malek et al.",
    "citation": "M. Malek et al., <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1986.234396\">Software Authorization Systems</a>, IEEE Software 1986, no. 5, p. 34",
    "searchText": ""
  },
  {
    "quote": "Computer science consists of at least three worlds - software, hardware and <b>firmware</b>. The world of firmware, developed to reduce <b>the semantic gap between hardware and software</b>, has multiple levels and intricacies, symmetries and quasi-symmetriess.",
    "title": "Escher: The Image of the Artist",
    "year": 1986,
    "number": 4,
    "page": 2,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1986.233745",
    "selected": false,
    "authors": [
      {
        "name": "Henry Ayling",
        "link": ""
      }
    ],
    "authorsList": "Henry Ayling",
    "citation": "Henry Ayling, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1986.233745\">Escher: The Image of the Artist</a>, IEEE Software 1986, no. 4, p. 2",
    "searchText": ""
  },
  {
    "quote": "We chose IEEE Software as our forum because <b>firmware engineering</b> involves transferring theory, principle, and technique <b>from software to firmware</b>, with appropriate adaptations.",
    "title": "Firmware Engineering: The Interaction of Microprogramming and Software Technology",
    "year": 1986,
    "number": 4,
    "page": 5,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1986.233747",
    "selected": false,
    "authors": [
      {
        "name": "Subrata Dasgupta",
        "link": "https://en.wikipedia.org/wiki/Subrata_Dasgupta"
      },
      {
        "name": "Robert A. Mueller",
        "link": ""
      }
    ],
    "authorsList": "Subrata Dasgupta, Robert A. Mueller",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Subrata_Dasgupta\">Subrata Dasgupta</a>, Robert A. Mueller, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1986.233747\">Firmware Engineering: The Interaction of Microprogramming and Software Technology</a>, IEEE Software 1986, no. 4, p. 5",
    "searchText": ""
  },
  {
    "quote": "Arguing about the definition of <b>software maintenance</b> seldom leads to maintenance advances...",
    "title": "Software Maintenance",
    "year": 1986,
    "number": 3,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1986.233403",
    "selected": false,
    "authors": [
      {
        "name": "Robert S. Arnold",
        "link": ""
      },
      {
        "name": "Roger J. Martin",
        "link": "https://www.computer.org/web/awards/karlsson-roger-martin"
      }
    ],
    "authorsList": "Robert S. Arnold, Roger J. Martin",
    "citation": "Robert S. Arnold, <a target=\"_blank\" href=\"https://www.computer.org/web/awards/karlsson-roger-martin\">Roger J. Martin</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1986.233403\">Software Maintenance</a>, IEEE Software 1986, no. 3, p. 16",
    "searchText": ""
  },
  {
    "quote": "One of the major challenges facing project software system managers and maintainers in the 1980's is <b>how  to upgrade</b> large, complex, embedded system, written a decade or more ago in unstructured languages according to <b>designs that make modification difficult</b>.",
    "title": "Using Modem Design Practices to Upgrade Aging Software Systems",
    "year": 1986,
    "number": 3,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1986.233407",
    "selected": false,
    "authors": [
      {
        "name": "Robert N. Britcher",
        "link": ""
      },
      {
        "name": "James J. Craig",
        "link": ""
      }
    ],
    "authorsList": "Robert N. Britcher, James J. Craig",
    "citation": "Robert N. Britcher, James J. Craig, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1986.233407\">Using Modem Design Practices to Upgrade Aging Software Systems</a>, IEEE Software 1986, no. 3, p. 16",
    "searchText": ""
  },
  {
    "quote": "<b>User interfaces</b> in the software environment are much <b>like spices in good recipes</b>; the right arrangement must be found or the food will not show its full flavor. Factors such as data availability and complexity and the size of the display must be carefully weighed and accounted for in the design of any software environment.",
    "title": "Display Strategies for Program Browsing: Concepts and Experiment",
    "year": 1986,
    "number": 3,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1986.233405",
    "selected": false,
    "authors": [
      {
        "name": "Ben Shneiderman",
        "link": "https://en.wikipedia.org/wiki/Ben_Shneiderman"
      },
      {
        "name": "Philip Shafer",
        "link": "https://www.linkedin.com/in/phil-shafer-b324bb86"
      },
      {
        "name": "Roland Simon",
        "link": ""
      },
      {
        "name": "Linda Weldon",
        "link": ""
      }
    ],
    "authorsList": "Ben Shneiderman, Philip Shafer, Roland Simon, Linda Weldon",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Ben_Shneiderman\">Ben Shneiderman</a>, <a target=\"_blank\" href=\"https://www.linkedin.com/in/phil-shafer-b324bb86\">Philip Shafer</a>, Roland Simon, Linda Weldon, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1986.233405\">Display Strategies for Program Browsing: Concepts and Experiment</a>, IEEE Software 1986, no. 3, p. 16",
    "searchText": ""
  },
  {
    "quote": "Knowledge-based expert systems provide a programming methodology for <b>solving  ill-structured engineering problems</b>. ... these systems also provide a flexible software development methodology-by <b>separating the knowledge base</b> from the <b>inference mechanism</b> ...",
    "title": "Knowledge-Based Expert Systems for Engineering",
    "year": 1986,
    "number": 2,
    "page": 3,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1986.232780",
    "selected": false,
    "authors": [
      {
        "name": "Duvvuru Sriram",
        "link": "https://www.nist.gov/people/ram-d-sriram"
      },
      {
        "name": "Michael D. Rychener",
        "link": ""
      }
    ],
    "authorsList": "Duvvuru Sriram, Michael D. Rychener",
    "citation": "<a target=\"_blank\" href=\"https://www.nist.gov/people/ram-d-sriram\">Duvvuru Sriram</a>, Michael D. Rychener, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1986.232780\">Knowledge-Based Expert Systems for Engineering</a>, IEEE Software 1986, no. 2, p. 3",
    "searchText": ""
  },
  {
    "quote": "Empirically comparing <b>structural test coverage metrics</b> reveals that test sets that satisfy one metric are likely to satisfy another metric as well.",
    "title": "Comparison of Structural Test Coverage Metrics",
    "year": 1986,
    "number": 2,
    "page": 80,
    "doiLink": "http://dx.doi.org/10.1109/MS.1985.230356",
    "selected": false,
    "authors": [
      {
        "name": "M.D. Weiser",
        "link": ""
      },
      {
        "name": "J.D. Gannon",
        "link": ""
      },
      {
        "name": "P.R. McMullin",
        "link": ""
      }
    ],
    "authorsList": "M.D. Weiser, J.D. Gannon, P.R. McMullin",
    "citation": "M.D. Weiser, J.D. Gannon, P.R. McMullin, <a target=\"_blank\" href=\"http://dx.doi.org/10.1109/MS.1985.230356\">Comparison of Structural Test Coverage Metrics</a>, IEEE Software 1986, no. 2, p. 80",
    "searchText": ""
  },
  {
    "quote": "<b>Multiparadigm systems</b> incorporating <b>two or more of the conventional program paradigms</b>. For example, the Loops system ... combines features of the Lisp, functional, rule-oriented, and object-oriented paradigms.",
    "title": "Guest Editor's Introduction Multiparadigm Languages and Environments",
    "year": 1986,
    "number": 1,
    "page": 6,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1986.232426",
    "selected": false,
    "authors": [
      {
        "name": "Brent Hailpern",
        "link": "https://en.wikipedia.org/wiki/Brent_Hailpern"
      }
    ],
    "authorsList": "Brent Hailpern",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Brent_Hailpern\">Brent Hailpern</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1986.232426\">Guest Editor's Introduction Multiparadigm Languages and Environments</a>, IEEE Software 1986, no. 1, p. 6",
    "searchText": ""
  },
  {
    "quote": "The <b>C++</b> programming language was designed to make the task of <b>programming more enjoyable for the serious programmer</b>.",
    "title": "Multiparadigm Research: A Survey of Nine Projects",
    "year": 1986,
    "number": 1,
    "page": 71,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1986.232757",
    "selected": false,
    "authors": [
      {
        "name": "Bjarne Stroustrup",
        "link": "https://en.wikipedia.org/wiki/Bjarne_Stroustrup"
      }
    ],
    "authorsList": "Bjarne Stroustrup",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Bjarne_Stroustrup\">Bjarne Stroustrup</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1986.232757\">Multiparadigm Research: A Survey of Nine Projects</a>, IEEE Software 1986, no. 1, p. 71",
    "searchText": ""
  },
  {
    "quote": "The SEI [Software Engineering Institute] has established its long-range goal: Transition <b>new software engineering technology</b> into <b>routine common practice</b> to achieve significant improvements in the ability of software developers and maintainers to produce and support predictably high quality systems.",
    "title": "The Software Engineering Institute: Bridging Practice and Potential",
    "year": 1985,
    "number": 6,
    "page": 7,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1985.232064",
    "selected": false,
    "authors": [
      {
        "name": "M.R. Barbacci",
        "link": ""
      },
      {
        "name": "Mary Shaw",
        "link": "https://en.wikipedia.org/wiki/Mary_Shaw_(computer_scientist)"
      }
    ],
    "authorsList": "M.R. Barbacci, Mary Shaw",
    "citation": "M.R. Barbacci, <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Mary_Shaw_(computer_scientist)\">Mary Shaw</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1985.232064\">The Software Engineering Institute: Bridging Practice and Potential</a>, IEEE Software 1985, no. 6, p. 7",
    "searchText": ""
  },
  {
    "quote": "Program <b>testing</b> consists of scattered collection of <b>rules of thumb</b>, <b>coverage</b> measures, and testing <b>philosophies</b>.",
    "title": "The Theory and Practice of Foundation Testing",
    "year": 1985,
    "number": 5,
    "page": 6,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1985.231754",
    "selected": false,
    "authors": [
      {
        "name": "William E. Howden",
        "link": "https://cseweb.ucsd.edu/~howden/"
      }
    ],
    "authorsList": "William E. Howden",
    "citation": "<a target=\"_blank\" href=\"https://cseweb.ucsd.edu/~howden/\">William E. Howden</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1985.231754\">The Theory and Practice of Foundation Testing</a>, IEEE Software 1985, no. 5, p. 6",
    "searchText": ""
  },
  {
    "quote": "Today we tend to go on for years, with tremendous effort to find that the system, which was not well understood to start with, does not work as anticipated. We <b>build systems like the Wright brothers</b> built airplanes-build the whole thing, push it off the cliff, let it crash, and start over again.",
    "title": "The Theory and Practice of Foundation Testing",
    "year": 1985,
    "number": 5,
    "page": 8,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1985.231754",
    "selected": false,
    "authors": [
      {
        "name": "William E. Howden",
        "link": "https://cseweb.ucsd.edu/~howden/"
      }
    ],
    "authorsList": "William E. Howden",
    "citation": "<a target=\"_blank\" href=\"https://cseweb.ucsd.edu/~howden/\">William E. Howden</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1985.231754\">The Theory and Practice of Foundation Testing</a>, IEEE Software 1985, no. 5, p. 8",
    "searchText": ""
  },
  {
    "quote": "When <b>programs rather than humans</b> create products, the issue of product ownership create <b>thorny legal problems</b> which the law has yet to address.",
    "title": "Who Owns What Sofware Produces?",
    "year": 1985,
    "number": 5,
    "page": 48,
    "doiLink": "https://doi.org/10.1109/MS.1985.231758",
    "selected": false,
    "authors": [
      {
        "name": "Michael C. Gemignani",
        "link": ""
      }
    ],
    "authorsList": "Michael C. Gemignani",
    "citation": "Michael C. Gemignani, <a target=\"_blank\" href=\"https://doi.org/10.1109/MS.1985.231758\">Who Owns What Sofware Produces?</a>, IEEE Software 1985, no. 5, p. 48",
    "searchText": ""
  },
  {
    "quote": "System designers should provide for such practical issues as <b>deadlock</b> avoidance, <b>scheduling</b>, necessary and sufficient primitives to allow for <b>synchronization</b>, and the combination of <b>multiprogramming</b> (a single system dividing its time and resources among many jobs) and <b>multiprocessing</b> (multiple processing units operating on a single job).",
    "title": "Operating Systems and Environments for Large-Scale Parallel Processors",
    "year": 1985,
    "number": 4,
    "page": 5,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1985.231051",
    "selected": false,
    "authors": [
      {
        "name": "Joanne L. Martin",
        "link": "https://www.linkedin.com/in/jlmconsultingllc"
      }
    ],
    "authorsList": "Joanne L. Martin",
    "citation": "<a target=\"_blank\" href=\"https://www.linkedin.com/in/jlmconsultingllc\">Joanne L. Martin</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1985.231051\">Operating Systems and Environments for Large-Scale Parallel Processors</a>, IEEE Software 1985, no. 4, p. 5",
    "searchText": ""
  },
  {
    "quote": "[T]he <b>lack of a complete theoretical basis</b> for distributed computing systems need not inhibit the development of useful systems. Even without such a basis, many <b>technical advances have been made by individuals</b>, who then <b>share them with others</b>, who in turn accept useful concepts and add further innovations.",
    "title": "Experiences with Distributed Systems",
    "year": 1985,
    "number": 3,
    "page": 5,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1985.230692",
    "selected": false,
    "authors": [
      {
        "name": "Stephen F. Lundstrom",
        "link": ""
      },
      {
        "name": "Duncan H. Lawrie",
        "link": "https://www.computer.org/web/cshistory/duncan-lawrie"
      }
    ],
    "authorsList": "Stephen F. Lundstrom, Duncan H. Lawrie",
    "citation": "Stephen F. Lundstrom, <a target=\"_blank\" href=\"https://www.computer.org/web/cshistory/duncan-lawrie\">Duncan H. Lawrie</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1985.230692\">Experiences with Distributed Systems</a>, IEEE Software 1985, no. 3, p. 5",
    "searchText": ""
  },
  {
    "quote": "In essence, <b>programming-in-the large</b> involves the two complementary activities of modularization and interface control. <b>Modularization</b> is the identification of the major system modules and the entities those modules contain, where entities are language elements that are given names, such as subprograms, data objects, and types. <b>Interface control</b> is the specification and control of the interactions among entities in different modules.",
    "title": "Ada-Based support for programming-in-the-Large",
    "year": 1985,
    "number": 2,
    "page": 58,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1985.230352",
    "selected": false,
    "authors": [
      {
        "name": "Alexander L. Wolf",
        "link": "https://en.wikipedia.org/wiki/Alexander_L._Wolf"
      },
      {
        "name": "Lori A. Clarke",
        "link": "https://en.wikipedia.org/wiki/Lori_A._Clarke"
      },
      {
        "name": "Jack C. Wileden",
        "link": "https://www.cics.umass.edu/faculty/directory/wileden_jack"
      }
    ],
    "authorsList": "Alexander L. Wolf, Lori A. Clarke, Jack C. Wileden",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Alexander_L._Wolf\">Alexander L. Wolf</a>, <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Lori_A._Clarke\">Lori A. Clarke</a>, <a target=\"_blank\" href=\"https://www.cics.umass.edu/faculty/directory/wileden_jack\">Jack C. Wileden</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1985.230352\">Ada-Based support for programming-in-the-Large</a>, IEEE Software 1985, no. 2, p. 58",
    "searchText": ""
  },
  {
    "quote": "Engineers may be able to design a <b>better interface</b> if they take into account the <b>control structures</b> underlying the <b>interface syntax</b>.The <b>syntactic</b>, <b>semantic</b>, and <b>protocol</b> aspects of the interface each have their <b>own 'complexity.'</b>.",
    "title": "Assessing the Usability of Human-Computer Interfaces",
    "year": 1985,
    "number": 2,
    "page": 74,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1985.230052",
    "selected": false,
    "authors": [
      {
        "name": "T.E. Lindquist",
        "link": ""
      }
    ],
    "authorsList": "T.E. Lindquist",
    "citation": "T.E. Lindquist, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1985.230052\">Assessing the Usability of Human-Computer Interfaces</a>, IEEE Software 1985, no. 2, p. 74",
    "searchText": ""
  },
  {
    "quote": "The use of <b>formal notation</b> does not, however, preclude that of <b>natural language</b>. In fact, mathematical specification  of a problem usually leads to a  better natural-language description. This is because formal notations naturally lead the specifier to <b>raise some questions</b> that might have remained unasked, and thus unanswered, in an informal approach.",
    "title": "On Formalism in Specifications",
    "year": 1985,
    "number": 1,
    "page": 22,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1985.229776",
    "selected": false,
    "authors": [
      {
        "name": "Bertrand Meyer",
        "link": "https://en.wikipedia.org/wiki/Bertrand_Meyer"
      }
    ],
    "authorsList": "Bertrand Meyer",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Bertrand_Meyer\">Bertrand Meyer</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1985.229776\">On Formalism in Specifications</a>, IEEE Software 1985, no. 1, p. 22",
    "searchText": ""
  },
  {
    "quote": "An <b>abstraction is a simplified description</b>, or specification, of a system that <b>emphasizes</b> some of the system's  details or properties while <b>suppressing</b> others. A good abstraction is one that <b>emphasizes details that are significant</b> to the reader or user and suppresses details that are, at least for the moment immaterial or diversionary.",
    "title": "Abstraction Techniques in Modern Programming Languages",
    "year": 1984,
    "number": 4,
    "page": 10,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1984.234384",
    "selected": false,
    "authors": [
      {
        "name": "Mary Shaw",
        "link": "https://en.wikipedia.org/wiki/Mary_Shaw_(computer_scientist)"
      }
    ],
    "authorsList": "Mary Shaw",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Mary_Shaw_(computer_scientist)\">Mary Shaw</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1984.234384\">Abstraction Techniques in Modern Programming Languages</a>, IEEE Software 1984, no. 4, p. 10",
    "searchText": ""
  },
  {
    "quote": "The greater speed of  technical change means that <b>capital investment  must be recovered more quickly</b> and that enhancement and  evolution consume proportionately more resources than in a slowly changing  technology. This contributes to the fact that <b>maintenance and enhancement</b>  are the <b>dominant costs</b> in the  software life cycle today.",
    "title": "Capital-Intensive Software Technology",
    "year": 1984,
    "number": 3,
    "page": 9,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1984.234384",
    "selected": false,
    "authors": [
      {
        "name": "Peter Wegner",
        "link": "https://en.wikipedia.org/wiki/Peter_Wegner"
      }
    ],
    "authorsList": "Peter Wegner",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Peter_Wegner\">Peter Wegner</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1984.234384\">Capital-Intensive Software Technology</a>, IEEE Software 1984, no. 3, p. 9",
    "searchText": ""
  },
  {
    "quote": "Periods of <b>rapid technological change</b> require <b>more innovation</b> and <b>greater risks</b> than periods of stability.",
    "title": "Capital-Intensive Software Technology Conclusion",
    "year": 1984,
    "number": 3,
    "page": 43,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1984.234706",
    "selected": false,
    "authors": [
      {
        "name": "Peter Wegner",
        "link": "https://en.wikipedia.org/wiki/Peter_Wegner"
      }
    ],
    "authorsList": "Peter Wegner",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Peter_Wegner\">Peter Wegner</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1984.234706\">Capital-Intensive Software Technology Conclusion</a>, IEEE Software 1984, no. 3, p. 43",
    "searchText": ""
  },
  {
    "quote": "One does not use structural engineering analysis to build a <b>sandcastle</b>. But neither does one choose the prize-winning builder of sandcastles as architect for <b>a tower block of offices</b> in a city.",
    "title": "Programming: Sorcery or Science?",
    "year": 1984,
    "number": 2,
    "page": 11,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1984.234042",
    "selected": false,
    "authors": [
      {
        "name": "Sir Charles Antony Richard Hoare",
        "link": "https://en.wikipedia.org/wiki/Tony_Hoare"
      }
    ],
    "authorsList": "Sir Charles Antony Richard Hoare",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Tony_Hoare\">Sir Charles Antony Richard Hoare</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1984.234042\">Programming: Sorcery or Science?</a>, IEEE Software 1984, no. 2, p. 11",
    "searchText": ""
  },
  {
    "quote": "I believe that in our branch of engineering, above all others, the academic ideals of <b>rigor and elegance will pay the highest dividends</b> in practical terms of reducing costs, increasing performance, and in directing the great sources of computational power on the surface of a silicon chip to the use and convenience of man.",
    "title": "Programming: Sorcery or Science?",
    "year": 1984,
    "number": 2,
    "page": 16,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1984.234042",
    "selected": false,
    "authors": [
      {
        "name": "Sir Charles Antony Richard Hoare",
        "link": "https://en.wikipedia.org/wiki/Tony_Hoare"
      }
    ],
    "authorsList": "Sir Charles Antony Richard Hoare",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Tony_Hoare\">Sir Charles Antony Richard Hoare</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1984.234042\">Programming: Sorcery or Science?</a>, IEEE Software 1984, no. 2, p. 16",
    "searchText": ""
  },
  {
    "quote": "Booch offers a software design methodology, which he calls \"<b>object-oriented design</b>\" in contrast to earlier popular methods he designates as either <b>functional</b> or <b>data-oriented</b>. In contrast to suggestions that we either identify a program's principal function and describe it in the top box in a hierarchy chart or carefully identify the patterns of data and their flows, Booch suggests, 'Define the problem, develop an informal strategy; formalize the strategy.'",
    "title": "Review of Grady Booch's book 'Software Engineering with Ada'",
    "year": 1984,
    "number": 1,
    "page": 119,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1984.233391",
    "selected": false,
    "authors": [
      {
        "name": "Peter G. Anderson",
        "link": ""
      }
    ],
    "authorsList": "Peter G. Anderson",
    "citation": "Peter G. Anderson, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1984.233391\">Review of Grady Booch's book 'Software Engineering with Ada'</a>, IEEE Software 1984, no. 1, p. 119",
    "searchText": ""
  },
  {
    "quote": "Designing a computer system is very <b>different from designing an algorithm</b>: ... the requirement - is less precisely defined more complex, and more subject to change; the system has much more internal structure - hence, many internal interfaces; and the measure of success is much less clear. The designer usually finds himself flondering in a sea of possibilities, unclear about how one choice will limit his freedom to take other choices or affect the size and performance of the entire-system.",
    "title": "Hints for Computer System Design",
    "year": 1984,
    "number": 1,
    "page": 11,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1984.233391",
    "selected": false,
    "authors": [
      {
        "name": "Butler W. Lampson",
        "link": "https://en.wikipedia.org/wiki/Butler_Lampson"
      }
    ],
    "authorsList": "Butler W. Lampson",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Butler_Lampson\">Butler W. Lampson</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1984.233391\">Hints for Computer System Design</a>, IEEE Software 1984, no. 1, p. 11",
    "searchText": ""
  },
  {
    "quote": "There probably isn't a best way to build the system or even a major part of it. Much more important is to <b>avoid choosing a terrible way</b> and to <b>have a clear division of responsibilities</b> among the parts.",
    "title": "Hints for Computer System Design",
    "year": 1984,
    "number": 1,
    "page": 11,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1984.233391",
    "selected": false,
    "authors": [
      {
        "name": "Butler W. Lampson",
        "link": "https://en.wikipedia.org/wiki/Butler_Lampson"
      }
    ],
    "authorsList": "Butler W. Lampson",
    "citation": "<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Butler_Lampson\">Butler W. Lampson</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1984.233391\">Hints for Computer System Design</a>, IEEE Software 1984, no. 1, p. 11",
    "searchText": ""
  },
  {
    "quote": "Many of the <b>challenges facing the software industry</b> today are a direct result of our <b>insatiable appetite</b> for new computer-based systems applications. Others confront us simply because we have not managed to successfully solve a large number of <b>problems that we ourselves created many years ago</b>.",
    "title": "From the Editor-in-Chief",
    "year": 1984,
    "number": 1,
    "page": 4,
    "doiLink": "http://doi.ieeecomputersociety.org/10.1109/MS.1984.233385",
    "selected": false,
    "authors": [
      {
        "name": "Bruce D. Shriver",
        "link": "https://www.computer.org/web/cshistory/bruce-shriver"
      }
    ],
    "authorsList": "Bruce D. Shriver",
    "citation": "<a target=\"_blank\" href=\"https://www.computer.org/web/cshistory/bruce-shriver\">Bruce D. Shriver</a>, <a target=\"_blank\" href=\"http://doi.ieeecomputersociety.org/10.1109/MS.1984.233385\">From the Editor-in-Chief</a>, IEEE Software 1984, no. 1, p. 4",
    "searchText": ""
  }
]